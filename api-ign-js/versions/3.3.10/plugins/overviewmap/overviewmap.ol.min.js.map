{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/overviewmap.html","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/impl/ol/js/overviewmapcontrol.js","webpack:///./src/facade/js/overviewmapcontrol.js","webpack:///./src/facade/js/overviewmap.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","translations","en","es","getLang","res","M","language","getTranslation","lang","getValue","keyPath","translation","utils","isNullOrEmpty","console","warn","split","reduce","prev","current","OverviewMapControl","options","vendorOptions","extend","layers","tipLabel","toggleDelay_","toggleDelay","collapsedButtonClass_","collapsedButtonClass","position","openedButtonClass_","openedButtonClass","fixed_","fixed","zoom_","zoom","baseLayer_","baseLayer","facadeMap_","ol","control","OverviewMap","map","html","this","update","getCollapsed","addLayers","button","element","querySelector","collapsed_","classList","contains","remove","add","addOpenEventListener","setTarget","btn","onclick","openEventListener","evt","event","target","facadeControl","facadeControl_","panel","getPanel","target_","getControlsContainer","olLayers","getLayers","forEach","layer","transparent","isVisible","olLayer","getImpl","getOL3Layer","push","newView","View","projection","proj","getProjection","code","maxZoom","minZoom","impl","resolutions","getResolutions","ovmap_","setView","undefined","length","parameters","Tile","visible","opacity","source","TileWMS","url","params","LAYERS","TRANSPARENT","TILED","addLayer","projectionExtent","getExtent","size","extent","getWidth","Array","matrixIds","z","WMTS","matrixSet","format","tileGrid","tilegrid","origin","getTopLeft","style","wrapX","getMapImpl","addControl","wasOpen_","classToggle","setTimeout","replaceNode","collapseLabel_","label_","ovmap","isRendered","updateSize","resetExtent_","addEventListener","updateBox_","removeControl","htmlElement","className","newNode","oldNode","parent","parentNode","replaceChild","isUndefined","OverviewMapImplControl","exception","Control","Promise","success","fail","template","compileSync","map_","controls_","options_","position_","collapsed","collapsible","metadata_","api","metadata","Plugin","control_","panel_","ui","Panel","addControls","addPanels","removeControls","window","plugin","M$plugin$OverviewMap","M$control$OverviewMapControl","M$impl$control$OverviewMapControl"],"mappings":"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","file":"overviewmap.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = \"<div class=\\\"m-control m-container m-overviewmap\\\">\\n</div>\";","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/impl/control/OverviewMapControl\n */\nimport { getValue } from '../../../facade/js/i18n/language';\n\nexport default class OverviewMapControl extends ol.control.OverviewMap {\n  /**\n   * @constructor\n   * @extends {ol.control.Control}\n   * @api stable\n   */\n  constructor(options, vendorOptions = {}) {\n    super(M.utils.extend({\n      layers: [],\n      tipLabel: getValue('tooltip'),\n    }, vendorOptions, true));\n\n    /**\n     * Toggle delayer\n     * @private\n     * @type {Number}\n     */\n    this.toggleDelay_ = 1000;\n    if (!M.utils.isNullOrEmpty(options.toggleDelay)) {\n      this.toggleDelay_ = options.toggleDelay;\n    }\n\n    /**\n     * Collapsed button class\n     * @private\n     * @type {String}\n     */\n    this.collapsedButtonClass_ = 'overviewmap-mundo';\n    if (!M.utils.isNullOrEmpty(options.collapsedButtonClass)) {\n      this.collapsedButtonClass_ = options.collapsedButtonClass;\n    }\n\n    if (options.position === 'TR' || options.position === 'BR') {\n      this.openedButtonClass_ = 'g-cartografia-flecha-derecha';\n    } else {\n      this.openedButtonClass_ = 'g-cartografia-flecha-izquierda';\n    }\n\n    if (!M.utils.isNullOrEmpty(options.openedButtonClass)) {\n      this.openedButtonClass_ = options.openedButtonClass;\n    }\n\n    this.fixed_ = options.fixed || false;\n\n    this.zoom_ = options.zoom || 4;\n\n    this.baseLayer_ = options.baseLayer || 'WMTS*http://www.ign.es/wmts/ign-base?*IGNBaseTodo*GoogleMapsCompatible*Mapa IGN*false*image/jpeg*false*false*true';\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {*}\n     */\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function sets de control facade of the class\n   * @function\n   * @param {M/control/OverviewMap}\n   * @api\n   */\n  set facadeControl(c) {\n    this.facadeControl_ = c;\n  }\n\n  /**\n   * This function gets de control facade of the class\n   * @function\n   * @return {M/control/OverviewMap}\n   * @api\n   */\n  get facadeControl() {\n    return this.facadeControl_;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    this.facadeMap_ = map;\n    this.update(map, html);\n    if (!this.getCollapsed()) {\n      this.addLayers();\n    }\n  }\n\n  /**\n   * Updates the controls\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   */\n  update(map, html) {\n    const button = this.element.querySelector('button');\n    if (this.collapsed_ === true) {\n      if (button.classList.contains(this.collapsedButtonClass_)) {\n        button.classList.remove(this.collapsedButtonClass_);\n      } else {\n        button.classList.add(this.collapsedButtonClass_);\n      }\n    } else if (button.classList.contains(this.openedButtonClass_)) {\n      button.classList.remove(this.openedButtonClass_);\n    } else {\n      button.classList.add(this.openedButtonClass_);\n    }\n    this.addOpenEventListener(button, map);\n    this.setTarget();\n  }\n\n  /**\n   * This method adds the open event listener\n   * @function\n   * @api\n   */\n  addOpenEventListener(btn, map) {\n    const button = btn;\n    button.onclick = this.openEventListener.bind(this);\n  }\n\n  /**\n   * This function execute the addLayers method when\n   * the control is opened.\n   * @function\n   */\n  openEventListener(evt) {\n    const event = evt;\n    if (this.getCollapsed() === true) {\n      this.addLayers();\n      event.target.onclick = null;\n    }\n  }\n\n  /**\n   * Sets the target of overviewmap control\n   * @function\n   * @api\n   */\n  setTarget() {\n    const facadeControl = this.facadeControl_;\n    if (!M.utils.isNullOrEmpty(facadeControl)) {\n      const panel = facadeControl.getPanel();\n      if (!M.utils.isNullOrEmpty(panel)) {\n        this.target_ = panel.getControlsContainer();\n      }\n    }\n  }\n\n  /**\n   *\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  getElement() {\n    return this.element;\n  }\n\n  // /**\n  //  * function remove the event 'click'\n  //  *\n  //  * @private\n  //  * @function\n  //  */\n  // addLayer_(layer) {\n  //   layer.un(M.evt.ADDED_TO_MAP, this.addLayer_, this);\n  //   this.getOverviewMap().addLayer(layer.getOL3Layer());\n  // }\n\n  /**\n   * This function adds the layers of map to overviewmap control\n   * @function\n   * @public\n   * @param {M/Map}\n   */\n  addLayers() {\n    const olLayers = [];\n    this.facadeMap_.getLayers().forEach((layer) => {\n      if (layer.transparent === false && layer.isVisible()) {\n        const olLayer = layer.getImpl().getOL3Layer();\n        if (M.utils.isNullOrEmpty(olLayer)) {\n          // layer.getImpl().on(M.evt.ADDED_TO_MAP, this.addLayer_.bind(this));\n        } else {\n          olLayers.push(olLayer);\n        }\n      }\n    });\n    let newView = {};\n    if (this.fixed_) {\n      newView = new ol.View({\n        projection: ol.proj.get(this.facadeMap_.getProjection().code),\n        maxZoom: this.zoom_,\n        minZoom: this.zoom_,\n      });\n    } else {\n      newView = new M.impl.View({\n        projection: ol.proj.get(this.facadeMap_.getProjection().code),\n        resolutions: this.facadeMap_.getResolutions(),\n      });\n    }\n\n    this.ovmap_.setView(newView);\n    if (this.baseLayer_ !== undefined && this.baseLayer_.length > 3) {\n      const parameters = this.baseLayer_.split('*');\n      if (parameters.length > 1 && (parameters[0] === 'WMS' || parameters[0] === 'WMTS')) {\n        if (parameters[0] === 'WMS') {\n          const layer = new ol.layer.Tile({\n            visible: true,\n            opacity: 1,\n            source: new ol.source.TileWMS({\n              url: parameters[2],\n              params: {\n                LAYERS: parameters[3],\n                /*\n                FORMAT: 'image/png',\n                VERSION: '1.1.1',\n                */\n                TRANSPARENT: false,\n                TILED: true,\n              },\n            }),\n          });\n\n          this.ovmap_.addLayer(layer);\n        } else {\n          const projection = ol.proj.get(this.facadeMap_.getProjection().code);\n          const projectionExtent = projection.getExtent();\n          const size = ol.extent.getWidth(projectionExtent) / 256;\n          const resolutions = new Array(14);\n          const matrixIds = new Array(14);\n          for (let z = 0; z < 14; z += 1) {\n            // generate resolutions and matrixIds arrays for this WMTS\n            resolutions[z] = size / (2 ** z);\n            matrixIds[z] = z;\n          }\n\n          const layer = new ol.layer.Tile({\n            opacity: 1,\n            source: new ol.source.WMTS({\n              url: parameters[1],\n              layer: parameters[2],\n              matrixSet: parameters[3],\n              format: parameters[6],\n              projection,\n              tileGrid: new ol.tilegrid.WMTS({\n                origin: ol.extent.getTopLeft(projectionExtent),\n                resolutions,\n                matrixIds,\n              }),\n              style: 'default',\n              wrapX: true,\n            }),\n          });\n\n          this.ovmap_.addLayer(layer);\n        }\n      } else {\n        this.ovmap_.addLayer(olLayers[0]);\n      }\n    } else {\n      this.ovmap_.addLayer(olLayers[0]);\n    }\n\n    this.facadeMap_.getMapImpl().addControl(this);\n    this.wasOpen_ = true;\n  }\n\n  /**\n   * @overrides ol.control.Control.prototype\n   */\n  handleToggle_() {\n    this.classToggle(this.element, 'ol-collapsed');\n    const button = this.element.querySelector('button');\n    this.classToggle(button, this.openedButtonClass_);\n    this.classToggle(button, this.collapsedButtonClass_);\n\n    setTimeout(() => {\n      if (this.collapsed_) {\n        this.replaceNode(this.collapseLabel_, this.label_);\n      } else {\n        this.replaceNode(this.label_, this.collapseLabel_);\n      }\n      this.collapsed_ = !this.collapsed_;\n\n      // manage overview map if it had not been rendered before and control\n      // is expanded\n      const ovmap = this.ovmap_;\n\n      if (!this.collapsed_ && !ovmap.isRendered()) {\n        ovmap.updateSize();\n        this.resetExtent_();\n        ovmap.addEventListener('postrender', (event) => {\n          this.updateBox_();\n        });\n      }\n    }, this.toggleDelay_);\n  }\n\n  /**\n   * This function destroys this control, cleaning the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  destroy() {\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n\n  classToggle(htmlElement, className) {\n    const classList = htmlElement.classList;\n    if (classList.contains(className)) {\n      classList.remove(className);\n    } else {\n      classList.add(className);\n    }\n  }\n\n  replaceNode(newNode, oldNode) {\n    const parent = oldNode.parentNode;\n    if (parent) {\n      parent.replaceChild(newNode, oldNode);\n    }\n  }\n}\n","/**\n * @module M/control/OverviewMapControl\n */\n\nimport OverviewMapImplControl from 'impl/overviewmapcontrol';\nimport template from 'templates/overviewmap';\nimport { getValue } from './i18n/language';\n\nexport default class OverviewMapControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(options = {}, vendorOptions = {}) {\n    if (M.utils.isUndefined(OverviewMapImplControl)) {\n      M.exception(getValue('exception.impl'));\n    }\n    const impl = new OverviewMapImplControl(options, vendorOptions);\n    super(impl, 'OverviewMap');\n\n    impl.facadeControl = this;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      success(html);\n    });\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof OverviewMapControl;\n  }\n}\n","/**\n * @module M/plugin/OverviewMap\n */\nimport 'assets/css/overviewmap';\nimport OverviewMapControl from './overviewmapcontrol';\nimport api from '../../api';\n\nexport default class OverviewMap extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options, vendorOptions) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Options of the plugin\n     * @private\n     * @type {Object}\n     */\n    this.options_ = options || {};\n\n    /**\n     * Position of the plugin\n     * @private\n     * @type {String}\n     */\n    this.position_ = options.position !== undefined ? options.position : 'BR';\n\n    /**\n     * Fixed zoom\n     * @private\n     * @type {Boolean}\n     */\n    this.fixed_ = options.fixed !== undefined ? options.fixed : false;\n\n    /**\n     * Zoom to make fixed\n     * @private\n     * @type {Number}\n     */\n    this.zoom_ = options.zoom !== undefined ? options.zoom : '';\n\n    /**\n     * Zoom to make fixed\n     * @private\n     * @type {Number}\n     */\n    this.baseLayer_ = options.baseLayer !== undefined ? options.baseLayer : 'WMTS*http://www.ign.es/wmts/ign-base?*IGNBaseTodo*GoogleMapsCompatible*Mapa IGN*false*image/jpeg*false*false*true';\n\n    /**\n     * Vendor options\n     * @public\n     * @type {Object}\n     */\n    this.vendorOptions = {\n      collapsed: options.collapsed,\n      collapsible: options.collapsible,\n    };\n\n    if (options !== undefined && options.collapsed !== undefined && (options.collapsed === false || options.collapsed === 'false')) {\n      this.vendorOptions.collapsed = false;\n    }\n\n    if (options !== undefined && options.collapsible !== undefined && (options.collapsible === false || options.collapsible === 'false')) {\n      this.vendorOptions.collapsible = false;\n    }\n\n    /**\n     * Name of the plugin\n     * @public\n     * @type {String}\n     */\n    this.name = 'overviewmap';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.control_ = new OverviewMapControl(this.options_, this.vendorOptions);\n    this.controls_.push(this.control_);\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelOverviewMap', {\n      className: 'm-overviewmap-panel',\n      position: M.ui.position[this.position_],\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.map_.removeControls([this.control_]);\n    [this.map_, this.control_, this.panel_] = [null, null, null];\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.position_}*!${this.vendorOptions.collapsed}*!${this.vendorOptions.collapsible}*!${this.fixed_}*!${this.zoom_}*!${this.baseLayer_}`;\n  }\n}\n","import M$plugin$OverviewMap from './/facade/js/overviewmap';\nimport M$control$OverviewMapControl from './/facade/js/overviewmapcontrol';\nimport M$impl$control$OverviewMapControl from './/impl/ol/js/overviewmapcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.OverviewMap = M$plugin$OverviewMap;\nwindow.M.control.OverviewMapControl = M$control$OverviewMapControl;\nwindow.M.impl.control.OverviewMapControl = M$impl$control$OverviewMapControl;\n"],"sourceRoot":""}