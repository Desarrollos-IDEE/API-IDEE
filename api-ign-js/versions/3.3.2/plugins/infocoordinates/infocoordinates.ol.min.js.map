{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/infocoordinates.html","webpack:///./src/impl/ol/js/infocoordinatescontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/infocoordinatescontrol.js","webpack:///./src/facade/js/infocoordinates.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","InfocoordinatesControl","M","impl","Control","map","html","this","facadeMap_","feature","SRStarget","formatGMS","decimalGEOcoord","decimalUTMcoord","numPoint","getId","coordinatesFeature","getAttribute","SRSfeature","coordinatesGEOoutput","ol","proj","transform","zone","zoneCalc","res","coordinatesUTMoutput","toFixed","coordinateGGMMSS","coordinate","toStringHDMS","projectionGEO","coordinatesGEO","latitude","substr","longitude","coordinatesDEClongitude","coord","srcMapa","coordinatesEPSG4528","bbox","url","remote","box","code","currProj","transformExtent","dblClickInteraction_","setActive","getMapImpl","on","evt","customEvt","CustomEvent","detail","bubbles","getContainer","dispatchEvent","removeEventListener","translations","en","es","getLang","language","getTranslation","lang","getValue","keyPath","translation","utils","isNullOrEmpty","console","warn","split","reduce","prev","current","isUndefined","InfocoordinatesImplControl","exception","map_","numTabs","layerFeatures","layer","Vector","template","compileSync","string","options","parseToHtml","templateVars","vars","htmlText","Handlebars","compile","templateFn","stringToHtml","Promise","success","fail","jsonp","title","point","datum","formatCoordinates","coordX","coordY","altitude","removePoint","removeAllPoints","importAllPoints","displayONAllPoints","displayOFFAllPoints","addLayers","panel_","SHOW","activate","HIDE","deactivate","querySelector","addEventListener","displayAllPoints","changeSelectSRSorChangeFormat","CLICK","addPoint","document","body","style","cursor","getFeatureHandler","un","getElementById","removeAttribute","classList","remove","getElementsByClassName","length","getOverlays","array_","removeAllDisplaysPoints","tabsDiv","buttonTab","createElement","buttonTabText","createTextNode","appendChild","add","setAttribute","altitudeFromWCSservice","coordinates","featurePoint","Feature","getProjection","scrollTop","scrollHeight","altitudeBox","innerHTML","getImpl","readAltitudeFromWCSservice","then","response","undefined","text","parseFloat","replace","openTabFromTab","addFeatures","setZIndex","openTab","olMap","facadeControl","drawingLayer","drawLayer","getOL3Layer","hideTextPoint","removeChild","downloadingTemplate","select","interaction","Select","wrapX","layers","e","target","getFeatures","getArray","onSelect","addInteraction","edit","Modify","features","onModify","Point","icon","form","NONE","class","fontsize","radius","color","fill","pointDisable","rotation","rotate","offset","opacity","stroke","width","displayPoint","elemento","setStyle","getFeatureById","pos","impl_","features_","olFeature_","values_","textHTML","helpTooltipElement","helpTooltip_","Overlay","element","setPosition","addOverlay","allTabsLinks","parseInt","textContent","displayXYcoordinates","featureSelected","pointBox","latitudeBox","longitudeBox","zoneBox","selectSRS","log","checked","pointDataOutput","getCoordinates","NumPoint","projectionUTM","formatUTMCoordinate","coordinatesUTM","selectFeature","activateTab","displayZcoordinate","tablinkActive","parentNode","featureSelect","removeFeatures","lastTablink","lastChild","printDocument","push","toBlobType","Blob","type","f","Date","titulo","concat","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","descargarArchivo","varUTM","calculateUTMcoordinates","Altitude","className","removeOverlay","contenidoEnBlob","nombreArchivo","reader","FileReader","onload","event","save","href","result","download","clicEvent","MouseEvent","window","URL","webkitURL","revokeObjectURL","readAsDataURL","control","removeLayers","join","Infocoordinates","Plugin","decimalGEOcoord_","decimalUTMcoord_","name_","controls_","control_","positions","position_","includes","position","metadata_","api","metadata","ui","Panel","collapsed","collapsible","collapsedButtonClass","tooltip","addControls","addPanels","removeControls","removeLayerFeatures","plugin","M$plugin$Infocoordinates","M$control$InfocoordinatesControl","M$impl$control$InfocoordinatesControl"],"mappings":"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","file":"infocoordinates.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = \"<div class=\\\"m-control m-container m-infocoordinates\\\">\\r\\n\\r\\n    <div class=\\\"div-m-infocoordinates-panel\\\">\\r\\n\\r\\n        <div class=\\\"m-infocoordinates-title\\\">\\r\\n            <p id=\\\"titleInfo\\\" class=\\\"m-infocoordinates-titleInfo\\\">{{translations.title}}</p>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"m-infocoordinates-content\\\">\\r\\n            <!-- Tabs -->\\r\\n            <div class=\\\"m-infocoordinates-tabs\\\">\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <!-- Tab content -->\\r\\n            <div id=\\\"tabContent\\\" class='m-infocoordinates-tabContent'>\\r\\n                <table>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>{{translations.point}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-point\\\">--</td>\\r\\n                            <td><button class=\\\"infocoordinates-bin2 noDisplay\\\" id=\\\"m-infocoordinates-buttonRemovePoint\\\" title=\\\"{{translations.removePoint}}\\\"></button></td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{translations.datum}}</td>\\r\\n                            <td>\\r\\n                                <select id=\\\"m-infocoordinates-comboDatum\\\" class=\\\"m-infocoordinates-comboDatum\\\" disabled>\\r\\n                                    <option value=\\\"EPSG:25828\\\">EPSG:25828</option>\\r\\n                                    <option value=\\\"EPSG:25829\\\">EPSG:25829</option>\\r\\n                                    <option value=\\\"EPSG:25830\\\" selected>EPSG:25830</option>\\r\\n                                    <option value=\\\"EPSG:25831\\\">EPSG:25831</option>\\r\\n                                    <option value=\\\"EPSG:3857\\\">EPSG:3857</option>\\r\\n                                </select>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{translations.latitude}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-latitude\\\">--</td>\\r\\n                        <tr>\\r\\n                            <td>{{translations.longitude}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-longitude\\\">--</td>\\r\\n\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td></td>\\r\\n                            <td><input id=\\\"m-infocoordinates-buttonConversorFormat\\\" type=\\\"checkbox\\\" disabled>{{translations.formatCoordinates}}</td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr>\\r\\n                            <td>{{translations.zone}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-zone\\\">--</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{translations.coordX}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-coordX\\\">--</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                            <td>{{translations.coordY}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-coordY\\\">--</td>\\r\\n                        </tr>\\r\\n\\r\\n                        <tr>\\r\\n                            <td>{{translations.altitude}}</td>\\r\\n                            <td id=\\\"m-infocoordinates-altitude\\\">--</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <div class=\\\"m-infocoordinates-div-buttonRemoveAllPoints noDisplay\\\">\\r\\n                <button class=\\\"infocoordinates-bin2\\\" id=\\\"m-infocoordinates-buttonRemoveAllPoints\\\" title=\\\"{{translations.removeAllPoints}}\\\"></button>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"m-infocoordinates-div-buttonImportAllPoints noDisplay\\\">\\r\\n\\r\\n                <button class=\\\"icon-infocoordinates-file\\\" id=\\\"m-infocoordinates-buttonImportAllPoints\\\" title=\\\"{{translations.importAllPoints}}\\\"></button>\\r\\n\\r\\n                <!-- <select id=\\\"m-infocoordinates-projectionPrint\\\" class=\\\"m-infocoordinates-projectionPrint\\\">\\r\\n                    <option value=\\\"EPSG:25828\\\">EPSG:25828</option>\\r\\n                    <option value=\\\"EPSG:25829\\\">EPSG:25829</option>\\r\\n                    <option value=\\\"EPSG:25830\\\">EPSG:25830</option>\\r\\n                    <option value=\\\"EPSG:25831\\\">EPSG:25831</option>\\r\\n                    <option value=\\\"EPSG:3857\\\">EPSG:3857</option>\\r\\n                    <option value=\\\"EPSG:4326\\\">EPSG:4326</option>\\r\\n                    <option value=\\\"EPSG:4258\\\">EPSG:4258</option>\\r\\n                </select> -->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"m-infocoordinates-div-buttonDisplayAllPoints noDisplay\\\">\\r\\n\\r\\n                <button class=\\\"icon-infocoordinates-displayON\\\" id=\\\"m-infocoordinates-buttonDisplayAllPoints\\\" title=\\\"{{translations.displayONAllPoints}}\\\"></button>\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\";","/* eslint-disable no-console */\r\n/**\r\n * @module M/impl/control/InfocoordinatesControl\r\n */\r\nexport default class InfocoordinatesControl extends M.impl.Control {\r\n  /**\r\n   * This function adds the control to the specified map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the plugin\r\n   * @param {HTMLElement} html of the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map, html) {\r\n    this.facadeMap_ = map;\r\n    super.addTo(map, html);\r\n  }\r\n\r\n  getCoordinates(feature, SRStarget, formatGMS, decimalGEOcoord, decimalUTMcoord) {\r\n    const NODATA = '--';\r\n    let numPoint = feature.getId();\r\n    let coordinatesFeature = feature.getAttribute('coordinates');\r\n    let SRSfeature = feature.getAttribute('EPSGcode');\r\n    let coordinatesGEOoutput = ol.proj.transform(coordinatesFeature, SRSfeature, 'EPSG:4326');\r\n    const zone = this.zoneCalc(coordinatesGEOoutput[0]);\r\n    let res = {\r\n      'NumPoint': numPoint,\r\n      'projectionGEO': {\r\n        'code': NODATA,\r\n        'coordinatesGEO': {\r\n          'longitude': NODATA,\r\n          'latitude': NODATA,\r\n        },\r\n      },\r\n      'projectionUTM': {\r\n        'code': NODATA,\r\n        'zone': NODATA,\r\n        'coordinatesUTM': {\r\n          'coordX': NODATA,\r\n          'coordY': NODATA\r\n        }\r\n      }\r\n    };\r\n\r\n    if (SRStarget != null) {\r\n      let coordinatesUTMoutput = ol.proj.transform(coordinatesFeature, SRSfeature, SRStarget);\r\n      res = {\r\n        'NumPoint': numPoint,\r\n        'projectionGEO': {\r\n          'code': SRStarget,\r\n          'coordinatesGEO': {\r\n            'longitude': coordinatesGEOoutput[0].toFixed(decimalGEOcoord),\r\n            'latitude': coordinatesGEOoutput[1].toFixed(decimalGEOcoord),\r\n          },\r\n        },\r\n        'projectionUTM': {\r\n          'code': SRStarget,\r\n          'zone': zone,\r\n          'coordinatesUTM': {\r\n            'coordX': coordinatesUTMoutput[0].toFixed(decimalUTMcoord),\r\n            'coordY': coordinatesUTMoutput[1].toFixed(decimalUTMcoord)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (formatGMS == true) {\r\n        let coordinateGGMMSS = ol.coordinate.toStringHDMS(coordinatesGEOoutput, 2);\r\n        res.projectionGEO.coordinatesGEO.latitude = coordinateGGMMSS.substr(0, 17);\r\n        res.projectionGEO.coordinatesGEO.longitude = coordinateGGMMSS.substr(17);\r\n      }\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n\r\n  zoneCalc(coordinatesDEClongitude) {\r\n    let zone;\r\n    if (coordinatesDEClongitude > 0 && coordinatesDEClongitude <= 6) {\r\n      zone = 31\r\n    } else if (coordinatesDEClongitude >= -6 && coordinatesDEClongitude <= 0) {\r\n      zone = 30;\r\n    } else if (coordinatesDEClongitude >= -12 && coordinatesDEClongitude < -6) {\r\n      zone = 29;\r\n    } else if (coordinatesDEClongitude >= -18 && coordinatesDEClongitude < -12) {\r\n      zone = 28\r\n    } else if (coordinatesDEClongitude >= -24 && coordinatesDEClongitude < -18) {\r\n      zone = 27\r\n    } else {\r\n      zone = null\r\n    }\r\n    return zone;\r\n  }\r\n\r\n  readAltitudeFromWCSservice(coord, srcMapa) {\r\n    // 1.- transformo las coordenadas a EPSG4258 ya que el servicio WCS es en ese srs\r\n    let coordinatesEPSG4528 = ol.proj.transform(coord, srcMapa, 'EPSG:4258')\r\n\r\n    // 2.- me genero un bbox de las coordenadas\r\n    let bbox = [\r\n      [coordinatesEPSG4528[0], coordinatesEPSG4528[1]],\r\n      [coordinatesEPSG4528[0] + 0.000001, coordinatesEPSG4528[1] + 0.000001]\r\n    ]\r\n\r\n    // 3.- lanzo el servicio y el método devolverá un texto que lo recogerá una promesa\r\n    const PROFILE_URL = 'https://servicios.idee.es/wcs-inspire/mdt?request=GetCoverage&bbox=';\r\n    const PROFILE_URL_SUFFIX = '&service=WCS&version=1.0.0&coverage=Elevacion4258_5&' +\r\n      'interpolationMethod=bilinear&crs=EPSG%3A4258&format=ArcGrid&width=2&height=2';\r\n    const url = `${PROFILE_URL}${bbox}${PROFILE_URL_SUFFIX}`;\r\n    return M.remote.get(url)\r\n  }\r\n\r\n  transform(box, code, currProj) {\r\n    return ol.proj.transform(box, code, currProj);\r\n  }\r\n\r\n  transformExt(box, code, currProj) {\r\n    return ol.proj.transformExtent(box, code, currProj);\r\n  }\r\n\r\n  activateClick(map) {\r\n    // desactivo el zoom al dobleclick\r\n    this.dblClickInteraction_.setActive(false);\r\n\r\n    // añado un listener al evento dblclick\r\n    const olMap = map.getMapImpl();\r\n    olMap.on('dblclick', (evt) => {\r\n      // disparo un custom event con las coordenadas del dobleclick\r\n      const customEvt = new CustomEvent('mapclicked', {\r\n        detail: evt.coordinate,\r\n        bubbles: true,\r\n      });\r\n      map.getContainer().dispatchEvent(customEvt);\r\n    });\r\n  }\r\n\r\n  deactivateClick(map) {\r\n    // activo el zoom al dobleclick\r\n    this.dblClickInteraction_.setActive(true);\r\n\r\n    // elimino el listener del evento\r\n    map.getMapImpl().removeEventListener('dblclick');\r\n  }\r\n}\r\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/* eslint-disable no-console */\r\n/**\r\n * @module M/control/InfocoordinatesControl\r\n */\r\nimport InfocoordinatesImplControl from 'impl/infocoordinatescontrol';\r\nimport template from 'templates/infocoordinates';\r\nimport { getValue } from './i18n/language';\r\n\r\n\r\n\r\nexport default class InfocoordinatesControl extends M.Control {\r\n  /**\r\n   * @classdesc\r\n   * Main constructor of the class. Creates a PluginControl\r\n   * control\r\n   *\r\n   * @constructor\r\n   * @extends {M.Control}\r\n   * @api stable\r\n   */\r\n  constructor(decimalGEOcoord, decimalUTMcoord) {\r\n\r\n    // 1. checks if the implementation can create PluginControl\r\n    if (M.utils.isUndefined(InfocoordinatesImplControl)) {\r\n      M.exception(getValue('expection.impl'));\r\n    }\r\n    // 2. implementation of this control\r\n    const impl = new InfocoordinatesImplControl();\r\n    super(impl, 'Infocoordinates');\r\n    this.map_ = null;\r\n    this.numTabs = 0;\r\n    this.layerFeatures = new M.layer.Vector();\r\n    this.layerFeatures.name = 'infocoordinatesLayerFeatures';\r\n    this.decimalGEOcoord = decimalGEOcoord;\r\n    this.decimalUTMcoord = decimalUTMcoord;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * This function creates the view\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map to add the control\r\n   * @api stable\r\n   */\r\n  createView(map) {\r\n    this.map_ = map;\r\n    if (!M.template.compileSync) { // JGL: retrocompatibilidad Mapea4\r\n      M.template.compileSync = (string, options) => {\r\n        let templateCompiled;\r\n        let templateVars = {};\r\n        let parseToHtml;\r\n        if (!M.utils.isUndefined(options)) {\r\n          templateVars = M.utils.extends(templateVars, options.vars);\r\n          parseToHtml = options.parseToHtml;\r\n        }\r\n        const templateFn = Handlebars.compile(string);\r\n        const htmlText = templateFn(templateVars);\r\n        if (parseToHtml !== false) {\r\n          templateCompiled = M.utils.stringToHtml(htmlText);\r\n        } else {\r\n          templateCompiled = htmlText;\r\n        }\r\n        return templateCompiled;\r\n      };\r\n    }\r\n\r\n    return new Promise((success, fail) => {\r\n      let options = {\r\n        jsonp: true,\r\n        vars: {\r\n          translations: {\r\n            title: getValue('title'),\r\n            point: getValue('point'),\r\n            datum: getValue('datum'),\r\n            latitude: getValue('latitude'),\r\n            longitude: getValue('longitude'),\r\n            formatCoordinates: getValue('formatCoordinates'),\r\n            zone: getValue('zone'),\r\n            coordX: getValue('coordX'),\r\n            coordY: getValue('coordY'),\r\n            altitude: getValue('altitude'),\r\n            removePoint: getValue('removePoint'),\r\n            removeAllPoints: getValue('removeAllPoints'),\r\n            importAllPoints: getValue('importAllPoints'),\r\n            displayONAllPoints: getValue('displayONAllPoints'),\r\n            displayOFFAllPoints: getValue('displayOFFAllPoints')\r\n          }\r\n        }\r\n      };\r\n      const html = M.template.compileSync(template, options);\r\n      // Añadir código dependiente del DOM\r\n\r\n      this.map_.addLayers(this.layerFeatures);\r\n      this.panel_.on(M.evt.SHOW, this.activate, this);\r\n      this.panel_.on(M.evt.HIDE, this.deactivate, this);\r\n\r\n      success(html);\r\n      html.querySelector('#m-infocoordinates-buttonRemoveAllPoints').addEventListener('click', this.removeAllPoints.bind(this));\r\n      html.querySelector('#m-infocoordinates-buttonImportAllPoints').addEventListener('click', this.importAllPoints.bind(this));\r\n      html.querySelector('#m-infocoordinates-buttonDisplayAllPoints').addEventListener('click', this.displayAllPoints.bind(this));\r\n      html.querySelector('#m-infocoordinates-comboDatum').addEventListener('change', this.changeSelectSRSorChangeFormat.bind(this));\r\n      html.querySelector('#m-infocoordinates-buttonConversorFormat').addEventListener('change', this.changeSelectSRSorChangeFormat.bind(this));\r\n      html.querySelector('#m-infocoordinates-buttonRemovePoint').addEventListener('click', this.removePoint.bind(this));\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * This function is called on the control activation\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  activate() {\r\n    this.map_.on(M.evt.CLICK, this.addPoint, this);\r\n    document.body.style.cursor = 'crosshair';\r\n    this.map_.getFeatureHandler().deactivate();\r\n  }\r\n\r\n\r\n  /**\r\n   * This function is called on the control deactivation\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  deactivate() {\r\n    this.map_.un(M.evt.CLICK, this.addPoint, this);\r\n    document.body.style.cursor = 'default';\r\n    this.map_.getFeatureHandler().activate();\r\n  }\r\n\r\n\r\n\r\n  addPoint(evt) {\r\n    let numPoint = this.numTabs + 1;\r\n    document.getElementById('m-infocoordinates-comboDatum').removeAttribute('disabled');\r\n    document.getElementById('m-infocoordinates-buttonConversorFormat').removeAttribute('disabled');\r\n    document.getElementById('m-infocoordinates-buttonRemovePoint').classList.remove('noDisplay');\r\n    document.getElementsByClassName('m-infocoordinates-div-buttonRemoveAllPoints')[0].classList.remove('noDisplay');\r\n    document.getElementsByClassName('m-infocoordinates-div-buttonImportAllPoints')[0].classList.remove('noDisplay');\r\n    document.getElementsByClassName('m-infocoordinates-div-buttonDisplayAllPoints')[0].classList.remove('noDisplay');\r\n\r\n    // Eliminamos las etiquetas de los puntos\r\n    if (document.getElementsByClassName('icon-infocoordinates-displayON').length === 0 && this.map_.getMapImpl().getOverlays().array_.length > 0) {\r\n      this.removeAllDisplaysPoints();\r\n    }\r\n\r\n\r\n    // Agrego la tab que es un botón con el número de punto\r\n    let tabsDiv = document.getElementsByClassName('m-infocoordinates-tabs')[0];\r\n    let buttonTab = document.createElement('button');\r\n    let buttonTabText = document.createTextNode(numPoint);\r\n    buttonTab.appendChild(buttonTabText);\r\n    buttonTab.classList.add('tablinks');\r\n    buttonTab.setAttribute('id', `tablink${numPoint}`);\r\n    tabsDiv.appendChild(buttonTab);\r\n\r\n    // cojo las coordenadas del punto pinchado\r\n    let coordinates = evt.coord;\r\n\r\n    //Agrego la feature\r\n    let featurePoint = new M.Feature(numPoint, {\r\n      \"type\": \"Feature\",\r\n      \"id\": numPoint,\r\n      \"geometry\": {\r\n        \"type\": \"Point\",\r\n        \"coordinates\": [coordinates[0], coordinates[1]]\r\n      },\r\n      \"properties\": {\r\n        \"EPSGcode\": this.map_.getProjection().code,\r\n        \"coordinates\": [coordinates[0], coordinates[1]]\r\n      }\r\n\r\n    });\r\n\r\n    // Ubico el scroller centrado en el ultimo botón añadido\r\n    tabsDiv.scrollTop = tabsDiv.scrollHeight;\r\n\r\n    //Altura\r\n    let altitudeFromWCSservice;\r\n    let altitudeBox = document.getElementById('m-infocoordinates-altitude');\r\n    let promesa = new Promise((success, fail) => {\r\n      altitudeBox.innerHTML = getValue('readingAltitude');\r\n      altitudeFromWCSservice = this.getImpl().readAltitudeFromWCSservice(coordinates, this.map_.getProjection().code)\r\n      success(altitudeFromWCSservice);\r\n    });\r\n\r\n    promesa.then(response => {\r\n      altitudeFromWCSservice = response.text.split(/\\n/)[5].split(' ')[1];\r\n      if (altitudeFromWCSservice == undefined) {\r\n        altitudeFromWCSservice = getValue('noDatafromWCS');\r\n      }\r\n      featurePoint.setAttribute('Altitude', altitudeFromWCSservice);\r\n      altitudeBox.innerHTML = `${parseFloat(altitudeFromWCSservice).toFixed(2)}`.replace('.', ',');\r\n      buttonTab.addEventListener('click', () => this.openTabFromTab(numPoint));\r\n    })\r\n\r\n\r\n    this.layerFeatures.addFeatures([featurePoint]);\r\n    this.layerFeatures.setZIndex(999);\r\n    this.openTab(numPoint)\r\n    this.numTabs = numPoint;\r\n  }\r\n\r\n  activateSelection() {\r\n    const olMap = this.facadeMap_.getMapImpl();\r\n    const facadeControl = this.facadeControl;\r\n    const drawingLayer = facadeControl.drawLayer.getImpl().getOL3Layer();\r\n\r\n    this.facadeControl.hideTextPoint();\r\n\r\n    if (document.querySelector('.m-geometrydraw>#downloadFormat') !== null) {\r\n      document.querySelector('.m-geometrydraw').removeChild(facadeControl.downloadingTemplate);\r\n    }\r\n\r\n    if (drawingLayer) {\r\n      this.select = new ol.interaction.Select({\r\n        wrapX: false,\r\n        layers: [drawingLayer],\r\n      });\r\n\r\n      this.select.on('select', (e) => {\r\n        if (e.target.getFeatures().getArray().length > 0) {\r\n          this.facadeControl.onSelect(e);\r\n        }\r\n      });\r\n\r\n      olMap.addInteraction(this.select);\r\n\r\n      this.edit = new ol.interaction.Modify({ features: this.select.getFeatures() });\r\n      this.edit.on('modifyend', (evt) => {\r\n        this.facadeControl.onModify();\r\n      });\r\n      olMap.addInteraction(this.edit);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  selectFeature(numPoint) {\r\n    this.point = new M.style.Point({\r\n      icon: {\r\n        form: M.style.form.NONE,\r\n        class: '+',\r\n        fontsize: 1.5,\r\n        radius: 10,\r\n        color: 'black',\r\n        fill: 'white',\r\n      },\r\n    });\r\n\r\n    this.pointDisable = new M.style.Point({\r\n      radius: 5,\r\n      icon: {\r\n        form: 'none',\r\n        class: '+',\r\n        radius: 15,\r\n        rotation: 0,\r\n        rotate: false,\r\n        offset: [0, 0],\r\n        color: '#2690e7',\r\n        opacity: 1,\r\n        stroke: {\r\n          width: 20\r\n        }\r\n      },\r\n    });\r\n\r\n    // Calculamos el número de elementos de numPoints que hay\r\n    const countPoints = document.getElementsByClassName('contenedorPunto').length + document.getElementsByClassName('contenedorPuntoSelect').length;\r\n    // Si el numPoint que se pasa es mayor que la cantidad de numPoints que existe, quiere decir que es nuevo, se añade.\r\n    // En el caso de que no sea nuevo, se modifica el estilo del punto.\r\n    if (numPoint > countPoints) {\r\n      this.displayPoint(numPoint);\r\n    } else {\r\n      document.getElementsByClassName('contenedorPuntoSelect')[0].classList.replace('contenedorPuntoSelect', 'contenedorPunto');\r\n      document.getElementsByClassName('contenedorPunto')[document.getElementsByClassName('contenedorPunto').length - numPoint].classList.replace('contenedorPunto', 'contenedorPuntoSelect');\r\n\r\n      // Eliminamos las etiquetas de los puntos\r\n      if (document.getElementsByClassName('icon-infocoordinates-displayON').length === 0 && this.map_.getMapImpl().getOverlays().array_.length > 0) {\r\n        this.removeAllDisplaysPoints();\r\n      }\r\n    }\r\n\r\n    this.layerFeatures.getFeatures().map((elemento) => (elemento.setStyle(this.pointDisable)));\r\n    let featureSelected = this.layerFeatures.getFeatureById(numPoint);\r\n    featureSelected.setStyle(this.point);\r\n  }\r\n\r\n  displayPoint(numPoint) {\r\n    var pos = this.layerFeatures.impl_.features_[numPoint - 1].impl_.olFeature_.values_.coordinates;\r\n\r\n    // Modificamos el color del estilo de los puntos anteriores.\r\n    if (numPoint > 1) {\r\n      document.getElementsByClassName('contenedorPuntoSelect')[0].classList.replace('contenedorPuntoSelect', 'contenedorPunto');\r\n    }\r\n\r\n    const textHTML = `<div class=\"contenedorPuntoSelect\">\r\n                <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style=\"font-weight: bold; font-family: arial;\">${numPoint}</td></b>\r\n                      </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n      </div>`\r\n\r\n    const helpTooltipElement = M.template.compileSync(textHTML, {\r\n      jsonp: true,\r\n      vars: {\r\n        translations: getValue('text'),\r\n      },\r\n    });\r\n\r\n    this.helpTooltip_ = new ol.Overlay({\r\n      element: helpTooltipElement,\r\n      offset: [10, -5],\r\n    });\r\n\r\n    this.helpTooltip_.setPosition(pos);\r\n    this.map_.getMapImpl().addOverlay(this.helpTooltip_);\r\n  }\r\n\r\n\r\n  activateTab(numPoint) {\r\n    let allTabsLinks = document.getElementsByClassName('tablinks');\r\n    for (let i = 0; i < allTabsLinks.length; i++) {\r\n      allTabsLinks[i].classList.remove('active')\r\n    }\r\n    let idBotonTab = document.getElementById(`tablink${numPoint}`);\r\n    idBotonTab.classList.add('active');\r\n  }\r\n\r\n  changeSelectSRSorChangeFormat() {\r\n    // Cojo la tab activa\r\n    let numPoint = parseInt(document.querySelector('.tablinks.active').textContent);\r\n    this.displayXYcoordinates(numPoint);\r\n\r\n  }\r\n\r\n  displayXYcoordinates(numPoint) {\r\n    let featureSelected = this.layerFeatures.getFeatureById(numPoint);\r\n\r\n    //Capturo los elementos\r\n    let pointBox = document.getElementById('m-infocoordinates-point');\r\n    let latitudeBox = document.getElementById('m-infocoordinates-latitude');\r\n    let longitudeBox = document.getElementById('m-infocoordinates-longitude');\r\n    let zoneBox = document.getElementById('m-infocoordinates-zone');\r\n    let coordX = document.getElementById('m-infocoordinates-coordX');\r\n    let coordY = document.getElementById('m-infocoordinates-coordY');\r\n\r\n    //Cojo el srs seleccionado en el select\r\n    let selectSRS = document.getElementById('m-infocoordinates-comboDatum').value;\r\n    console.log(selectSRS);\r\n\r\n    //Cojo el formato de las coordenadas geográficas\r\n    let formatGMS = document.getElementById('m-infocoordinates-buttonConversorFormat').checked;\r\n\r\n    //Cambio coordenadas y calculo las UTM\r\n    let pointDataOutput = this.getImpl().getCoordinates(featureSelected, selectSRS, formatGMS, this.decimalGEOcoord, this.decimalUTMcoord);\r\n    console.log(pointDataOutput);\r\n\r\n    // pinto\r\n    pointBox.innerHTML = pointDataOutput.NumPoint;\r\n    latitudeBox.innerHTML = `${pointDataOutput.projectionGEO.coordinatesGEO.latitude}`.replace('.', ',');\r\n    longitudeBox.innerHTML = `${pointDataOutput.projectionGEO.coordinatesGEO.longitude}`.replace('.', ',');\r\n    zoneBox.innerHTML = pointDataOutput.projectionUTM.zone;\r\n    coordX.innerHTML = this.formatUTMCoordinate(pointDataOutput.projectionUTM.coordinatesUTM.coordX);\r\n    coordY.innerHTML = this.formatUTMCoordinate(pointDataOutput.projectionUTM.coordinatesUTM.coordY);\r\n  }\r\n\r\n  displayZcoordinate(numPoint) {\r\n    let featureSelected = this.layerFeatures.getFeatureById(numPoint);\r\n    let altitudeBox = document.getElementById('m-infocoordinates-altitude');\r\n    altitudeBox.innerHTML = `${featureSelected.getAttribute('Altitude')}`.replace('.', ',');\r\n  }\r\n\r\n  openTab(numPoint) {\r\n    this.selectFeature(numPoint);\r\n    this.activateTab(numPoint);\r\n    this.displayXYcoordinates(numPoint);\r\n  }\r\n\r\n  openTabFromTab(numPoint) {\r\n    this.selectFeature(numPoint);\r\n    this.activateTab(numPoint);\r\n    this.displayXYcoordinates(numPoint);\r\n    this.displayZcoordinate(numPoint);\r\n  }\r\n\r\n  removePoint() {\r\n    if (document.getElementsByClassName('tablinks').length > 1) {\r\n      let tablinkActive = document.querySelector('.tablinks.active');\r\n      let numPoint = tablinkActive.textContent;\r\n      //Elimina tab\r\n      tablinkActive.parentNode.removeChild(tablinkActive);\r\n      // elimina la feature\r\n      let featureSelect = this.layerFeatures.getFeatureById(parseInt(numPoint));\r\n      this.layerFeatures.removeFeatures(featureSelect);\r\n\r\n      //mostrar otro punto, muestro el último punto y lo activo\r\n      let lastTablink = document.getElementsByClassName('m-infocoordinates-tabs')[0].lastChild;\r\n      lastTablink.classList.add('active');\r\n      this.openTabFromTab(parseInt(lastTablink.textContent))\r\n    } else {\r\n      this.removeAllPoints();\r\n    }\r\n  }\r\n\r\n\r\n  importAllPoints() {\r\n    // const projectionSelect = document.getElementById('m-infocoordinates-projectionPrint').value;\r\n    // const projectionPoints = this.layerFeatures.impl_.features_[0].formatGeoJSON_.impl_.dataProjection.code_;\r\n    let printDocument = [];\r\n\r\n    for (let i = 0; i < this.layerFeatures.impl_.features_.length; i += 1) {\r\n\r\n      let featureSelected = this.layerFeatures.impl_.features_[i];\r\n\r\n      //Cojo el srs seleccionado en el select\r\n      let selectSRS = document.getElementById('m-infocoordinates-comboDatum').value;\r\n\r\n      //Cojo el formato de las coordenadas geográficas\r\n      let formatGMS = document.getElementById('m-infocoordinates-buttonConversorFormat').checked;\r\n\r\n      //Cambio coordenadas y calculo las UTM\r\n      let pointDataOutput = this.getImpl().getCoordinates(featureSelected, selectSRS, formatGMS, this.decimalGEOcoord, this.decimalUTMcoord);\r\n\r\n\r\n\r\n      let coordinatesGEO = [\r\n        pointDataOutput.projectionGEO.coordinatesGEO.longitude,\r\n        pointDataOutput.projectionGEO.coordinatesGEO.latitude\r\n      ];\r\n\r\n      let coordinatesUTM = [\r\n        pointDataOutput.projectionUTM.coordinatesUTM.coordX,\r\n        pointDataOutput.projectionUTM.coordinatesUTM.coordY\r\n      ];\r\n\r\n      // tranformCoordinates = this.getImpl().transform(\r\n      //   tranformCoordinates,\r\n      //   projectionPoints,\r\n      //   projectionSelect);\r\n\r\n      printDocument.push(getValue('point') + i + ': ' + '\\n');\r\n      printDocument.push(pointDataOutput.projectionGEO.code + ': ');\r\n      printDocument.push('[' + coordinatesGEO + ']' + '\\n');\r\n      printDocument.push(pointDataOutput.projectionUTM.code + ': ');\r\n      printDocument.push('[' + coordinatesUTM + ']' + '\\n');\r\n    }\r\n\r\n    const toBlobType = new Blob(printDocument, {\r\n      type: 'text/plain'\r\n    })\r\n\r\n    const f = new Date();\r\n    const titulo = 'mapa_'.concat(f.getFullYear(), '-', f.getMonth() + 1, '-', f.getDay() + 1, '_', f.getHours(), f.getMinutes(), f.getSeconds());\r\n\r\n    this.descargarArchivo(toBlobType, titulo.concat('.txt'));\r\n  }\r\n\r\n  displayAllPoints() {\r\n    if (document.getElementsByClassName('icon-infocoordinates-displayON').length === 0 && this.map_.getMapImpl().getOverlays().array_.length > 0) {\r\n      this.removeAllDisplaysPoints();\r\n    } else {\r\n      // Modificamos el icono\r\n      document.getElementsByClassName('icon-infocoordinates-displayON')[0].classList.replace(\"icon-infocoordinates-displayON\", \"icon-infocoordinates-displayOFF\")\r\n      document.getElementsByClassName('icon-infocoordinates-displayOFF')[0].title = getValue(\"displayOFFAllPoints\")\r\n\r\n      // Eliminamos el num sobre el punto\r\n      for (let i = 0; i < document.getElementsByClassName('contenedorPunto').length; i += 1) {\r\n        document.getElementsByClassName('contenedorPunto')[i].style = 'display: none';\r\n      }\r\n      document.getElementsByClassName('contenedorPuntoSelect')[0].style = 'display: none'\r\n\r\n      // Creamos las etiquetas de los puntos\r\n      for (let i = 0; i < this.layerFeatures.impl_.features_.length; i += 1) {\r\n        const pos = this.layerFeatures.impl_.features_[i].impl_.olFeature_.values_.coordinates;\r\n        const varUTM = this.calculateUTMcoordinates(i + 1);\r\n        const altitude = `${parseFloat(this.layerFeatures.impl_.features_[i].impl_.olFeature_.values_.Altitude).toFixed(2)}`.replace('.', ',');\r\n        const textHTML = `<div class=\"m-popup m-collapsed\" style=\"padding: 5px 5px 5px 5px !important;background-color: rgba(255, 255, 255, 0.7) !important;\">\r\n              <div class=\"contenedorCoordPunto\">\r\n                <table>\r\n                    <tbody>\r\n                      <tr>\r\n                        <td style=\"font-weight: bold\">${getValue('point')} ${i+1}</td></b>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>X: ${this.formatUTMCoordinate(varUTM[0])}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Y: ${this.formatUTMCoordinate(varUTM[1])}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>${getValue('altitude')} ${altitude}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n          </div>\r\n      </div>`\r\n\r\n        const helpTooltipElement = M.template.compileSync(textHTML, {\r\n          jsonp: true,\r\n          vars: {\r\n            translations: getValue('text'),\r\n          },\r\n        });\r\n\r\n        this.helpTooltip_ = new ol.Overlay({\r\n          element: helpTooltipElement,\r\n          offset: [10, -5],\r\n        });\r\n\r\n        this.helpTooltip_.setPosition(pos);\r\n        this.map_.getMapImpl().addOverlay(this.helpTooltip_);\r\n      }\r\n    }\r\n  }\r\n\r\n  calculateUTMcoordinates(numPoint) {\r\n    let featureSelected = this.layerFeatures.getFeatureById(numPoint);\r\n    //Cojo el srs seleccionado en el select\r\n    let selectSRS = document.getElementById('m-infocoordinates-comboDatum').value;\r\n\r\n    //Cojo el formato de las coordenadas geográficas\r\n    let formatGMS = document.getElementById('m-infocoordinates-buttonConversorFormat').checked;\r\n\r\n    //Cambio coordenadas y calculo las UTM\r\n    let pointDataOutput = this.getImpl().getCoordinates(featureSelected, selectSRS, formatGMS, this.decimalGEOcoord, this.decimalUTMcoord);\r\n\r\n    return [pointDataOutput.projectionUTM.coordinatesUTM.coordX, pointDataOutput.projectionUTM.coordinatesUTM.coordY];\r\n  }\r\n\r\n  removeAllDisplaysPoints() {\r\n    // Modificamos el icono\r\n    document.getElementsByClassName('icon-infocoordinates-displayOFF')[0].classList.replace(\"icon-infocoordinates-displayOFF\", \"icon-infocoordinates-displayON\");\r\n    document.getElementsByClassName('icon-infocoordinates-displayON')[0].title = getValue(\"displayONAllPoints\");\r\n\r\n    // Mostramos el num sobre el punto\r\n    for (let i = 0; i < document.getElementsByClassName('contenedorPunto').length; i += 1) {\r\n      document.getElementsByClassName('contenedorPunto')[i].style = 'display: block';\r\n    }\r\n    document.getElementsByClassName('contenedorPuntoSelect')[0].style = 'display: block'\r\n\r\n\r\n    // Eliminamos todas las etiquetas de los puntos\r\n    const numOverlays = this.map_.getMapImpl().getOverlays().getArray().length;\r\n    for (let i = numOverlays - 1; i > -1; i -= 1) {\r\n      if (this.map_.getMapImpl().getOverlays().array_[i].options.element.className === 'm-popup m-collapsed') {\r\n        this.map_.getMapImpl().removeOverlay(this.map_.getMapImpl().getOverlays().getArray()[i]);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  descargarArchivo(contenidoEnBlob, nombreArchivo) {\r\n    var reader = new FileReader();\r\n    reader.onload = function(event) {\r\n      var save = document.createElement('a');\r\n      save.href = event.target.result;\r\n      save.target = '_blank';\r\n      save.download = nombreArchivo || 'archivo.dat';\r\n      var clicEvent = new MouseEvent('click', {\r\n        'view': window,\r\n        'bubbles': true,\r\n        'cancelable': true\r\n      });\r\n      save.dispatchEvent(clicEvent);\r\n      (window.URL || window.webkitURL).revokeObjectURL(save.href);\r\n    };\r\n    reader.readAsDataURL(contenidoEnBlob);\r\n  }\r\n\r\n  removeAllPoints() {\r\n    let divTabContainer = document.getElementsByClassName('m-infocoordinates-tabs')[0];\r\n    divTabContainer.innerHTML = '';\r\n\r\n    document.getElementById('m-infocoordinates-point').innerHTML = '--';\r\n    document.getElementById('m-infocoordinates-latitude').innerHTML = '--';\r\n    document.getElementById('m-infocoordinates-longitude').innerHTML = '--';\r\n    document.getElementById('m-infocoordinates-zone').innerHTML = '--';\r\n    document.getElementById('m-infocoordinates-coordX').innerHTML = '--';\r\n    document.getElementById('m-infocoordinates-coordY').innerHTML = '--';\r\n    document.getElementById('m-infocoordinates-altitude').innerHTML = '--';\r\n\r\n    document.getElementById('m-infocoordinates-buttonRemovePoint').classList.add('noDisplay');\r\n    document.getElementsByClassName('m-infocoordinates-div-buttonRemoveAllPoints')[0].classList.add('noDisplay');\r\n    document.getElementsByClassName('m-infocoordinates-div-buttonImportAllPoints')[0].classList.add('noDisplay');\r\n    document.getElementsByClassName('m-infocoordinates-div-buttonDisplayAllPoints')[0].classList.add('noDisplay');\r\n    document.getElementById('m-infocoordinates-buttonConversorFormat').setAttribute('disabled', 'disabled');\r\n    document.getElementById('m-infocoordinates-comboDatum').setAttribute('disabled', 'disabled');\r\n\r\n\r\n    //Elimino todas las features\r\n    this.layerFeatures.removeFeatures((this.layerFeatures.getFeatures()));\r\n\r\n    // Elimino todos los popups del mapa\r\n    const numOverlays = this.map_.getMapImpl().getOverlays().getArray().length;\r\n    for (let i = numOverlays - 1; i > -1; i -= 1) {\r\n      this.map_.getMapImpl().removeOverlay(this.map_.getMapImpl().getOverlays().getArray()[i]);\r\n    }\r\n\r\n    //Reseteo el contador de tabs\r\n    this.numTabs = 0;\r\n  }\r\n\r\n  /**\r\n   * This function compares controls\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Control} control to compare\r\n   * @api stable\r\n   */\r\n  equals(control) {\r\n    return control instanceof InfocoordinatesControl;\r\n  }\r\n\r\n  removeLayerFeatures() {\r\n    this.map_.removeLayers(this.layerFeatures);\r\n  }\r\n\r\n  formatUTMCoordinate(coord) {\r\n    return coord.replace(/\\d(?=(\\d{3})+\\.)/g, '$&*').split('.').join(',').split('*').join('.');\r\n  }\r\n\r\n}\r\n","/**\r\n * @module M/plugin/Infocoordinates\r\n */\r\nimport 'assets/css/infocoordinates';\r\nimport InfocoordinatesControl from './infocoordinatescontrol';\r\nimport api from '../../api';\r\nimport { getValue } from './i18n/language';\r\n\r\nexport default class Infocoordinates extends M.Plugin {\r\n  /**\r\n   * @classdesc\r\n   * Main facade plugin object. This class creates a plugin\r\n   * object which has an implementation Object\r\n   *\r\n   * @constructor\r\n   * @extends {M.Plugin}\r\n   * @param {Object} impl implementation object\r\n   * @api stable\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n    /**\r\n     * Facade of the map\r\n     * @private\r\n     * @type {M.Map}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     *  Decimal digits fixed on geographic coordinates\r\n     * @public     * \r\n     * @type {int}\r\n     */\r\n    this.decimalGEOcoord_ = options.decimalGEOcoord || 4;\r\n\r\n    /**\r\n     *  Decimal digits fixed on projected coordinates\r\n     * @public     * \r\n     * @type {int}\r\n     */\r\n    this.decimalUTMcoord_ = options.decimalUTMcoord || 2;\r\n\r\n    /**\r\n     * Name plugin\r\n     * @private\r\n     * @type {String}\r\n     */\r\n    this.name_ = 'infocoordinates';\r\n\r\n    /**\r\n     * Array of controls\r\n     * @private\r\n     * @type {Array<M.Control>}\r\n     */\r\n    this.controls_ = [];\r\n\r\n    this.control_ = null;\r\n\r\n    /**\r\n     * Position of the Plugin\r\n     * @public\r\n     * Posible values: TR | TL | BL | BR\r\n     * @type {String}\r\n     */\r\n    const positions = ['TR', 'TL', 'BL', 'BR'];\r\n    this.position_ = positions.includes(options.position) ? options.position : 'TR';\r\n\r\n    /**\r\n     * Metadata from api.json\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.metadata_ = api.metadata;\r\n  }\r\n\r\n  /**\r\n   * This function adds this plugin into the map\r\n   *\r\n   * @public\r\n   * @function\r\n   * @param {M.Map} map the map to add the plugin\r\n   * @api stable\r\n   */\r\n  addTo(map) {\r\n    this.control_ = new InfocoordinatesControl(this.decimalGEOcoord_, this.decimalUTMcoord_);\r\n    this.controls_.push(this.control_);\r\n    this.map_ = map;\r\n    // panel para agregar control - no obligatorio\r\n    this.panel_ = new M.ui.Panel('panelInfocoordinates', {\r\n      collapsed: true,\r\n      collapsible: true,\r\n      position: M.ui.position[this.position_],\r\n      className: 'm-plugin-infocoordinates',\r\n      collapsedButtonClass: 'infocoordinates-target',\r\n      tooltip: getValue('tooltip')\r\n    });\r\n    this.panel_.addControls(this.controls_);\r\n\r\n    map.addPanels(this.panel_);\r\n  }\r\n\r\n  /**\r\n   * This function destroys this plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  destroy() {\r\n    this.map_.removeControls([this.control_]);\r\n    this.control_.deactivate();\r\n    this.control_.removeLayerFeatures();\r\n    [this.control_, this.panel_, this.map] = [null, null, null];\r\n  }\r\n\r\n  /**\r\n   * This function gets name plugin\r\n   * @getter\r\n   * @public\r\n   * @returns {string}\r\n   * @api stable\r\n   */\r\n  get name() {\r\n    return this.name_;\r\n  }\r\n\r\n  /**\r\n   * This function gets metadata plugin\r\n   *\r\n   * @public\r\n   * @function\r\n   * @api stable\r\n   */\r\n  getMetadata() {\r\n    return this.metadata_;\r\n  }\r\n\r\n  /**\r\n   * Get the API REST Parameters of the plugin\r\n   *\r\n   * @function\r\n   * @public\r\n   * @api\r\n   */\r\n  getAPIRest() {\r\n    return `${this.name}=${this.position_}*${this.decimalGEOcoord_}*${this.decimalUTMcoord_}`;\r\n  }\r\n}\r\n","import M$plugin$Infocoordinates from '/home/jesusdiaz/Workspace/Git/mapea-plugins/mapea-lite/api-ign-js/src/plugins/infocoordinates/src/facade/js/infocoordinates';\nimport M$control$InfocoordinatesControl from '/home/jesusdiaz/Workspace/Git/mapea-plugins/mapea-lite/api-ign-js/src/plugins/infocoordinates/src/facade/js/infocoordinatescontrol';\nimport M$impl$control$InfocoordinatesControl from '/home/jesusdiaz/Workspace/Git/mapea-plugins/mapea-lite/api-ign-js/src/plugins/infocoordinates/src/impl/ol/js/infocoordinatescontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Infocoordinates = M$plugin$Infocoordinates;\nwindow.M.control.InfocoordinatesControl = M$control$InfocoordinatesControl;\nwindow.M.impl.control.InfocoordinatesControl = M$impl$control$InfocoordinatesControl;\n"],"sourceRoot":""}