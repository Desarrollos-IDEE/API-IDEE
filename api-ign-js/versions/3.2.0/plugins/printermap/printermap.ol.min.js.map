{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/printermap.html","webpack:///./src/impl/ol/js/printermapcontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/printermapcontrol.js","webpack:///./src/facade/js/printermap.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PrinterMapControl","facadeMap_","M","impl","Control","map","element","this","ol","control","target","getMapImpl","addControl","paramName","layers","others","getLayers","getArray","filter","layer","type","utils","isNullOrEmpty","getSource","getParams","undefined","some","url","getUrl","Promise","success","fail","WMC","KML","encodeKML","WMS","encodeWMS","WFS","encodeWFS","GeoJSON","WMTS","encodeWMTS","then","encodedLayer","MBtiles","OSM","encodeOSM","Mapbox","encodeMapbox","Vector","encodeImage","olLayer","getImpl","getOL3Layer","features","getFeatures","layerName","layerOpacity","getOpacity","geoJSONFormat","format","bbox","getBbox","x","min","y","max","nameFeature","resolution","getView","getResolution","encodedFeatures","indexText","indexGeom","index","style","stylesNames","stylesNamesText","forEach","feature","geometry","getGeometry","styleId","replace","styleFn","getStyle","featureStyle","e","parseType","img","getImage","imgSize","getImageSize","getType","toLowerCase","styleText","stroke","getStroke","styleGeom","id","externalGraphic","getSrc","graphicHeight","graphicWidth","graphicOpacity","strokeWidth","getWidth","text","getText","conflictResolution","fontColor","getFill","rgbToHex","isArray","getColor","toString","fontSize","fontFamily","fontWeight","label","labelAlign","getTextAlign","labelXOffset","getOffsetX","labelYOffset","getOffsetY","labelOutlineColor","labelOutlineWidth","slice","intersectsExtent","styleStr","JSON","stringify","styleTextStr","styleName","styleNameText","isUndefined","symbolizers","flag","push","a","geoJSONFeature","writeFeatureObject","properties","_gx_style","parse","concat","version","styleProperty","geoJson","opacity","layerUrl","params","paramsLayers","LAYERS","paramsFormat","FORMAT","paramsStyles","STYLES","baseURL","join","split","styles","_updateNoCache","noCacheName","getNoCacheName","noChacheUrl","getNoCacheUrl","getNoChacheName","noCacheUrl","getNoChacheUrl","customParams","keys","indexOf","IMAGEID","transparent","iswmc","projection","getProjection","layerStyle","fStyle","Function","Array","length","image","textPath","fill","fillColor","rgbaToHex","fillOpacity","getOpacityFromRgba","strokeColor","strokeOpacity","pointRadius","getRadius","tAlign","tBLine","getTextBaseline","align","LEFT","RIGHT","CENTER","baseline","BOTTOM","MIDDLE","TOP","font","getFont","px","substr","space","lastIndexOf","trim","fontStyle","code","layerParam","featureProjection","dataProjection","layerSource","layerReqEncoding","getRequestEncoding","matrixSet","getMatrixSet","getCapabilities","capabilities","matrixIdsObj","Contents","TileMatrixSet","tileMatrixSet","Identifier","imageFormat","options","matrices","TileMatrix","tileMatrix","identifier","matrixSize","MatrixHeight","MatrixWidth","scaleDenominator","ScaleDenominator","tileSize","TileWidth","TileHeight","topLeftCorner","TopLeftCorner","requestEncoding","layerImpl","tileGrid","getTileGrid","tiled","layerExtent","getExtent","getTileSize","singleTile","maxExtent","resolutions","getResolutions","extension","concatUrlPaths","config","MAPBOX_URL","MAPBOX_TOKEN_NAME","MAPBOX_TOKEN_VALUE","MAPBOX_EXTENSION","path_format","origin","coordinates","originProj","proj","destProj","transform","box","currProj","transformExtent","removeControl","translations","en","es","getLang","res","language","getTranslation","lang","getValue","keyPath","translation","console","warn","reduce","prev","current","serverUrl","printTemplateUrl","printStatusUrl","credits","PrinterMapControlImpl","NAME","exception","encodeLayer","serverUrl_","printTemplateUrl_","printStatusUrl_","credits_","inputTitle_","areaDescription_","layout_","format_","dpi_","forceScale_","params_","layout","outputFilename","pages","clientLogo","creditos","parameters","imageSpain","imageCoordinates","queueContainer_","capabilitiesPromise_","options_","dpi","forceScale","legend","layoutOptions_","dpisOptions_","outputFormats_","callback","remote","response","statusJson","status","error","dialog","lastChild","remove","setTimeout","getStatus","capabilitiesParam","ilen","attribute","layouts","endsWith","item","dpis","attributes","clientInfo","dpiSuggestions","parseInt","formats","default","tooltip","title","description","force","print","delete","download","minimize","html","template","compileSync","printermapHTML","jsonp","vars","addEvents","element_","querySelector","selectLayout","addEventListener","layoutValue","setLayout","selectDpi","dpiValue","setDpi","selectFormat","setFormat","printClick_","event","preventDefault","changeEvent","document","createEvent","initEvent","dispatchEvent","apply","children","child","removeEventListener","downloadPrint","innerHTML","enableTouchScroll","evt","getPrintData","printData","printUrl","outputFormat","queueEl","createQueueElement","appendChild","classList","add","LOADING_CLASS","addParameters","proxy","post","responseParam","downloadUrl","ref","statusURL","substring","downloadURL","err","setAttribute","DOWNLOAD_ATTR_NAME","capabilitiesUrl","coordinate","dms","aux","splittedCoord","map_","dmsBbox","units","newMin","reproject","newMax","convertDecimalBoxToDMS","converterDecimalToDMS","center","getCenter","attributionContainer","attribution","date","Date","currentDate","getDate","getMonth","getFullYear","fileTitle","extend","attributionInfo","refsrs","turnProjIntoLegend","printDate","useAdjustBounds","xCoordTopLeft","yCoordTopLeft","xCoordTopRight","yCoordTopRight","xCoordBotRight","yCoordBotRight","xCoordBotLeft","yCoordBotLeft","encodeLayers","encodedLayers","assign","scale","getWMTSScale","transformExt","isVisible","inRange","numLayersToProc","otherLayers","getParametrizedLayers","vectorLayers","wmsLayers","otherBaseLayers","reverse","queueElem","createElement","getAttribute","window","open","projectionLegend","obj","equals","TEMPLATE","PrinterMap","controls_","control_","panel_","position_","position","collapsed_","collapsed","collapsible_","collapsible","GEOPRINT_URL","PRINTERMAP_TEMPLATE","GEOPRINT_STATUS","Plugin","ui","Panel","className","collapsedButtonClass","on","ADDED_TO_MAP","addControls","addPanels","fire","removeControls","plugin","M$plugin$PrinterMap","M$control$PrinterMapControl","M$impl$control$PrinterMapControl"],"mappings":"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","file":"printermap.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = \"<div class=\\\"m-control m-container m-printermap m-printermap-container\\\">\\n    <!-- TITLE -->\\n    <div class=\\\"title\\\">{{translations.tooltip}}</div>\\n    <!-- FORM -->\\n    <div class=\\\"form\\\">\\n        <!-- title -->\\n        <div class=\\\"title\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"{{translations.title}}\\\">\\n        </div>\\n        <!-- description -->\\n        <div class=\\\"description\\\">\\n            <textarea placeholder=\\\"{{translations.description}}\\\"></textarea>\\n        </div>\\n        <!-- layout -->\\n        <div class=\\\"layout\\\">\\n            <label>{{translations.layout}} </label>\\n            <select>\\n                {{#each layouts}}\\n                    <option value=\\\"{{name}}\\\" {{#if default}} selected{{/if}}>{{name}}</option>\\n                {{/each}}\\n            </select>\\n        </div>\\n        <!-- DPI -->\\n        <div class=\\\"dpi\\\">\\n            <label>DPI </label>\\n            <select>\\n                {{#each dpis}}\\n                    <option value=\\\"{{value}}\\\" {{#if default}} selected{{/if}}>{{value}}</option>\\n                {{/each}}\\n            </select>\\n        </div>\\n        <!-- format -->\\n        <div class=\\\"format\\\">\\n            <label>{{translations.format}} </label>\\n            <select>\\n                {{#each format}}\\n                    <option value=\\\"{{name}}\\\" {{#if default}} selected{{/if}}>{{name}}</option>\\n                {{/each}}\\n            </select>\\n        </div>\\n        <!-- force scale\\n        <div class=\\\"forcescale\\\">\\n            <label>{{translations.force}} </label>\\n            <input type=\\\"checkbox\\\" {{#if forceScale}} checked{{/if}}>\\n        </div> -->\\n    </div>\\n    <!-- buttons -->\\n    <div class=\\\"button\\\">\\n        <button class=\\\"print\\\"><i class=\\\"icon-impresora\\\"></i> {{translations.print}}</button>\\n        <button class=\\\"remove\\\"><i class=\\\"icon-papelera\\\"></i> {{translations.delete}}</button>\\n    </div>\\n    <!-- queue -->\\n    <div class=\\\"queue\\\">\\n        <div class=\\\"title\\\">{{translations.download}}</div>\\n        <ul class=\\\"queue-container\\\"></ul>\\n    </div>\\n    <!-- minimize button -->\\n    <div class=\\\"minimize\\\" title=\\\"{{translations.minimize}}\\\"></div>\\n</div>\\n\";","/**\n * @module M/impl/control/PrinterMapControl\n */\nexport default class PrinterMapControl extends M.impl.Control {\n  /**\n   * @classdesc\n   * Main constructor of the measure conrol.\n   *\n   * @constructor\n   * @extends {ol.control.Control}\n   * @api stable\n   */\n  constructor() {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  addTo(map, element) {\n    this.facadeMap_ = map;\n\n    ol.control.Control.call(this, {\n      element,\n      target: null,\n    });\n    map.getMapImpl().addControl(this);\n  }\n\n  /**\n   * This function encodes a layer.\n   *\n   * @public\n   * @function\n   * @param {Layer} layer to encode\n   * @api stable\n   */\n  getParametrizedLayers(paramName, layers) {\n    let others = this.facadeMap_.getMapImpl().getLayers().getArray().filter((layer) => {\n      return layer.type === 'IMAGE' && !M.utils.isNullOrEmpty(layer.getSource())\n      && !M.utils.isNullOrEmpty(layer.getSource().getParams())\n      && layer.getSource().getParams()[paramName] !== undefined;\n    });\n\n    others = others.filter((layer) => {\n      return !(layers.some((l) => {\n        return l.url !== undefined && l.url === layer.getSource().getUrl();\n      }));\n    });\n\n    return others;\n  }\n\n  /**\n   * This function encodes a layer.\n   *\n   * @public\n   * @function\n   * @param {Layer} layer to encode\n   * @api stable\n   */\n  encodeLayer(layer) {\n    return (new Promise((success, fail) => {\n      if (layer.type === M.layer.type.WMC) {\n        // none\n      } else if (layer.type === M.layer.type.KML) {\n        success(this.encodeKML(layer));\n      } else if (layer.type === M.layer.type.WMS) {\n        success(this.encodeWMS(layer));\n      } else if (layer.type === M.layer.type.WFS) {\n        success(this.encodeWFS(layer));\n      } else if (layer.type === M.layer.type.GeoJSON) {\n        success(this.encodeWFS(layer));\n      } else if (layer.type === M.layer.type.WMTS) {\n        this.encodeWMTS(layer).then((encodedLayer) => {\n          success(encodedLayer);\n        });\n      } else if (layer.type === M.layer.type.MBtiles) {\n        // none\n      } else if (layer.type === M.layer.type.OSM) {\n        success(this.encodeOSM(layer));\n      } else if (layer.type === M.layer.type.Mapbox) {\n        success(this.encodeMapbox(layer));\n      } else if (M.utils.isNullOrEmpty(layer.type) && layer instanceof M.layer.Vector) {\n        success(this.encodeWFS(layer));\n      } else if (layer.type === 'IMAGE' && !(layer instanceof M.layer.WMS)) {\n        success(this.encodeImage(layer));\n      } else {\n        success(this.encodeWFS(layer));\n      }\n    }));\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeKML(layer) {\n    let encodedLayer = null;\n\n    const olLayer = layer.getImpl().getOL3Layer();\n    const features = olLayer.getSource().getFeatures();\n    const layerName = layer.name;\n    const layerOpacity = olLayer.getOpacity();\n    const geoJSONFormat = new ol.format.GeoJSON();\n    let bbox = this.facadeMap_.getBbox();\n    bbox = [bbox.x.min, bbox.y.min, bbox.x.max, bbox.y.max];\n    const resolution = this.facadeMap_.getMapImpl().getView().getResolution();\n\n    const encodedFeatures = [];\n    let indexText = 1;\n    let indexGeom = 1;\n    let index = 1;\n    let style = '';\n    const stylesNames = {};\n    const stylesNamesText = {};\n    let nameFeature;\n    let filter;\n\n    features.forEach((feature) => {\n      const geometry = feature.getGeometry();\n      let styleId = feature.get('styleUrl');\n      if (!M.utils.isNullOrEmpty(styleId)) {\n        styleId = styleId.replace('#', '');\n      }\n      const styleFn = feature.getStyle();\n      if (!M.utils.isNullOrEmpty(styleFn)) {\n        let featureStyle;\n        try {\n          featureStyle = styleFn(feature, resolution)[0];\n        } catch (e) {\n          featureStyle = styleFn.call(feature, resolution)[0];\n        }\n        if (!M.utils.isNullOrEmpty(featureStyle)) {\n          const img = featureStyle.getImage();\n          let imgSize = img.getImageSize();\n          if (M.utils.isNullOrEmpty(imgSize)) {\n            imgSize = [64, 64];\n          }\n\n          let parseType;\n          if (feature.getGeometry().getType().toLowerCase() === 'multipolygon') {\n            parseType = 'polygon';\n          } else if (feature.getGeometry().getType().toLowerCase() === 'multipoint') {\n            parseType = 'point';\n          } else {\n            parseType = feature.getGeometry().getType().toLowerCase();\n          }\n\n          const stroke = featureStyle.getStroke();\n          let styleText;\n          const styleGeom = {\n            id: styleId,\n            externalGraphic: img.getSrc(),\n            graphicHeight: imgSize[0],\n            graphicWidth: imgSize[1],\n            graphicOpacity: img.getOpacity(),\n            strokeWidth: stroke.getWidth(),\n            type: parseType,\n          };\n          const text = (featureStyle.getText && featureStyle.getText());\n          if (!M.utils.isNullOrEmpty(text)) {\n            styleText = {\n              conflictResolution: 'false',\n              fontColor: M.utils.isNullOrEmpty(text.getFill()) ? '' : M.utils.rgbToHex(M.utils.isArray(text.getFill().getColor()) ?\n                `rgba(${text.getFill().getColor().toString()})` :\n                text.getFill().getColor()),\n              fontSize: '11px',\n              fontFamily: 'Helvetica, sans-serif',\n              fontWeight: 'bold',\n              label: M.utils.isNullOrEmpty(text.getText()) ? feature.get('name') : text.getText(),\n              labelAlign: text.getTextAlign(),\n              labelXOffset: text.getOffsetX(),\n              labelYOffset: text.getOffsetY(),\n              labelOutlineColor: M.utils.isNullOrEmpty(text.getStroke()) ? '' : M.utils.rgbToHex(M.utils.isArray(text.getStroke().getColor()) ?\n                `rgba(${text.getStroke().getColor().toString()})` :\n                text.getStroke().getColor()),\n              labelOutlineWidth: M.utils.isNullOrEmpty(text.getStroke()) ? '' : text.getStroke().getWidth(),\n              type: 'text',\n            };\n            styleText.fontColor = styleText.fontColor.slice(0, 7);\n            styleText.labelOutlineColor = styleText.labelOutlineColor.slice(0, 7);\n          }\n\n          nameFeature = `draw${index}`;\n\n          if ((!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox)) ||\n            !M.utils.isNullOrEmpty(text)) {\n            const styleStr = JSON.stringify(styleGeom);\n            const styleTextStr = JSON.stringify(styleText);\n            let styleName = stylesNames[styleStr];\n            let styleNameText = stylesNamesText[styleTextStr];\n\n            if (M.utils.isUndefined(styleName) || M.utils.isUndefined(styleNameText)) {\n              const symbolizers = [];\n              let flag = 0;\n              if (!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox) &&\n                M.utils.isUndefined(styleName)) {\n                styleName = indexGeom;\n                stylesNames[styleStr] = styleName;\n                flag = 1;\n                symbolizers.push(styleStr);\n                indexGeom += 1;\n                index += 1;\n              }\n              if (!M.utils.isNullOrEmpty(text) && M.utils.isUndefined(styleNameText)) {\n                styleNameText = indexText;\n                stylesNamesText[styleTextStr] = styleNameText;\n                symbolizers.push(styleTextStr);\n                indexText += 1;\n                if (flag === 0) {\n                  index += 1;\n                  symbolizers.push(styleStr);\n                }\n              }\n\n              if (styleName === undefined) {\n                styleName = 0;\n              }\n              if (styleNameText === undefined) {\n                styleNameText = 0;\n              }\n\n              filter = `\"[_gx_style ='${styleName + styleNameText}']\"`;\n\n              if (!M.utils.isNullOrEmpty(symbolizers)) {\n                const a = `${filter}: {\"symbolizers\": [${symbolizers}]}`;\n                if (style !== '') {\n                  style += `,${a}`;\n                } else {\n                  style += `{${a}, \"version\": \"2\"`;\n                }\n              }\n            }\n\n            const geoJSONFeature = geoJSONFormat.writeFeatureObject(feature);\n            geoJSONFeature.properties = {\n              name: nameFeature,\n              _gx_style: styleName + styleNameText,\n            };\n            encodedFeatures.push(geoJSONFeature);\n          }\n        }\n      }\n    }, this);\n\n    if (style !== '') {\n      style = JSON.parse(style.concat('}'));\n    } else {\n      style = {\n        '*': {\n          symbolizers: [],\n        },\n        version: '2',\n      };\n    }\n\n    encodedLayer = {\n      type: 'Vector',\n      style,\n      styleProperty: '_gx_style',\n      geoJson: {\n        type: 'FeatureCollection',\n        features: encodedFeatures,\n      },\n      name: layerName,\n      opacity: layerOpacity,\n    };\n\n    return encodedLayer;\n  }\n\n  /**\n   * This function encodes a WMS layer.\n   *\n   * @public\n   * @function\n   * @param {M.layer.WMS} layer to encode\n   * @api stable\n   */\n  encodeWMS(layer) {\n    let encodedLayer = null;\n    const olLayer = layer.getImpl().getOL3Layer();\n    const layerUrl = layer.url;\n    const layerOpacity = olLayer.getOpacity();\n    const params = olLayer.getSource().getParams();\n    const paramsLayers = [params.LAYERS];\n    const paramsFormat = params.FORMAT;\n    const paramsStyles = [params.STYLES];\n    encodedLayer = {\n      baseURL: layerUrl,\n      opacity: layerOpacity,\n      type: 'WMS',\n      layers: paramsLayers.join(',').split(','),\n      format: paramsFormat || 'image/jpeg',\n      styles: paramsStyles.join(',').split(','),\n    };\n\n    /** ***********************************\n     MAPEA DE CAPAS TILEADA.\n    ************************************ */\n    // eslint-disable-next-line no-underscore-dangle\n    if (layer._updateNoCache) {\n      // eslint-disable-next-line no-underscore-dangle\n      layer._updateNoCache();\n      const noCacheName = layer.getNoCacheName();\n      const noChacheUrl = layer.getNoCacheUrl();\n      if (!M.utils.isNullOrEmpty(noCacheName) && !M.utils.isNullOrEmpty(noChacheUrl)) {\n        encodedLayer.layers = [noCacheName];\n        encodedLayer.baseURL = noChacheUrl;\n      }\n    } else {\n      const noCacheName = layer.getNoChacheName();\n      const noCacheUrl = layer.getNoChacheUrl();\n      if (!M.utils.isNullOrEmpty(noCacheName) && !M.utils.isNullOrEmpty(noCacheUrl)) {\n        encodedLayer.layers = [noCacheName];\n        encodedLayer.baseURL = noCacheUrl;\n      }\n    }\n\n    /** *********************************  */\n\n    // defaults\n    encodedLayer.customParams = {\n      // service: 'WMS',\n      // version: '1.1.1',\n      // request: 'GetMap',\n      // styles: '',\n      // format: 'image/jpeg',\n    };\n\n    const propKeys = Object.keys(params);\n    propKeys.forEach((key) => {\n      if ('iswmc,transparent'.indexOf(key.toLowerCase()) !== -1) {\n        encodedLayer.customParams[key] = params[key];\n      }\n    });\n    return encodedLayer;\n  }\n\n  /**\n   * This function encodes a OL Image layer.\n   *\n   * @public\n   * @function\n   * @param {IMAGE} layer to encode\n   * @api stable\n   */\n  encodeImage(layer) {\n    let encodedLayer = null;\n    const olLayer = layer;\n    const params = olLayer.getSource().getParams();\n    const paramsLayers = [params.LAYERS];\n    const paramsStyles = [params.STYLES];\n    encodedLayer = {\n      baseURL: olLayer.getSource().getUrl(),\n      opacity: olLayer.getOpacity(),\n      type: 'WMS',\n      layers: paramsLayers.join(',').split(','),\n      format: params.FORMAT || 'image/jpeg',\n      styles: paramsStyles.join(',').split(','),\n    };\n\n    encodedLayer.customParams = {\n      IMAGEID: params.IMAGEID,\n      transparent: true,\n      iswmc: false,\n    };\n\n    return encodedLayer;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeWFS(layer) {\n    let encodedLayer = null;\n    const continuePrint = true;\n    if (continuePrint) {\n      const projection = this.facadeMap_.getProjection();\n      const olLayer = layer.getImpl().getOL3Layer();\n      const features = olLayer.getSource().getFeatures();\n      const layerName = layer.name;\n      const layerOpacity = olLayer.getOpacity();\n      const layerStyle = olLayer.getStyle();\n      const geoJSONFormat = new ol.format.GeoJSON();\n      let bbox = this.facadeMap_.getBbox();\n      bbox = [bbox.x.min, bbox.y.min, bbox.x.max, bbox.y.max];\n      const resolution = this.facadeMap_.getMapImpl().getView().getResolution();\n\n      const encodedFeatures = [];\n      let nameFeature;\n      let filter;\n      let index = 1;\n      let indexText = 1;\n      let indexGeom = 1;\n      let style = '';\n      const stylesNames = {};\n      const stylesNamesText = {};\n      features.forEach((feature) => {\n        const geometry = feature.getGeometry();\n        let featureStyle;\n        const fStyle = feature.getStyle();\n\n        if (!M.utils.isNullOrEmpty(fStyle)) {\n          featureStyle = fStyle;\n        } else if (!M.utils.isNullOrEmpty(layerStyle)) {\n          featureStyle = layerStyle;\n        }\n\n        if (featureStyle instanceof Function) {\n          featureStyle = featureStyle.call(featureStyle, feature, resolution);\n        }\n\n        if (featureStyle instanceof Array) {\n          // SRC style has priority\n          if (featureStyle.length > 1) {\n            featureStyle = (!M.utils.isNullOrEmpty(featureStyle[1].getImage()) &&\n                featureStyle[1].getImage().getSrc) ?\n              featureStyle[1] : featureStyle[0];\n          } else {\n            featureStyle = featureStyle[0];\n          }\n        }\n\n        if (!M.utils.isNullOrEmpty(featureStyle)) {\n          const image = featureStyle.getImage();\n          const imgSize = M.utils\n            .isNullOrEmpty(image) ? [0, 0] : (image.getImageSize() || [24, 24]);\n          let text = featureStyle.getText();\n          if (M.utils.isNullOrEmpty(text) && !M.utils.isNullOrEmpty(featureStyle.textPath)) {\n            text = featureStyle.textPath;\n          }\n\n          let parseType;\n          if (feature.getGeometry().getType().toLowerCase() === 'multipolygon') {\n            parseType = 'polygon';\n          } else if (feature.getGeometry().getType().toLowerCase() === 'multipoint') {\n            parseType = 'point';\n          } else if (feature.getGeometry().getType().toLowerCase().indexOf('linestring') > -1) {\n            parseType = 'line';\n          } else {\n            parseType = feature.getGeometry().getType().toLowerCase();\n          }\n\n          const stroke = M.utils.isNullOrEmpty(image) ?\n            featureStyle.getStroke() : (image.getStroke && image.getStroke());\n          const fill = M.utils.isNullOrEmpty(image) ?\n            featureStyle.getFill() : (image.getFill && image.getFill());\n\n\n          let styleText;\n          const styleGeom = {\n            type: parseType,\n            fillColor: M.utils.isNullOrEmpty(fill) ? '#000000' : M.utils.rgbaToHex(fill.getColor()).slice(0, 7),\n            fillOpacity: M.utils.isNullOrEmpty(fill) ?\n              0 : M.utils.getOpacityFromRgba(fill.getColor()),\n            strokeColor: M.utils.isNullOrEmpty(stroke) ? '#000000' : M.utils.rgbaToHex(stroke.getColor()),\n            strokeOpacity: M.utils.isNullOrEmpty(stroke) ?\n              0 : M.utils.getOpacityFromRgba(stroke.getColor()),\n            strokeWidth: M.utils.isNullOrEmpty(stroke) ? 0 : (stroke.getWidth && stroke.getWidth()),\n            pointRadius: M.utils.isNullOrEmpty(image) ? '' : (image.getRadius && image.getRadius()),\n            externalGraphic: M.utils.isNullOrEmpty(image) ? '' : (image.getSrc && image.getSrc()),\n            graphicHeight: imgSize[0],\n            graphicWidth: imgSize[1],\n          };\n          if (!M.utils.isNullOrEmpty(text)) {\n            let tAlign = text.getTextAlign();\n            let tBLine = text.getTextBaseline();\n            let align = '';\n            if (!M.utils.isNullOrEmpty(tAlign)) {\n              if (tAlign === M.style.align.LEFT) {\n                tAlign = 'l';\n              } else if (tAlign === M.style.align.RIGHT) {\n                tAlign = 'r';\n              } else if (tAlign === M.style.align.CENTER) {\n                tAlign = 'c';\n              } else {\n                tAlign = '';\n              }\n            }\n            if (!M.utils.isNullOrEmpty(tBLine)) {\n              if (tBLine === M.style.baseline.BOTTOM) {\n                tBLine = 'b';\n              } else if (tBLine === M.style.baseline.MIDDLE) {\n                tBLine = 'm';\n              } else if (tBLine === M.style.baseline.TOP) {\n                tBLine = 't';\n              } else {\n                tBLine = '';\n              }\n            }\n            if (!M.utils.isNullOrEmpty(tAlign) && !M.utils.isNullOrEmpty(tBLine)) {\n              align = tAlign.concat(tBLine);\n            }\n            const font = text.getFont();\n            const fontWeight = !M.utils.isNullOrEmpty(font) && font.indexOf('bold') > -1 ? 'bold' : 'normal';\n            let fontSize = '11px';\n            if (!M.utils.isNullOrEmpty(font)) {\n              const px = font.substr(0, font.indexOf('px'));\n              if (!M.utils.isNullOrEmpty(px)) {\n                const space = px.lastIndexOf(' ');\n                if (space > -1) {\n                  fontSize = px.substr(space, px.length).trim().concat('px');\n                } else {\n                  fontSize = px.concat('px');\n                }\n              }\n            }\n            styleText = {\n              type: 'text',\n              label: text.getText(),\n              fontColor: M.utils.isNullOrEmpty(text.getFill()) ? '#000000' : M.utils.rgbToHex(text.getFill().getColor()),\n              fontSize,\n              fontFamily: 'Helvetica, sans-serif',\n              fontStyle: 'normal',\n              fontWeight,\n              conflictResolution: 'false',\n              labelXOffset: text.getOffsetX(),\n              labelYOffset: text.getOffsetY(),\n              fillColor: styleGeom.fillColor || '#FF0000',\n              fillOpacity: styleGeom.fillOpacity || 1,\n              labelOutlineColor: M.utils.isNullOrEmpty(text.getStroke()) ? '' : M.utils.rgbToHex(text.getStroke().getColor() || '#FF0000'),\n              labelOutlineWidth: M.utils.isNullOrEmpty(text.getStroke()) ? '' : text.getStroke().getWidth(),\n              labelAlign: align,\n            };\n          }\n\n          nameFeature = `draw${index}`;\n\n          if ((!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox)) ||\n            !M.utils.isNullOrEmpty(text)) {\n            const styleStr = JSON.stringify(styleGeom);\n            const styleTextStr = JSON.stringify(styleText);\n            let styleName = stylesNames[styleStr];\n            let styleNameText = stylesNamesText[styleTextStr];\n\n            if (M.utils.isUndefined(styleName) || M.utils.isUndefined(styleNameText)) {\n              const symbolizers = [];\n              let flag = 0;\n              if (!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox) &&\n                M.utils.isUndefined(styleName)) {\n                styleName = indexGeom;\n                stylesNames[styleStr] = styleName;\n                flag = 1;\n                symbolizers.push(styleStr);\n                indexGeom += 1;\n                index += 1;\n              }\n              if (!M.utils.isNullOrEmpty(text) && M.utils.isUndefined(styleNameText)) {\n                styleNameText = indexText;\n                stylesNamesText[styleTextStr] = styleNameText;\n                symbolizers.push(styleTextStr);\n                indexText += 1;\n                if (flag === 0) {\n                  index += 1;\n                  symbolizers.push(styleStr);\n                }\n              }\n              if (styleName === undefined) {\n                styleName = 0;\n              }\n              if (styleNameText === undefined) {\n                styleNameText = 0;\n              }\n              filter = `\"[_gx_style ='${styleName + styleNameText}']\"`;\n              if (!M.utils.isNullOrEmpty(symbolizers)) {\n                const a = `${filter}: {\"symbolizers\": [${symbolizers}]}`;\n                if (style !== '') {\n                  style += `,${a}`;\n                } else {\n                  style += `{${a},\"version\":\"2\"`;\n                }\n              }\n            }\n\n            let geoJSONFeature;\n            if (projection.code !== 'EPSG:3857' && this.facadeMap_.getLayers().some(layerParam => (layerParam.type === M.layer.type.OSM || layerParam.type === M.layer.type.Mapbox))) {\n              geoJSONFeature = geoJSONFormat.writeFeatureObject(feature, {\n                featureProjection: projection.code,\n                dataProjection: 'EPSG:3857',\n              });\n            } else {\n              geoJSONFeature = geoJSONFormat.writeFeatureObject(feature);\n            }\n            geoJSONFeature.properties = {\n              _gx_style: styleName + styleNameText,\n              name: nameFeature,\n            };\n            encodedFeatures.push(geoJSONFeature);\n          }\n        }\n      }, this);\n\n      if (style !== '') {\n        style = JSON.parse(style.concat('}'));\n      } else {\n        style = {\n          '*': {\n            symbolizers: [],\n          },\n          version: '2',\n        };\n      }\n\n      encodedLayer = {\n        type: 'Vector',\n        style,\n        styleProperty: '_gx_style',\n        geoJson: {\n          type: 'FeatureCollection',\n          features: encodedFeatures,\n        },\n        name: layerName,\n        opacity: layerOpacity,\n      };\n    }\n    return encodedLayer;\n  }\n\n  /**\n   * This function\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeWMTS(layer) {\n    const layerImpl = layer.getImpl();\n    const olLayer = layerImpl.getOL3Layer();\n    const layerSource = olLayer.getSource();\n\n    const layerUrl = layer.url;\n    const layerName = layer.name;\n    const layerOpacity = olLayer.getOpacity();\n    const layerReqEncoding = layerSource.getRequestEncoding();\n    const matrixSet = layerSource.getMatrixSet();\n\n    /**\n     * @see http: //www.mapfish.org/doc/print/protocol.html#layers-params\n     */\n    return layer.getImpl().getCapabilities().then((capabilities) => {\n      const matrixIdsObj = capabilities.Contents.TileMatrixSet.filter((tileMatrixSet) => {\n        return (tileMatrixSet.Identifier === matrixSet);\n      })[0];\n      return {\n        baseURL: layerUrl,\n        imageFormat: layer.options.imageFormat || 'image/png',\n        layer: layerName,\n        matrices: matrixIdsObj.TileMatrix.map((tileMatrix, i) => {\n          return {\n            identifier: tileMatrix.Identifier,\n            matrixSize: [tileMatrix.MatrixHeight, tileMatrix.MatrixWidth],\n            scaleDenominator: tileMatrix.ScaleDenominator,\n            tileSize: [tileMatrix.TileWidth, tileMatrix.TileHeight],\n            topLeftCorner: tileMatrix.TopLeftCorner,\n          };\n        }),\n        matrixSet,\n        opacity: layerOpacity,\n        requestEncoding: layerReqEncoding,\n        style: 'default',\n        type: 'WMTS',\n        version: '1.0.0',\n      };\n    });\n  }\n\n  /**\n   * This function\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeOSM(layer) {\n    let encodedLayer = null;\n\n    const layerImpl = layer.getImpl();\n    const olLayer = layerImpl.getOL3Layer();\n    const layerSource = olLayer.getSource();\n    const tileGrid = layerSource.getTileGrid();\n\n    const layerUrl = layer.url || 'http://tile.openstreetmap.org/';\n    const layerName = layer.name;\n    const layerOpacity = olLayer.getOpacity();\n    const tiled = layerImpl.tiled;\n    const layerExtent = tileGrid.getExtent();\n    const tileSize = tileGrid.getTileSize();\n    const resolutions = tileGrid.getResolutions();\n    encodedLayer = {\n      baseURL: layerUrl,\n      opacity: layerOpacity,\n      singleTile: !tiled,\n      layer: layerName,\n      maxExtent: layerExtent,\n      tileSize: [tileSize, tileSize],\n      resolutions,\n      type: 'OSM',\n      extension: 'png',\n    };\n    return encodedLayer;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeMapbox(layer) {\n    let encodedLayer = null;\n\n    const layerImpl = layer.getImpl();\n    const olLayer = layerImpl.getOL3Layer();\n    const layerSource = olLayer.getSource();\n    const tileGrid = layerSource.getTileGrid();\n\n    const layerUrl = M.utils.concatUrlPaths([M.config.MAPBOX_URL, layer.name]);\n    const layerOpacity = olLayer.getOpacity();\n    const layerExtent = tileGrid.getExtent();\n\n    const tileSize = tileGrid.getTileSize();\n    const resolutions = tileGrid.getResolutions();\n\n\n    const customParams = {};\n    customParams[M.config.MAPBOX_TOKEN_NAME] = M.config.MAPBOX_TOKEN_VALUE;\n    encodedLayer = {\n      opacity: layerOpacity,\n      baseURL: layerUrl,\n      customParams,\n      maxExtent: layerExtent,\n      tileSize: [tileSize, tileSize],\n      resolutions,\n      extension: M.config.MAPBOX_EXTENSION,\n      type: 'xyz',\n      path_format: '/${z}/${x}/${y}.png',\n    };\n\n    return encodedLayer;\n  }\n\n  /**\n   * This function reprojects map on selected SRS.\n   *\n   * @function\n   * @param {string} origin - EPSG:25830\n   * @param {array<number>} coordinates pair\n   * @api\n   */\n  reproject(origin, coordinates) {\n    const originProj = ol.proj.get(origin);\n    const destProj = ol.proj.get('EPSG:4326');\n    const coordinatesTransform = ol.proj.transform(coordinates, originProj, destProj);\n    return coordinatesTransform;\n  }\n\n  transformExt(box, code, currProj) {\n    return ol.proj.transformExtent(box, code, currProj);\n  }\n\n  /**\n   * This function destroys this control, clearing the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n}\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/control/PrinterMapControl\n */\n\nimport PrinterMapControlImpl from '../../impl/ol/js/printermapcontrol';\nimport printermapHTML from '../../templates/printermap';\nimport { getValue } from './i18n/language';\n\nexport default class PrinterMapControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class.\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(serverUrl, printTemplateUrl, printStatusUrl, credits) {\n    const impl = new PrinterMapControlImpl();\n\n    super(impl, PrinterMapControl.NAME);\n\n    if (M.utils.isUndefined(PrinterMapControlImpl)) {\n      M.exception(getValue('exception.impl'));\n    }\n\n    if (M.utils.isUndefined(PrinterMapControlImpl.prototype.encodeLayer)) {\n      M.exception(getValue('exception.encode'));\n    }\n\n    /**\n     * Mapfish server url\n     * @private\n     * @type {String}\n     */\n    this.serverUrl_ = serverUrl;\n\n\n    /**\n     * Mapfish template url\n     * @private\n     * @type {String}\n     */\n    this.printTemplateUrl_ = printTemplateUrl;\n\n\n    /**\n     * Url for getting priting status\n     * @private\n     * @type {String}\n     */\n    this.printStatusUrl_ = printStatusUrl;\n\n\n    /**\n     * Credits text for template\n     * @private\n     * @type {String}\n     */\n    this.credits_ = credits;\n\n    /**\n     * Map title\n     * @private\n     * @type {HTMLElement}\n     */\n    this.inputTitle_ = null;\n\n    /**\n     * Map description\n     * @private\n     * @type {HTMLElement}\n     */\n    this.areaDescription_ = null;\n\n    /**\n     * Layout\n     * @private\n     * @type {HTMLElement}\n     */\n    this.layout_ = null;\n\n    /**\n     * Map format to print\n     * @private\n     * @type {HTMLElement}\n     */\n    this.format_ = null;\n\n    /**\n     * Map dpi to print\n     * @private\n     * @type {HTMLElement}\n     */\n    this.dpi_ = null;\n\n    /**\n     * Force scale boolean\n     * @private\n     * @type {HTMLElement}\n     */\n    this.forceScale_ = null;\n\n    /**\n     * Mapfish params\n     * @private\n     * @type {String}\n     */\n    this.params_ = {\n      layout: {\n        outputFilename: 'mapa_${yyyy-MM-dd_hhmmss}',\n      },\n      pages: {\n        clientLogo: '', // logo url\n        creditos: getValue('credits'),\n      },\n      parameters: {\n        imageSpain: 'file://E01_logo_IGN_CNIG.png',\n        imageCoordinates: 'file://E01_logo_IGN_CNIG.png',\n      },\n    };\n\n    /**\n     * Container of maps available for download\n     * @private\n     * @type {HTMLElement}\n     */\n    this.queueContainer_ = null;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {Promise}\n     */\n    this.capabilitiesPromise_ = null;\n\n    /**\n     * Mapfish options params\n     * @private\n     * @type {String}\n     */\n    this.options_ = {\n      dpi: 150,\n      forceScale: false,\n      format: 'pdf',\n      legend: 'false',\n      layout: 'A4 horizontal',\n    };\n\n    this.layoutOptions_ = [];\n    this.dpisOptions_ = [];\n    this.outputFormats_ = ['pdf', 'png', 'jpg'];\n  }\n\n  /**\n   * This function checks when map printing is finished.\n   * @param {String} url - Mapfish GET request url\n   * @param {Function} callback - function that removes loading icon class.\n   */\n  getStatus(url, callback) {\n    M.remote.get(url).then((response) => {\n      const statusJson = JSON.parse(response.text);\n      const { status } = statusJson;\n      if (status === 'finished') {\n        callback();\n      } else if (status === 'error' || status === 'cancelled') {\n        callback();\n        if (statusJson.error.toLowerCase().indexOf('network is unreachable') > -1 || statusJson.error.toLowerCase().indexOf('illegalargument') > -1) {\n          M.dialog.error(getValue('exception.tile'));\n        } else {\n          M.dialog.error(getValue('exception.error'));\n        }\n\n        this.queueContainer_.lastChild.remove();\n      } else {\n        setTimeout(() => this.getStatus(url, callback), 1000);\n      }\n    });\n  }\n\n  /**\n   * This function creates the view to the specified map.\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stabletrue\n   */\n  createView(map) {\n    const promise = new Promise((success, fail) => {\n      this.getCapabilities().then((capabilitiesParam) => {\n        const capabilities = capabilitiesParam;\n        let i = 0;\n        let ilen;\n\n        // default layout\n        for (i = 0, ilen = capabilities.layouts.length; i < ilen; i += 1) {\n          const layout = capabilities.layouts[i];\n          if (layout.name === this.options_.layout) {\n            layout.default = true;\n            break;\n          }\n        }\n\n        // show only template names without 'jpg' on their names\n        capabilities.layouts = capabilities.layouts.filter((l) => {\n          return !l.name.endsWith('jpg');\n        });\n\n        this.layoutOptions_ = [].concat(capabilities.layouts.map((item) => {\n          return item.name;\n        }));\n\n        capabilities.dpis = [];\n        let attribute;\n        // default dpi\n        // recommended DPI list attribute search\n        for (i = 0, ilen = capabilities.layouts[0].attributes.length; i < ilen; i += 1) {\n          if (capabilities.layouts[0].attributes[i].clientInfo !== null) {\n            attribute = capabilities.layouts[0].attributes[i];\n          }\n        }\n\n        for (i = 0, ilen = attribute.clientInfo.dpiSuggestions.length; i < ilen; i += 1) {\n          const dpi = attribute.clientInfo.dpiSuggestions[i];\n\n          if (parseInt(dpi, 10) === this.options_.dpi) {\n            dpi.default = true;\n            break;\n          }\n          const object = { value: dpi };\n          capabilities.dpis.push(object);\n        }\n\n        this.dpisOptions_ = [].concat(capabilities.dpis.map((item) => {\n          return item.value;\n        }));\n\n        if (Array.isArray(capabilities.formats)) {\n          this.outputFormats_ = capabilities.formats;\n        }\n\n        capabilities.format = this.outputFormats_.map((format) => {\n          return {\n            name: format,\n            default: format === 'pdf',\n          };\n        });\n\n        // forceScale\n        capabilities.forceScale = this.options_.forceScale;\n\n        // translations\n        capabilities.translations = {\n          tooltip: getValue('tooltip'),\n          title: getValue('title'),\n          description: getValue('description'),\n          layout: getValue('layout'),\n          format: getValue('format'),\n          force: getValue('force'),\n          print: getValue('print'),\n          delete: getValue('delete'),\n          download: getValue('download'),\n          minimize: getValue('minimize'),\n        };\n\n        const html = M.template.compileSync(printermapHTML, {\n          jsonp: true,\n          vars: capabilities,\n        });\n        this.addEvents(html);\n        success(html);\n      });\n    });\n    return promise;\n  }\n\n  /**\n   * This function adds event listeners.\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  addEvents(html) {\n    this.element_ = html;\n\n    this.inputTitle_ = this.element_.querySelector('.form div.title > input');\n\n    this.areaDescription_ = this.element_.querySelector('.form div.description > textarea');\n\n    const selectLayout = this.element_.querySelector('.form div.layout > select');\n    selectLayout.addEventListener('change', (e) => {\n      const layoutValue = selectLayout.value;\n      this.setLayout({\n        value: layoutValue,\n        name: layoutValue,\n      });\n    });\n\n    const layoutValue = selectLayout.value;\n    this.setLayout({\n      value: layoutValue,\n      name: layoutValue,\n    });\n\n    const selectDpi = this.element_.querySelector('.form div.dpi > select');\n    selectDpi.addEventListener('change', (e) => {\n      const dpiValue = selectDpi.value;\n      this.setDpi({\n        value: dpiValue,\n        name: dpiValue,\n      });\n    });\n\n    const dpiValue = selectDpi.value;\n    this.setDpi({\n      value: dpiValue,\n      name: dpiValue,\n    });\n\n    const selectFormat = this.element_.querySelector('.form div.format > select');\n    selectFormat.addEventListener('change', (e) => {\n      this.setFormat(selectFormat.value);\n    });\n    this.setFormat(selectFormat.value);\n\n    /*\n    const checkboxForceScale = this.element_.querySelector('.form div.forcescale > input');\n    checkboxForceScale.addEventListener('click', (e) => {\n      this.setForceScale(checkboxForceScale.checked);\n    });\n    this.setForceScale(checkboxForceScale.checked);\n    */\n\n    const printBtn = this.element_.querySelector('.button > button.print');\n    printBtn.addEventListener('click', this.printClick_.bind(this));\n\n    const cleanBtn = this.element_.querySelector('.button > button.remove');\n    cleanBtn.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      // reset values\n      this.inputTitle_.value = '';\n      this.areaDescription_.value = '';\n      selectLayout.value = this.layoutOptions_[0];\n      selectDpi.value = this.dpisOptions_[0];\n      selectFormat.value = this.options_.format;\n      // checkboxForceScale.checked = this.options_.forceScale;\n\n      // Create events and init\n      const changeEvent = document.createEvent('HTMLEvents');\n      changeEvent.initEvent('change');\n      const clickEvent = document.createEvent('HTMLEvents');\n      // Fire listeners\n      clickEvent.initEvent('click');\n      selectLayout.dispatchEvent(changeEvent);\n      selectDpi.dispatchEvent(changeEvent);\n      selectFormat.dispatchEvent(changeEvent);\n      // checkboxForceScale.dispatchEvent(clickEvent);\n      // clean queue\n\n      Array.prototype.forEach.apply(this.queueContainer_.children, [(child) => {\n        child.removeEventListener('click', this.downloadPrint);\n      }, this]);\n\n      this.queueContainer_.innerHTML = '';\n    });\n\n    this.queueContainer_ = this.element_.querySelector('.queue > ul.queue-container');\n    M.utils.enableTouchScroll(this.queueContainer_);\n  }\n\n  /**\n   * Sets layout\n   *\n   * @private\n   * @function\n   */\n  setLayout(layout) {\n    this.layout_ = layout;\n  }\n\n  /**\n   * Sets format\n   *\n   * @private\n   * @function\n   */\n  setFormat(format) {\n    this.format_ = format;\n  }\n\n  /**\n   * Sets dpi\n   *\n   * @private\n   * @function\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * Sets force scale option\n   *\n   * @private\n   * @function\n   */\n  setForceScale(forceScale) {\n    this.forceScale_ = forceScale;\n  }\n\n  /**\n   * This function prints on click\n   *\n   * @private\n   * @function\n   */\n  printClick_(evt) {\n    evt.preventDefault();\n\n    this.getPrintData().then((printData) => {\n      let printUrl = M.utils.concatUrlPaths([this.printTemplateUrl_, `report.${printData.outputFormat}`]);\n\n      const queueEl = this.createQueueElement();\n      this.queueContainer_.appendChild(queueEl);\n      queueEl.classList.add(PrinterMapControl.LOADING_CLASS);\n      printUrl = M.utils.addParameters(printUrl, 'mapeaop=geoprint');\n      // FIXME: delete proxy deactivation and uncomment if/else when proxy is fixed on Mapea\n      M.proxy(false);\n      M.remote.post(printUrl, printData).then((responseParam) => {\n        let response = responseParam;\n        const responseStatusURL = JSON.parse(response.text);\n        const ref = responseStatusURL.ref;\n        const statusURL = M.utils.concatUrlPaths([this.printStatusUrl_, `${ref}.json`]);\n        this.getStatus(statusURL, () => queueEl.classList.remove(PrinterMapControl.LOADING_CLASS));\n\n        // if (response.error !== true) { // withoud proxy, response.error === true\n        let downloadUrl;\n        try {\n          response = JSON.parse(response.text);\n          if (this.serverUrl_.endsWith('/geoprint')) {\n            const url = this.serverUrl_.substring(0, this.serverUrl_.lastIndexOf('/geoprint'));\n            downloadUrl = M.utils.concatUrlPaths([url, response.downloadURL]);\n          } else {\n            downloadUrl = M.utils.concatUrlPaths([this.serverUrl_, response.downloadURL]);\n          }\n        } catch (err) {\n          M.exception(err);\n        }\n        queueEl.setAttribute(PrinterMapControl.DOWNLOAD_ATTR_NAME, downloadUrl);\n        queueEl.addEventListener('click', this.downloadPrint);\n        // } else {\n        //   M.dialog.error('Se ha producido un error en la impresión.');\n        // }\n      });\n      M.proxy(true);\n    });\n  }\n\n  /**\n   * Gets capabilities\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  getCapabilities() {\n    if (M.utils.isNullOrEmpty(this.capabilitiesPromise_)) {\n      this.capabilitiesPromise_ = new Promise((success, fail) => {\n        const capabilitiesUrl = M.utils.concatUrlPaths([this.printTemplateUrl_, 'capabilities.json']);\n        M.remote.get(capabilitiesUrl).then((response) => {\n          let capabilities = {};\n          try {\n            capabilities = JSON.parse(response.text);\n          } catch (err) {\n            M.exception(err);\n          }\n          success(capabilities);\n        });\n      });\n    }\n    return this.capabilitiesPromise_;\n  }\n\n  /**\n   * Converts decimal degrees coordinates to degrees, minutes, seconds\n   * @public\n   * @function\n   * @param {String} coordinate - single coordinate (one of a pair)\n   * @api\n   */\n  converterDecimalToDMS(coordinate) {\n    let dms;\n    let aux;\n    const coord = coordinate.toString();\n    const splittedCoord = coord.split('.');\n    // Degrees\n    dms = `${splittedCoord[0]}º `;\n    // Minutes\n    aux = `0.${splittedCoord[1]}`;\n    aux *= 60;\n    aux = aux.toString();\n    aux = aux.split('.');\n    dms = `${dms}${aux[0]}' `;\n    // Seconds\n    aux = `0.${aux[1]}`;\n    aux *= 60;\n    aux = aux.toString();\n    aux = aux.split('.');\n    dms = `${dms}${aux[0]}'' `;\n    return dms;\n  }\n\n  /**\n   * Converts original bbox coordinates to DMS coordinates.\n   * @public\n   * @function\n   * @api\n   * @param {Array<Object>} bbox - { x: {min, max}, y: {min, max} }\n   */\n  convertBboxToDMS(bbox) {\n    const proj = this.map_.getProjection();\n    let dmsBbox = bbox;\n\n    if (proj.units === 'm') {\n      const min = [bbox.x.min, bbox.y.min];\n      const max = [bbox.x.max, bbox.y.max];\n      const newMin = this.getImpl().reproject(proj.code, min);\n      const newMax = this.getImpl().reproject(proj.code, max);\n      dmsBbox = {\n        x: {\n          min: newMin[0],\n          max: newMax[0],\n        },\n        y: {\n          min: newMin[1],\n          max: newMax[1],\n        },\n      };\n    }\n\n    dmsBbox = this.convertDecimalBoxToDMS(dmsBbox);\n    return dmsBbox;\n  }\n\n  /**\n   * Converts decimal coordinates Bbox to DMS coordinates Bbox.\n   * @public\n   * @function\n   * @api\n   * @param { Array < Object > } bbox - { x: { min, max }, y: { min, max } }\n   */\n  convertDecimalBoxToDMS(bbox) {\n    return {\n      x: {\n        min: this.converterDecimalToDMS(bbox.x.min),\n        max: this.converterDecimalToDMS(bbox.x.max),\n      },\n      y: {\n        min: this.converterDecimalToDMS(bbox.y.min),\n        max: this.converterDecimalToDMS(bbox.y.max),\n      },\n    };\n  }\n\n  /**\n   * This function returns request JSON.\n   *\n   * @private\n   * @function\n   */\n  getPrintData() {\n    const title = this.inputTitle_.value;\n    let description = this.areaDescription_.value;\n    const credits = this.credits_;\n    if (credits.length > 2) {\n      if (description.length > 0) {\n        description += ` - ${credits}`;\n      } else {\n        description += credits;\n      }\n    }\n\n    const projection = this.map_.getProjection().code;\n    const bbox = this.map_.getBbox();\n    // const dmsBbox = this.convertBboxToDMS(bbox);\n    const dmsBbox = bbox;\n    let layout = this.layout_.name;\n    const dpi = this.dpi_.value;\n    const outputFormat = this.format_;\n    const center = this.map_.getCenter();\n    const parameters = this.params_.parameters;\n    const attributionContainer = document.querySelector('#m-attributions-container>div>a');\n    const attribution = attributionContainer !== null ?\n      `${getValue('base')}: ${attributionContainer.innerHTML}` : '';\n\n    if (outputFormat === 'jpg') {\n      layout += ' jpg';\n    }\n\n    const date = new Date();\n\n    const currentDate = ''.concat(date.getDate(), '/', date.getMonth() + 1, '/', date.getFullYear());\n\n    let fileTitle = title.replace(' ', '');\n\n    if (fileTitle.length <= 8) {\n      fileTitle = fileTitle.concat('${yyyyMMddhhmmss}');\n      this.params_.layout.outputFilename = fileTitle;\n    } else {\n      fileTitle = fileTitle.substring(0, 7).concat('${yyyyMMddhhmmss}');\n      this.params_.layout.outputFilename = fileTitle;\n    }\n\n\n    const printData = M.utils.extend({\n      layout,\n      outputFormat,\n      attributes: {\n        title,\n        description,\n        attributionInfo: attribution,\n        refsrs: this.turnProjIntoLegend(projection),\n        printDate: currentDate,\n        map: {\n          dpi,\n          projection,\n          useAdjustBounds: true,\n        },\n        xCoordTopLeft: dmsBbox.y.max,\n        yCoordTopLeft: dmsBbox.x.min,\n        xCoordTopRight: dmsBbox.y.max,\n        yCoordTopRight: dmsBbox.x.max,\n        xCoordBotRight: dmsBbox.y.min,\n        yCoordBotRight: dmsBbox.x.max,\n        xCoordBotLeft: dmsBbox.y.min,\n        yCoordBotLeft: dmsBbox.x.min,\n      },\n    }, this.params_.layout);\n\n    return this.encodeLayers().then((encodedLayers) => {\n      printData.attributes.map.layers = encodedLayers;\n      printData.attributes = Object.assign(printData.attributes, parameters);\n\n      if (projection !== 'EPSG:3857' && this.map_.getLayers().some(layer => (layer.type === M.layer.type.OSM || layer.type === M.layer.type.Mapbox))) {\n        printData.attributes.map.projection = 'EPSG:3857';\n      }\n\n      if (!this.forceScale_) {\n        printData.attributes.map.bbox = [bbox.x.min, bbox.y.min, bbox.x.max, bbox.y.max];\n\n        if (projection !== 'EPSG:3857' && this.map_.getLayers().some(layer => (layer.type === M.layer.type.OSM || layer.type === M.layer.type.Mapbox))) {\n          printData.attributes.map.bbox = this.getImpl().transformExt(printData.attributes.map.bbox, projection, 'EPSG:3857');\n        }\n      } else if (this.forceScale_) {\n        printData.attributes.map.center = [center.x, center.y];\n        printData.attributes.map.scale = M.impl.utils.getWMTSScale(this.map_, true);\n      }\n\n      return printData;\n    });\n  }\n\n  /**\n   * This function encodes layers.\n   *\n   * @private\n   * @function\n   */\n  encodeLayers() {\n    // Filters visible layers whose resolution is inside map resolutions range\n    // and that doesn't have Cluster style.\n    let layers = this.map_.getLayers().filter((layer) => {\n      return (layer.isVisible() && layer.inRange() && layer.name !== 'cluster_cover');\n    });\n\n    let numLayersToProc = layers.length;\n\n    const otherLayers = this.getImpl().getParametrizedLayers('IMAGEID', layers);\n    if (otherLayers.length > 0) {\n      layers = layers.concat(otherLayers);\n      numLayersToProc = layers.length;\n    }\n\n    return (new Promise((success, fail) => {\n      let encodedLayers = [];\n      const vectorLayers = [];\n      const wmsLayers = [];\n      const otherBaseLayers = [];\n      layers.forEach((layer) => {\n        this.getImpl().encodeLayer(layer).then((encodedLayer) => {\n          // Vector layers must be added after non vector layers.\n          if (!M.utils.isNullOrEmpty(encodedLayer)) {\n            if (encodedLayer.type === 'Vector' || encodedLayer.type === 'KML') {\n              vectorLayers.push(encodedLayer);\n            } else if (encodedLayer.type === 'WMS') {\n              wmsLayers.push(encodedLayer);\n            } else {\n              otherBaseLayers.push(encodedLayer);\n            }\n          }\n\n          numLayersToProc -= 1;\n          if (numLayersToProc === 0) {\n            encodedLayers = encodedLayers.concat(otherBaseLayers)\n              .concat(wmsLayers).concat(vectorLayers);\n            // Mapfish requires reverse order\n            success(encodedLayers.reverse());\n          }\n        });\n      });\n    }));\n  }\n\n  /**\n   * This function creates list element.\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  createQueueElement() {\n    const queueElem = document.createElement('li');\n    let title = this.inputTitle_.value;\n    if (M.utils.isNullOrEmpty(title)) {\n      title = getValue('no_title');\n    }\n    queueElem.innerHTML = title;\n    return queueElem;\n  }\n\n  /**\n   * This function downloads printed map.\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  downloadPrint(event) {\n    event.preventDefault();\n\n    const downloadUrl = this.getAttribute(PrinterMapControl.DOWNLOAD_ATTR_NAME);\n    if (!M.utils.isNullOrEmpty(downloadUrl)) {\n      window.open(downloadUrl, '_blank');\n    }\n  }\n\n  /**\n   *  Converts epsg code to projection name.\n   * @public\n   * @function\n   * @param {String} projection - EPSG:xxxx\n   * @api\n   */\n  turnProjIntoLegend(projection) {\n    let projectionLegend;\n    switch (projection) {\n      case 'EPSG:4258':\n        projectionLegend = 'EPSG:4258 (ETRS89)';\n        break;\n      case 'EPSG:4326':\n        projectionLegend = 'EPSG:4326 (WGS84)';\n        break;\n      case 'EPSG:3857':\n        projectionLegend = 'EPSG:3857 (WGS84)';\n        break;\n      case 'EPSG:25831':\n        projectionLegend = `EPSG:25831 (UTM ${getValue('zone')} 31N)`;\n        break;\n      case 'EPSG:25830':\n        projectionLegend = `EPSG:25830 (UTM ${getValue('zone')} 30N)`;\n        break;\n      case 'EPSG:25829':\n        projectionLegend = `EPSG:25829 (UTM ${getValue('zone')} 29N)`;\n        break;\n      case 'EPSG:25828':\n        projectionLegend = `EPSG:25828 (UTM ${getValue('zone')} 28N)`;\n        break;\n      default:\n        projectionLegend = '';\n    }\n    return projectionLegend;\n  }\n\n  /**\n   * This function checks if an object is equal to this control.\n   *\n   * @function\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof PrinterMapControl) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n}\n\n/**\n * Name for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterMapControl.NAME = 'printermapcontrol';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterMapControl.TEMPLATE = 'printermap.html';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterMapControl.LOADING_CLASS = 'printing';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterMapControl.DOWNLOAD_ATTR_NAME = 'data-donwload-url-print';\n","/**\n * @module M/plugin/PrinterMap\n */\nimport 'assets/css/printermap';\nimport PrinterMapControl from './printermapcontrol';\nimport { getValue } from './i18n/language';\n\nexport default class PrinterMap extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(parameters = {}) {\n    super(null);\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Control that executes the searches\n     * @private\n     * @type {Object}\n     */\n    this.control_ = null;\n\n    /**\n     * Panel of this plugin\n     * @private\n     * @type {M.ui.Panel}\n     */\n    this.panel_ = null;\n\n    /**\n     * Name of this control\n     * @public\n     * @type {string}\n     * @api stable\n     */\n    this.name = PrinterMap.NAME;\n\n    /**\n     * Position of the plugin\n     * @private\n     * @type {String}\n     */\n    this.position_ = parameters.position || 'TR';\n\n    /**\n     * Option to allow the plugin to be collapsed or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsed_ = parameters.collapsed;\n    if (this.collapsed_ === undefined) this.collapsed_ = true;\n\n    /**\n     * Option to allow the plugin to be collapsible or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsible_ = parameters.collapsible;\n    if (this.collapsible_ === undefined) this.collapsible_ = true;\n\n    /**\n     * Mapfish server url\n     * @private\n     * @type {String}\n     */\n\n    this.serverUrl_ = parameters.serverUrl || M.config.GEOPRINT_URL;\n\n\n    /**\n     * Mapfish template url\n     * @private\n     * @type {String}\n     */\n    this.printTemplateUrl_ = parameters.printTemplateUrl || M.config.PRINTERMAP_TEMPLATE;\n\n    /**\n     * Mapfish template url\n     * @private\n     * @type {String}\n     */\n    this.printStatusUrl_ = parameters.printStatusUrl || M.config.GEOPRINT_STATUS;\n\n    /**\n     * Credits text for template\n     * @private\n     * @type {String}\n     */\n    this.credits_ = parameters.credits || '';\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.map_ = map;\n    this.control_ = new PrinterMapControl(\n      this.serverUrl_,\n      this.printTemplateUrl_,\n      this.printStatusUrl_,\n      this.credits_,\n    );\n    this.controls_.push(this.control_);\n    this.panel_ = new M.ui.Panel('printermap', {\n      collapsed: this.collapsed_,\n      collapsible: this.collapsible_,\n      className: 'm-printermap',\n      collapsedButtonClass: 'icon-impresora',\n      position: M.ui.position[this.position_],\n      tooltip: getValue('tooltip'),\n    });\n    this.panel_.on(M.evt.ADDED_TO_MAP, (html) => {\n      M.utils.enableTouchScroll(html);\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n    this.control_.on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.position_}*${this.collapsed_}*${this.collapsible_}*${this.serverUrl_}*${this.printTemplateUrl_}*${this.printStatusUrl_}`;\n  }\n\n  /**\n   * This function return the control of plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getControls() {\n    return this.controls_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    this.map_ = null;\n    this.control_ = null;\n    this.controls_ = null;\n    this.panel_ = null;\n    this.name = null;\n  }\n\n  /**\n   * This function compare if pluging recieved by param is instance of   M.plugin.PrinterMap\n   *\n   * @public\n   * @function\n   * @param {M.plugin} plugin to comapre\n   * @api stable\n   */\n  equals(plugin) {\n    if (plugin instanceof PrinterMap) {\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Name to identify this plugin\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterMap.NAME = 'printermap';\n","import M$plugin$PrinterMap from './/facade/js/printermap';\nimport M$control$PrinterMapControl from './/facade/js/printermapcontrol';\nimport M$impl$control$PrinterMapControl from './/impl/ol/js/printermapcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.PrinterMap = M$plugin$PrinterMap;\nwindow.M.control.PrinterMapControl = M$control$PrinterMapControl;\nwindow.M.impl.control.PrinterMapControl = M$impl$control$PrinterMapControl;\n"],"sourceRoot":""}