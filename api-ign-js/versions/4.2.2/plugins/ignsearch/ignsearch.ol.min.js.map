{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/ignsearch.html","webpack:///./src/templates/results.html","webpack:///./src/impl/ol/js/ignsearchcontrol.js","webpack:///./node_modules/@handlebars/allow-prototype-access/src/index.js","webpack:///./src/facade/js/ignsearchcontrol.js","webpack:///./src/facade/js/helpers.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/constants.js","webpack:///./src/facade/js/ignsearch.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","IGNSearchControl","M","impl","Control","map","html","_get","_getPrototypeOf","this","scale","wmts3857scales","newScale","reduce","prev","curr","Math","abs","olView","facadeMap_","getMapImpl","getView","newResolution","getMaxResolution","pow","indexOf","setResolution","coordinates","source","destiny","ol","proj","getTransform","transformFunc","allowInsecurePrototypeAccess","HandlebarsInstance","handlebarsInstance","originalCompile","compile","templateString","compileOptions","template","context","runtimeOptions","allowProtoPropertiesByDefault","allowProtoMethodsByDefault","extendRuntimeOptions","wrapCompileFunction","typingTimer","registerHelpers","insecureHandlebars","Handlebars","registerHelper","str","toUpperCase","v1","operator","v2","options","fn","inverse","type","address","id","municipality","cps","line","concat","undefined","translations","en","es","getValue","keyPath","res","lang","arguments","length","language","getLang","translation","getTranslation","utils","isNullOrEmpty","console","warn","split","current","servicesToSearch","maxResults","noProcess","countryCode","urlCandidates","urlFind","urlReverse","urlPrefix","urlAssistant","urlDispatcher","resultVisibility","reverse","locationID","requestStreet","geocoderCoords","zoom","searchPosition","pointStyle","nomenclatorSearchType","_this","ignsearchcontrol_classCallCheck","isUndefined","IGNSearchImplControl","exception","ignsearchcontrol_possibleConstructorReturn","ignsearchcontrol_getPrototypeOf","resultVisibility_","reverseActivated","urlParse","_this2","destroyMapLayers","Promise","success","compileSync","vars","deleteresults","obtener","direccion","tooltip_input","resultsBox","querySelector","searchInput","addEventListener","clearResultsAndGeometry","e","createTimeout","clearTimeout","activateDeactivateReverse","document","clearResults","clickReverseEvent","on","evt","CLICK","showReversePopUp","changePlaceholder","style","display","ADDED_TO_MAP","point","Point","radius","icon","form","class","rotation","rotate","offset","color","opacity","simple","Polygon","fill","drawNomenclatorResult","proxy","remote","then","geoJsonData","text","substring","removeLayers","clickedElementLayer","featureJSON","JSON","parse","geometry","fixCoordinatesPath","properties","lat","lng","layer","GeoJSON","features","displayInLayerSwitcher","createGeometryStyles","setStyle","setZIndex","addLayers","fullAddress","createFullAddress","perfectResult","state","showSearchPopUp","fake","err","reprojCoords","getImpl","reproject","getProjection","code","coord","getLayers","removePopup","_this3","origin","etrs89pointCoordinates","params","urlToGet","mapCoordinates","dataCoordinates","returnData","showPopUp","_this4","setTimeout","searchInputValue","control","_this5","firstResult","target","replace","searchValue","innerHTML","classList","add","fontSize","nomenclatorCandidates","geocoderCandidates","test","searchCoordinates","nomenclatorFinished","candidatesFinished","getNomenclatorData","showCandidatesResults","getCandidatesData","_this6","allCandidates","j","push","remove","parragraph","createElement","infoMsg","createTextNode","appendChild","compiledResult","results","places","elementList","querySelectorAll","forEach","listElement","goToLocation","item","click","_this7","datosCoordenadas","urlSinJSON","geoJsonData2","includes","hol","numFirstValue","val","stroke","width","zoomInLocation","popup","jsonResult","via","tip_via","portal","portalNumber","muni","locationId","_this8","zoomIn","requestPlace","addParameters","request","query","sourcename","outputformat","latLngString","location","resultTitle","title","latLngArray","latitude","parseFloat","longitude","newGeojson","inputValue","resultsArray","_this9","newInputVal","window","encodeURIComponent","resolve","_this10","thisElement","splice","elem","elementsData","_this11","element","getAttribute","parenthesisIndex","_this12","currentElement","selectedObject","findClickedItem","getFindData","drawGeocoderResultProv","drawGeocoderResult","service","_this13","resultsList","getElementById","Vector","calculateMaxExtent","extent","setBbox","setScale","setZoom","fire","filter","feature","setOfCoordinates","flag","placeholder","border","src","concatUrlPaths","config","THEME_URL","exactResult","exitState","destinyProj","newCoordinates","mapcoords","featureCoordinates","addTab","featureTabOpts","content","toFixed","getPopup","Popup","myPopUp","panMapIfOutOfView","addPopup","geographicNameType","IGNSearch","ignsearch_classCallCheck","ignsearch_possibleConstructorReturn","ignsearch_getPrototypeOf","map_","controls_","IGNSEARCH_TYPES_CONFIGURATION","isCollapsed","collapsible","position","tooltip_","tooltip","reverse_","locationID_","requestStreet_","isString","Number","geocoderCoords_","zoom_","parseInt","Plugin","panel_","ui","Panel","collapsed","className","collapsedButtonClass","addControls","addPanels","setResultVisibility","removeControls","control_","plugin","M$plugin$IGNSearch","M$control$IGNSearchControl","M$impl$control$IGNSearchControl"],"mappings":"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","file":"ignsearch.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-ignsearch\\\" title=\\\"\\\">\\n    <div class=\\\"search-panel\\\">\\n        <input type=\\\"text\\\" id=\\\"m-ignsearch-search-input\\\" class=\\\"m-input-search\\\" title=\\\"{{translations.tooltip_input}}\\\" placeholder=\\\"{{translations.direccion}}\\\" />\\n        <button id=\\\"m-ignsearch-locate-button\\\" title=\\\"{{translations.obtener}}\\\">\\n            <span class=\\\"icon-locate\\\" />\\n        </button>\\n        <button id=\\\"m-ignsearch-clear-button\\\" class=\\\"m-button-limpiar\\\" title=\\\"{{translations.deleteresults}}\\\">\\n            <span class=\\\"icon-remove\\\" />\\n        </button>\\n    </div>\\n    <div id=\\\"m-ignsearch-results\\\">\\n        <!-- Here goes the list of search results -->\\n    </div>\\n</div>\\n\";","module.exports = \"<ul id=\\\"m-ignsearch-results-list\\\">\\n    {{#each places}}\\n        {{#if this.address}}\\n            {{#printType this.type this.address this.id this.municipality this.cps}}\\n            {{/printType}}\\n        {{else}}\\n            {{#printType this.type this.title this.id this.municipality this.cps}}\\n            {{/printType}}\\n        {{/if}}\\n    {{/each}}\\n</ul>\\n\";","/**\n * @module M/impl/control/IGNSearchControl\n */\nexport default class IGNSearchControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n  }\n  /**\n   * This function sets a new scale to the map.\n   * Developed for WGS 84 / Pseudo - Mercator 3857 projection.\n   * @private\n   * @function\n   */\n  setScale(scale) {\n    const wmts3857scales = [\n      559082264.0287178,\n      279541132.0143589,\n      139770566.0071794,\n      69885283.00358972,\n      34942641.50179486,\n      17471320.75089743,\n      8735660.375448715,\n      4367830.187724357,\n      2183915.093862179,\n      1091957.546931089,\n      545978.7734655447,\n      272989.3867327723,\n      136494.6933663862,\n      68247.34668319309,\n      34123.67334159654,\n      17061.83667079827,\n      8530.918335399136,\n      4265.459167699568,\n      2132.729583849784,\n    ];\n    // const wmts3857resolutions = [\n    //   156543.0339280410,\n    //   78271.51696402048,\n    //   39135.75848201023,\n    //   19567.87924100512,\n    //   9783.939620502561,\n    //   4891.969810251280,\n    //   2445.984905125640,\n    //   1222.992452562820,\n    //   611.4962262814100,\n    //   305.7481131407048,\n    //   152.8740565703525,\n    //   76.43702828517624,\n    //   38.21851414258813,\n    //   19.10925707129406,\n    //   9.554628535647032,\n    //   4.777314267823516,\n    //   2.388657133911758,\n    //   1.194328566955879,\n    //   0.5971642834779395,\n    // ];\n    // Finds closest standard scale\n    const newScale = wmts3857scales.reduce((prev, curr) => {\n      return (Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev);\n    });\n    const olMap = this.facadeMap_.getMapImpl();\n    const olView = olMap.getView();\n    const newResolution = olView.getMaxResolution() / (2 ** wmts3857scales.indexOf(newScale));\n    olView.setResolution(newResolution);\n    // 4.777314267823516); // resolution for scale 17016, table page 120\n    // const dpiToCM = M.units.DOTS_PER_INCH / 2.54;\n    // const resolution = (scale / dpiToCM) / 100;\n    // olView.setResolution(resolution);\n  }\n  /**\n   * This function reprojects given coordinates to given projection.\n   * @private\n   * @function\n   * @param { Array <number> } coordinates - [x,y]\n   * @param { string } source - 'EPSG:4326'\n   * @param { string } destiny - 'EPSG:4326'\n   */\n  reproject(coordinates, source, destiny) {\n    const transformFunc = ol.proj.getTransform(source, destiny);\n    return transformFunc(coordinates);\n  }\n}\n","export function allowInsecurePrototypeAccess(HandlebarsInstance) {\n  return wrapCompileFunction(HandlebarsInstance.create());\n}\n\nfunction wrapCompileFunction(handlebarsInstance) {\n  const originalCompile = handlebarsInstance.compile;\n  handlebarsInstance.compile = function compile(templateString, compileOptions) {\n    const template = originalCompile.call(this, templateString, compileOptions);\n    return function insecureTemplate(context, runtimeOptions) {\n      return template(context, extendRuntimeOptions(runtimeOptions));\n    };\n  };\n\n  return handlebarsInstance;\n}\n\nfunction extendRuntimeOptions(runtimeOptions) {\n  return {\n    allowProtoPropertiesByDefault: true,\n    allowProtoMethodsByDefault: true,\n    ...runtimeOptions\n  };\n}\n","/**\n * @module M/control/IGNSearchControl\n */\nimport IGNSearchImplControl from '../../impl/ol/js/ignsearchcontrol';\nimport template from '../../templates/ignsearch';\nimport results from '../../templates/results';\nimport registerHelpers from './helpers';\nimport { getValue } from './i18n/language';\n\nlet typingTimer;\n/**\n * @classdesc\n * This class creates an input for searching locations on a map.\n * It uses Instituto Geográfico Nacional services Geocoder and Nomenclator\n * to search user's input location and return coordinates on click.\n */\nexport default class IGNSearchControl extends M.Control {\n  /*\n   * @constructor\n   * @extends {M.Control}\n   * @api\n   */\n  constructor(\n    servicesToSearch,\n    maxResults,\n    noProcess,\n    countryCode,\n    urlCandidates,\n    urlFind,\n    urlReverse,\n    urlPrefix,\n    urlAssistant,\n    urlDispatcher,\n    resultVisibility,\n    reverse,\n    locationID,\n    requestStreet,\n    geocoderCoords,\n    zoom,\n    searchPosition,\n    pointStyle,\n    nomenclatorSearchType,\n  ) {\n    if (M.utils.isUndefined(IGNSearchImplControl)) {\n      M.exception('La implementación usada no puede crear controles IGNSearchControl');\n    }\n    const impl = new IGNSearchImplControl();\n    super(impl, 'IGNSearch');\n    // Class properties\n    /**\n     * This variable indicates which services should be searched\n     * (geocoder, nomenclator or both)\n     * @private\n     * @type {string} - 'g' | 'n' | 'gn'\n     */\n    this.servicesToSearch = servicesToSearch;\n    /**\n     * This variable sets the maximun results returned by a service\n     * (if both services are searched the maximum results will be twice this number)\n     * @private\n     * @type {number}\n     */\n    this.maxResults = maxResults;\n    /**\n     * This variables indicates which entities shouldn't be searched\n     * @private\n     * @type {string} - 'municipio' | 'poblacion' | 'toponimo' | 'municipio,poblacion' | etc\n     */\n    this.noProcess = noProcess;\n    /**\n     * This variable indicates the country code.\n     * @private\n     * @type {string} - 'es'\n     */\n    this.countryCode = countryCode;\n    /**\n     * This variable indicates Geocoder Candidates service url\n     * @private\n     * @type {string}\n     */\n    this.urlCandidates = urlCandidates;\n    /**\n     * This variable indicates Geocoder Find service url\n     * @private\n     * @type {string}\n     */\n    this.urlFind = urlFind;\n    /**\n     * This variable indicates Geocoder Reverse service url\n     * @private\n     * @type {string}\n     */\n    this.urlReverse = urlReverse;\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.urlPrefix = urlPrefix;\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.urlAssistant = urlAssistant;\n    /**\n     * This variable indicates Nomenclator Dispatcher service url\n     * @private\n     * @type {string}\n     */\n    this.urlDispatcher = urlDispatcher;\n    /**\n     * This variable indicates whether result geometry should be drawn on map.\n     * @private\n     * @type {boolean}\n     */\n    this.resultVisibility_ = resultVisibility;\n    /**\n     * This variable indicates which entity types should be searched on Nomenclator service.\n     * @private\n     * @type {Array<string>}\n     */\n    this.nomenclatorSearchType = nomenclatorSearchType;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.searchPosition = searchPosition;\n    /**\n     * This variable indicates whether reverse geocoder button should be available.\n     * @private\n     * @type {Boolean}\n     */\n    this.reverse = reverse;\n    /**\n     * This variable indicates whether reverse geocoder button is activated.\n     * @private\n     * @type {Boolean}\n     */\n    this.reverseActivated = false;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.locationID = locationID;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.requestStreet = requestStreet;\n    /**\n     * Reverse geocoder coordinates\n     * @private\n     * @type {string}\n     */\n    this.geocoderCoords = geocoderCoords;\n\n    /**\n     * Zoom\n     *\n     * @private\n     * @type {number}\n     */\n    this.zoom = zoom;\n\n    /**\n     * Reverse geocoder coordinates\n     * @private\n     * @type {string}\n     */\n    this.urlParse = null;\n\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.pointStyle = pointStyle;\n    registerHelpers();\n  }\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api\n   */\n  createView(map) {\n    this.map = map;\n    this.destroyMapLayers();\n    return new Promise((success) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            deleteresults: getValue('deleteresults'),\n            obtener: getValue('obtener'),\n            direccion: getValue('direccion'),\n            tooltip_input: getValue('tooltip_input'),\n          },\n        },\n      });\n      this.html = html;\n      this.resultsBox = html.querySelector('#m-ignsearch-results');\n      this.searchInput = this.html.querySelector('#m-ignsearch-search-input');\n      html.querySelector('#m-ignsearch-clear-button').addEventListener('click', this.clearResultsAndGeometry.bind(this));\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keyup', e => this.createTimeout(e));\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keydown', () => {\n        clearTimeout(typingTimer);\n      });\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keydown', () => {\n        clearTimeout(typingTimer);\n      });\n      html.querySelector('#m-ignsearch-locate-button').addEventListener('click', this.activateDeactivateReverse.bind(this));\n      document.querySelector('.ign-search-panel>.m-panel-btn').addEventListener('click', this.clearResults.bind(this));\n      this.clickReverseEvent = this.map.on(M.evt.CLICK, e => this.showReversePopUp(e));\n      this.changePlaceholder();\n      if (!this.reverse) {\n        html.querySelector('#m-ignsearch-locate-button').style.display = 'none';\n      }\n      this.on(M.evt.ADDED_TO_MAP, () => {\n        if (this.locationID && this.locationID.length > 0) {\n          this.point = new M.style.Point({\n            radius: 5,\n            icon: {\n              form: 'none',\n              class: 'g-cartografia-pin',\n              radius: 12,\n              rotation: 0,\n              rotate: false,\n              offset: [0, -12],\n              color: '#f00',\n              opacity: 1,\n            },\n          });\n          this.simple = new M.style.Polygon({\n            fill: {\n              color: 'black',\n              opacity: 0,\n            },\n          });\n          this.drawNomenclatorResult(this.locationID, false);\n        }\n        if (this.requestStreet && this.requestStreet.length > 0) {\n          M.proxy(false);\n          M.remote.get(this.requestStreet).then((res) => {\n            const geoJsonData = res.text.substring(9, res.text.length - 1);\n            this.map.removeLayers(this.clickedElementLayer);\n            const featureJSON = JSON.parse(geoJsonData);\n            featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n            // Center coordinates\n            this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n            // New layer with geometry\n            this.clickedElementLayer = new M.layer.GeoJSON({\n              name: getValue('searchresult'),\n              source: {\n                type: 'FeatureCollection',\n                features: [featureJSON],\n              },\n            });\n            this.clickedElementLayer.displayInLayerSwitcher = false;\n\n            this.createGeometryStyles();\n\n            if (featureJSON.geometry.type === 'Point') {\n              this.clickedElementLayer.setStyle(this.point);\n            }\n\n            // Change zIndex value\n            this.clickedElementLayer.setZIndex(9999999999999999999);\n\n            // Stops showing polygon geometry\n            if (!this.resultVisibility_) {\n              this.clickedElementLayer.setStyle(this.simple);\n            }\n            this.map.addLayers(this.clickedElementLayer);\n            // show popup for streets\n            if (featureJSON.properties.type === 'callejero' || featureJSON.properties.type === 'portal') {\n              const fullAddress = this.createFullAddress(featureJSON.properties);\n\n              const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n              const perfectResult = featureJSON.properties.state;\n              this.showSearchPopUp(fullAddress, coordinates, perfectResult, { fake: true });\n            }\n\n            M.proxy(true);\n          }).catch((err) => {\n            M.proxy(true);\n          });\n        }\n\n        if (this.geocoderCoords && this.geocoderCoords.length === 2) {\n          this.activateDeactivateReverse();\n          const reprojCoords = this.getImpl().reproject(this.geocoderCoords, 'EPSG:4326', map.getProjection().code);\n          this.showReversePopUp({\n            coord: reprojCoords,\n            fake: true,\n          });\n        }\n      });\n      success(html);\n    });\n  }\n\n  /**\n   * This function remove search layers.\n   *\n   * @public\n   * @function\n   * @api\n   *\n   */\n  destroyMapLayers() {\n    for (let i = 0; i < this.map.getLayers().length; i += 1) {\n      if (this.map.getLayers()[i].name === getValue('searchresult')) {\n        this.map.removeLayers(this.map.getLayers()[i]);\n        this.map.removePopup();\n      }\n    }\n  }\n\n\n  /**\n   * This function toggles reverse geocoder button activation.\n   *\n   * @public\n   * @function\n   * @api\n   *\n   */\n  activateDeactivateReverse() {\n    if (!this.reverseActivated) {\n      this.reverseActivated = true;\n      document.querySelector('#m-ignsearch-locate-button span').style.color = '#71a7d3';\n    } else {\n      this.reverseActivated = false;\n      document.querySelector('#m-ignsearch-locate-button span').style.color = '#7A7A73';\n    }\n  }\n  /**\n   * This function shows information tooltip on clicked point.\n   * @param {Event} e - Event\n   */\n  showReversePopUp(e) {\n    if (this.reverseActivated) {\n      // Reproject coordinates to ETRS89 on decimal grades (+ North latitude and East longitude)\n      const origin = this.map.getProjection().code;\n      const destiny = 'EPSG:4258';\n      const etrs89pointCoordinates = this.getImpl()\n        .reproject([e.coord[0], e.coord[1]], origin, destiny);\n      // Params:\n      // lon, lat\n      // type (only if refcatastral) = 'refcatastral'\n      const params = `lon=${etrs89pointCoordinates[0]}&lat=${etrs89pointCoordinates[1]}`;\n      const urlToGet = `${this.urlReverse}?${params}`;\n      const mapCoordinates = e.coord;\n      this.geocoderCoords = etrs89pointCoordinates;\n      const dataCoordinates = [etrs89pointCoordinates[1], etrs89pointCoordinates[0]];\n      let fullAddress = '';\n      M.proxy(false);\n      M.remote.get(urlToGet).then((res) => {\n        if (res.text !== null) {\n          const returnData = JSON.parse(res.text);\n          fullAddress = this.createFullAddress(returnData);\n        } else {\n          fullAddress = getValue('exception.exists');\n        }\n        this.showPopUp(fullAddress, mapCoordinates, dataCoordinates, null, true, e);\n      });\n\n      M.proxy(true);\n    }\n  }\n\n  /**\n   * This function sets a timeout between keypress and search.\n   * @public\n   * @function\n   * @param {e} event that triggers the method\n   * @api\n   */\n  createTimeout(e) {\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => this.searchInputValue(e), 500);\n  }\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-ignsearch button');\n  }\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof IGNSearchControl;\n  }\n  /**\n   * This function\n   * 1.- Takes user's input\n   * 2.- Searches for ocurrences on IGN sources\n   * 3.- Returns results as items in a drop-down list (returns address)\n   * 4.- Onclick on an item goes to its coordinates\n   * @public\n   * @function\n   * @param {event} e - event that triggers this method\n   * @api\n   */\n  searchInputValue(e, firstResult = false) {\n    // const { value } = e.target;\n    const value = e.target.value.replace(',', ' ');\n    this.searchValue = value;\n    if (value.length <= 2) {\n      this.resultsBox.innerHTML = '';\n    } else {\n      this.resultsBox.innerHTML = '';\n      // Adds animation class during loading\n      this.resultsBox.classList.add('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '24px';\n\n      this.nomenclatorCandidates = [];\n      this.geocoderCandidates = [];\n\n      const regExpCoord = /[+-]?\\d+\\.\\d+(\\s|,|(,\\s))[+-]?\\d+\\.\\d+/;\n      // Checks if input content represents coordinates, else searches text\n      if (regExpCoord.test(value)) {\n        // searches coordinates point (TO DO) if coordinates are entered\n        this.searchCoordinates(value);\n      } else {\n        // saves on allCandidates search results from Nomenclator (CommunicationPoolservlet)\n        this.nomenclatorFinished = false;\n        this.candidatesFinished = false;\n        this.getNomenclatorData(value, this.nomenclatorCandidates).then(() => {\n          // saves on allCandidates search results from CartoCiudad (geocoder)\n          this.nomenclatorFinished = true;\n          this.showCandidatesResults(firstResult);\n        });\n\n        this.getCandidatesData(value, this.geocoderCandidates).then(() => {\n          this.candidatesFinished = true;\n          this.showCandidatesResults(firstResult);\n        });\n      }\n    }\n  }\n\n  showCandidatesResults(firstResult) {\n    this.allCandidates = [];\n    for (let i = 0; i < this.searchPosition.split(',').length; i += 1) {\n      if (this.searchPosition.split(',')[i] === 'nomenclator') {\n        for (let j = 0; j < this.nomenclatorCandidates.length; j += 1) {\n          this.allCandidates.push(this.nomenclatorCandidates[j]);\n        }\n      }\n      if (this.searchPosition.split(',')[i] === 'geocoder') {\n        for (let j = 0; j < this.geocoderCandidates.length; j += 1) {\n          this.allCandidates.push(this.geocoderCandidates[j]);\n        }\n      }\n    }\n\n    // Service doesn't find results\n    if (this.allCandidates.length === 0 && this.nomenclatorFinished && this.candidatesFinished) {\n      // Clears previous search\n      this.resultsBox.innerHTML = '';\n      // remove animation class and return to normal font size after loading\n      this.resultsBox.classList.remove('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '1em';\n      const parragraph = document.createElement('p');\n      const infoMsg = document.createTextNode(getValue('exception.results'));\n      parragraph.classList.add('m-ignsearch-noresults');\n      parragraph.appendChild(infoMsg);\n      this.resultsBox.appendChild(parragraph);\n    } else if (this.allCandidates.length > 0) {\n      // Clears previous search\n      this.resultsBox.innerHTML = '';\n      // remove animation class and return to normal font size after loading\n      this.resultsBox.classList.remove('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '1em';\n      const compiledResult = M.template.compileSync(results, {\n        vars: {\n          places: this.allCandidates,\n        },\n      });\n\n      const elementList = compiledResult.querySelectorAll('li');\n      elementList.forEach((listElement) => {\n        listElement.addEventListener('click', () => {\n          this.goToLocation(listElement);\n        });\n      });\n      if (firstResult === true && elementList.length > 0) {\n        elementList.item(0).click();\n      }\n\n      this.resultsBox.appendChild(compiledResult);\n    }\n  }\n\n  /**\n   * This function removes last search layer and adds new layer with current result (from geocoder)\n   * features to map, zooms in result, edits popup information and shows a message saying\n   *  if it's a perfect result or an approximation.\n   * @public\n   * @function\n   * @param {Object} geoJsonData - clicked result object\n   * @api\n   */\n  drawGeocoderResultProv(geoJsonData) {\n    this.map.removeLayers(this.clickedElementLayer);\n    M.proxy(false);\n    M.remote.get(this.urlParse).then((res) => {\n      const urlSinJSON = res.text.substring(9, res.text.length - 1);\n\n      let geoJsonData2 = geoJsonData;\n\n      let datosGeometria;\n      let datosCoordenadas;\n      if (urlSinJSON.includes('MULTIPOLYGON (((')) {\n        if (geoJsonData2.includes('\"type\":\"MultiPolygon\"')) {\n          datosGeometria = urlSinJSON.split('(((');\n          datosCoordenadas = datosGeometria[1].split('), (');\n\n\n          if (geoJsonData2.includes(']]]')) {\n            geoJsonData2 = geoJsonData2.replace(']]]', ']]]]');\n          }\n\n          for (let i = 0; i < datosCoordenadas.length; i += 1) {\n            const hol = datosCoordenadas[i].substring(0, 9).replace('(', '');\n\n            if (geoJsonData.includes('[[['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace('[[['.concat(hol), '[[[['.concat(hol));\n            } else if (geoJsonData.includes(']],[['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace(']],[['.concat(hol), ']]],[[['.concat(hol));\n            } else if (geoJsonData.includes('],['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace('],['.concat(hol), ']],[['.concat(hol));\n            }\n          }\n        }\n      } else if (urlSinJSON.includes('POLYGON ((')) {\n        if (geoJsonData2.includes('\"type\":\"Polygon\"')) {\n          datosGeometria = urlSinJSON.split('((');\n          datosCoordenadas = datosGeometria[1].split('), (');\n\n\n          if (geoJsonData2.includes(']]')) {\n            geoJsonData2 = geoJsonData2.replace(']]', ']]]');\n          }\n\n          geoJsonData2 = geoJsonData2.replace('Polygon', 'MultiPolygon');\n\n          for (let i = 0; i < datosCoordenadas.length; i += 1) {\n            const numFirstValue = datosCoordenadas[i].split(' ');\n            const val = datosCoordenadas[i].substring(0, numFirstValue[0].length).replace('(', '');\n\n            if (geoJsonData.includes('[[['.concat(val))) {\n              geoJsonData2 = geoJsonData2.replace('[[['.concat(val), '[[[['.concat(val));\n            } else if (geoJsonData.includes('],['.concat(val))) {\n              geoJsonData2 = geoJsonData2.replace('],['.concat(val), ']],[['.concat(val));\n            }\n          }\n        } else if (geoJsonData2.includes('\"type\":\"MultiPolygon\"')) {\n          geoJsonData2 = geoJsonData2.replace(']]],[[', ']],[[');\n          geoJsonData2 = geoJsonData2.replace('\"type\":\"MultiPolygon\"', '\"type\":\"Polygon\"');\n        }\n      }\n\n      if (geoJsonData2.includes('MultiMultiPolygon')) {\n        geoJsonData2 = geoJsonData2.replace('MultiMultiPolygon', 'MultiPolygon');\n      }\n      const featureJSON = JSON.parse(geoJsonData2);\n\n      // featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n      // Center coordinates\n      this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n      // New layer with geometry\n      this.clickedElementLayer = new M.layer.GeoJSON({\n        name: getValue('searchresult'),\n        source: {\n          type: 'FeatureCollection',\n          features: [featureJSON],\n        },\n      });\n      this.clickedElementLayer.displayInLayerSwitcher = false;\n\n      if (featureJSON.geometry.type === 'Point') {\n        this.clickedElementLayer.setStyle(this.point);\n      }\n\n      if (featureJSON.geometry.type.indexOf('Polygon') > -1) {\n        this.clickedElementLayer.setStyle(new M.style.Polygon({\n          fill: {\n            color: '#3399CC',\n            opacity: 0,\n          },\n          stroke: {\n            color: '#3399CC',\n            width: 2,\n          },\n          radius: 5,\n        }));\n      }\n\n      // Change zIndex value\n      this.clickedElementLayer.setZIndex(9999999999999999999);\n\n      // Stops showing polygon geometry\n      if (!this.resultVisibility_) {\n        this.clickedElementLayer.setStyle(this.simple);\n      }\n      this.map.addLayers(this.clickedElementLayer);\n      this.zoomInLocation('g', featureJSON.geometry.type, this.zoom);\n      // show popup for streets\n      if (featureJSON.properties.type === 'callejero' ||\n        featureJSON.properties.type === 'portal') {\n        const fullAddress = this.createFullAddress(featureJSON.properties);\n\n        const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n        const perfectResult = featureJSON.properties.state;\n        this.showSearchPopUp(fullAddress, coordinates, perfectResult);\n      }\n    });\n\n    M.proxy(true);\n  }\n\n  drawGeocoderResult(geoJsonData) {\n    this.map.removeLayers(this.clickedElementLayer);\n    const featureJSON = JSON.parse(geoJsonData);\n    featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n    // Center coordinates\n    this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n    // New layer with geometry\n    this.clickedElementLayer = new M.layer.GeoJSON({\n      name: getValue('searchresult'),\n      source: {\n        type: 'FeatureCollection',\n        features: [featureJSON],\n      },\n    });\n    this.clickedElementLayer.displayInLayerSwitcher = false;\n    if (featureJSON.geometry.type === 'Point') {\n      this.clickedElementLayer.setStyle(this.point);\n    }\n\n    // Change zIndex value\n    this.clickedElementLayer.setZIndex(9999999999999999999);\n\n    // Stops showing polygon geometry\n    if (!this.resultVisibility_) {\n      this.clickedElementLayer.setStyle(this.simple);\n    } else if (featureJSON.geometry.type.indexOf('Polygon') > -1) {\n      this.clickedElementLayer.setStyle(new M.style.Polygon({\n        fill: {\n          color: '#3399CC',\n          opacity: 0,\n        },\n        stroke: {\n          color: '#3399CC',\n          width: 2,\n        },\n        radius: 5,\n      }));\n    }\n\n    this.map.addLayers(this.clickedElementLayer);\n    this.zoomInLocation('g', featureJSON.geometry.type, this.zoom);\n    // show popup for streets\n    if (featureJSON.properties.type === 'callejero' ||\n      featureJSON.properties.type === 'portal') {\n      const fullAddress = this.createFullAddress(featureJSON.properties);\n      const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n      const perfectResult = featureJSON.properties.state;\n      this.showSearchPopUp(fullAddress, coordinates, perfectResult);\n    } else if (this.popup !== undefined) {\n      this.map.removePopup(this.popup);\n    }\n  }\n\n\n  /**\n   * This function takes data from an entity and returns the complete address\n   * @param {string} jsonResult - json string with entity data\n   */\n  createFullAddress(jsonResult) {\n    const via = (jsonResult.tip_via === null ||\n      jsonResult.tip_via === undefined) ? '' : jsonResult.tip_via;\n    const address = (jsonResult.address === null ||\n      jsonResult.address === undefined) ? '' : jsonResult.address;\n    const portal = (jsonResult.portalNumber === null ||\n      jsonResult.portalNumber === undefined ||\n      jsonResult.portalNumber === 0) ? '' : jsonResult.portalNumber;\n    const muni = (jsonResult.muni === null ||\n      jsonResult.muni === undefined) ? '' : jsonResult.muni;\n    return `${via} ${address} ${portal}, ${muni.toUpperCase()}`;\n  }\n  /**\n   * This function removes last search layer and adds new layer\n   * with current result (from nomenclator) features to map and zooms in result.\n   * @public\n   * @function\n   * @param {string} locationId - id of the location object\n   * @api\n   */\n  drawNomenclatorResult(locationId, zoomIn = true) {\n    this.requestStreet = '';\n    this.requestPlace = M.utils.addParameters(this.urlDispatcher, {\n      request: 'OpenQuerySource',\n      query: `<ogc:Filter><ogc:FeatureId fid=\"${locationId}\"/></ogc:Filter>`,\n      sourcename: `${this.urlPrefix}communicationsPoolServlet/sourceAccessWFS-INSPIRE-NGBE.rdf`,\n      outputformat: 'application/json',\n    });\n    this.locationID = locationId;\n    M.proxy(true);\n    M.remote.get(this.requestPlace).then((res) => {\n      const latLngString = JSON.parse(res.text).results[0].location;\n      const resultTitle = JSON.parse(res.text).results[0].title;\n      const latLngArray = latLngString.split(' ');\n      const latitude = parseFloat(latLngArray[0]);\n      const longitude = parseFloat(latLngArray[1]);\n      this.map.removeLayers(this.clickedElementLayer);\n      const newGeojson = {\n        name: getValue('searchresult'),\n        source: {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                longitude, latitude,\n              ],\n            },\n            properties: {\n              name: resultTitle,\n            },\n          }],\n        },\n      };\n      this.clickedElementLayer = new M.layer.GeoJSON(newGeojson);\n      this.clickedElementLayer.displayInLayerSwitcher = false;\n      this.clickedElementLayer.setStyle(this.point);\n\n      // Change zIndex value\n      this.clickedElementLayer.setZIndex(9999999999999999999);\n      // Stops showing polygon geometry\n      if (!this.resultVisibility_) {\n        this.clickedElementLayer.setStyle(this.simple);\n      }\n      this.map.addLayers(this.clickedElementLayer);\n      if (zoomIn === true) {\n        this.zoomInLocation('n', 'Point', this.zoom);\n      }\n    });\n  }\n  /**\n   * This function gets user input, searches for coincidences and adds each one to the given array.\n   * @public\n   * @function\n   * @param {string} inputValue search text written by user\n   * @param { Array < Object > } resultsArray search result candidates from IGN services\n   * @api\n   */\n  getCandidatesData(inputValue, resultsArray) {\n    const newInputVal = window.encodeURIComponent(inputValue);\n    return new Promise((resolve) => {\n      if (this.servicesToSearch !== 'n') {\n        let params = `q=${newInputVal}&limit=${this.maxResults + 5}&no_process=${this.noProcess}`;\n        params += `&countrycode=${this.countryCode}&autocancel=true`;\n        const urlToGet = `${this.urlCandidates}?${params}`;\n        M.proxy(false);\n        M.remote.get(urlToGet).then((res) => {\n          const returnData = JSON.parse(res.text.substring(9, res.text.length - 1));\n          for (let i = 0; i < returnData.length; i += 1) {\n            resultsArray.push(returnData[i]);\n          }\n          resolve();\n        });\n\n        M.proxy(true);\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This function adds search coincidences on Nomenclator to array\n   * @public\n   * @function\n   * @param {string} inputValue location searched by user\n   * @param {Array <Object>} resultsArray search results\n   * @api\n   */\n  getNomenclatorData(inputValue, resultsArray) {\n    const newInputVal = window.encodeURIComponent(inputValue);\n    return new Promise((resolve) => {\n      if (this.servicesToSearch !== 'g') {\n        const params = `maxresults=${this.maxResults - 5}&name_equals=${newInputVal}`;\n        const urlToGet = `${this.urlAssistant}?${params}`;\n        M.proxy(true);\n        M.remote.get(urlToGet).then((res) => {\n          const temporalData = (res.text !== '' && res.text !== null) ? JSON.parse(res.text) : { results: [] };\n          const returnData = temporalData.results;\n          for (let i = 0; i < returnData.length; i += 1) {\n            // avoid nameplaces not included in this.nomenclatorSearchType\n            if (this.nomenclatorSearchType.indexOf(returnData[i].type) >= 0) {\n              resultsArray.push(returnData[i]);\n            }\n          }\n          // move 'Núcleos de población' to start\n          for (let i = 0; i < resultsArray.length; i += 1) {\n            if (resultsArray[i].type === 'Núcleos de población') {\n              const thisElement = resultsArray.splice(i, 1);\n              resultsArray.splice(0, 0, thisElement);\n            }\n          }\n\n          resultsArray.forEach((elem) => {\n            // eslint-disable-next-line no-param-reassign\n            elem.cps = true;\n          });\n\n          resolve();\n        });\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This function gets address of selected item and returns geojson data (with coordinates)\n   * Only for Geocoder service\n   * @public\n   * @function\n   * @param {string} listElement element from drop-down list(\"li\")\n   * @param {Array <Object> } elementsData search results\n   * @api\n   */\n  getFindData(listElement, elementsData) {\n    return new Promise((resolve) => {\n      let id;\n      let type;\n      let portal;\n      let via;\n      let address;\n      elementsData.forEach((element) => {\n        if (listElement.getAttribute('id') === element.id) {\n          id = `&id=${element.id}`;\n          type = `&type=${element.type}`;\n          portal = (element.portalNumber !== 0 && element.portalNumber !== undefined) ?\n            `&portal=${element.portalNumber}` : '';\n          via = element.tip_via !== '' ? `&tip_via=${element.tip_via}` : '';\n        }\n      });\n      address = listElement.innerHTML;\n      if (listElement.innerHTML.includes('(')) {\n        const parenthesisIndex = listElement.innerHTML.indexOf('(');\n        address = listElement.innerHTML.substring(0, parenthesisIndex);\n      }\n      const params = `${type}${via}${id}${portal}&outputformat=geojson`;\n      // const params = `${type}${via}${id}${portal}`;\n\n      const urlToGet = `${this.urlFind}?q=${address}${params}`;\n\n      this.urlParse = urlToGet.replace('&outputformat=geojson', '');\n\n      this.requestStreet = urlToGet;\n      this.locationID = '';\n      M.proxy(false);\n      M.remote.get(urlToGet).then((res) => {\n        const geoJsonData = res.text.substring(9, res.text.length - 1);\n        resolve(geoJsonData);\n      });\n\n      M.proxy(true);\n    });\n  }\n  /**\n   * This function zooms in clicked location and draws geometry\n   * @public\n   * @function\n   * @param {Object} listElement clicked result information\n   * @api\n   */\n  goToLocation(listElement) {\n    const text = listElement.querySelector('#info').innerHTML;\n    this.html.querySelector('#m-ignsearch-search-input').value = text;\n    this.currentElement = listElement; // <li>\n    const selectedObject = this.findClickedItem(listElement, this.allCandidates); // json\n    this.createGeometryStyles();\n    // if item comes from geocoder\n    if (Object.prototype.hasOwnProperty.call(selectedObject, 'address')) {\n      this.getFindData(listElement, this.allCandidates).then((geoJsonData) => {\n        if (geoJsonData.includes('\"tip_via\":null') && (geoJsonData.includes('\"type\":\"Municipio\"') || geoJsonData.includes('\"type\":\"municipio\"') || geoJsonData.includes('\"type\":\"Provincia\"') || geoJsonData.includes('\"type\":\"provincia\"') || geoJsonData.includes('\"type\":\"comunidad autonoma\"'))) {\n          this.drawGeocoderResultProv(geoJsonData);\n          this.map.removePopup();\n        } else {\n          this.drawGeocoderResult(geoJsonData);\n        }\n      });\n    } else { // if item comes from nomenclator\n      this.drawNomenclatorResult(selectedObject.id);\n    }\n    this.resultsBox.innerHTML = '';\n  }\n  /**\n   * This function zooms in MaxExtent of clicked element\n   * @public\n   * @function\n   * @param {string} service { 'g' | 'n' }\n   * @param { string } type of geometry in which we zoom\n   * @api\n   */\n  zoomInLocation(service, type, zoom) {\n    this.resultsList = document.getElementById('m-ignsearch-results-list');\n    if (this.clickedElementLayer instanceof M.layer.Vector) {\n      this.clickedElementLayer.calculateMaxExtent().then((extent) => {\n        this.map.setBbox(extent);\n        if (service === 'n' || type === 'Point') {\n          this.setScale(17061); // last scale requested by our client: 2000\n        }\n        // En el caso de que se haga una búsqueda de Provincias o CCAA, se dejaría el zoom que\n        // calcula el servicio para no afectar en la visualización de la geometría.\n        if (type === 'Point') {\n          this.map.setZoom(zoom);\n        }\n        this.fire('ignsearch:entityFound', [extent]);\n      });\n    }\n  }\n  /**\n   * This function returns clicked location object\n   * @public\n   * @function\n   * @param { string } listElement <li>Location</li>\n   * @param { Array < Object > } allCandidates possible locations\n   * @api\n   */\n  findClickedItem(listElement, allCandidates) {\n    return allCandidates.filter(element => element.id === listElement.getAttribute('id'))[0];\n  }\n  /**\n   * This function fixes path to get to this feature's coordinates\n   * @public\n   * @function\n   * @param {feature} feature with geometry information for the given location\n   * @api\n   */\n  fixCoordinatesPath(feature) {\n    let coordinates;\n    if (feature.geometry.type === 'Point') {\n      coordinates = feature.geometry.coordinates[0][0];\n    } else if (feature.geometry.type === 'MultiPolygon') {\n      coordinates = [feature.geometry.coordinates];\n    } else if (feature.geometry.type === 'LineString') {\n      coordinates = feature.geometry.coordinates[0];\n    } else {\n      coordinates = feature.geometry.coordinates;\n    }\n    return coordinates;\n  }\n\n  /* Given a set of coordinates (lat, long),\n    searches for the corresponding place\n  */\n  searchCoordinates(setOfCoordinates) {\n    // const latLongSeparationRegExp = /(\\s+|,|,\\s)/;\n    // setOfCoordinates.replace(latLongSeparationRegExp, ' ');\n    // const latFromSet = setOfCoordinates.split(' ')[0];\n    // const longFromSet = setOfCoordinates.split(' ')[1];\n    return new Promise((resolve) => {\n      // TODO\n      // if lat,long separation character/s are not a space, it turns into a space\n      // const latLongSeparationRegExp = /(\\s+|,|,\\s)/;\n      // setOfCoordinates.replace(latLongSeparationRegExp, ' ');\n      // const latFromSet = setOfCoordinates.split(' ')[0];\n      // const longFromSet = setOfCoordinates.split(' ')[1];\n      // // geocoder service\n      // const urlToGet = `${this.urlReverse}?lat=${latFromSet}&lon=${longFromSet}`;\n      // M.remote.get(urlToGet).then((res) => {\n      //   const parsedResponse = JSON.parse(res.text);\n      //   const coordinatesSetAddress = parsedResponse.address;\n      //   resolve();\n      // });\n      resolve();\n    });\n  }\n  /**\n   * This function clears drawn geometry from map.\n   * @public\n   * @function\n   * @api\n   */\n  clearResults() {\n    this.searchInput.value = '';\n    this.resultsBox.innerHTML = '';\n    this.searchValue = '';\n  }\n  /**\n   * This function clears input content, results box, popup and shown geometry.\n   * @public\n   * @function\n   * @api\n   */\n  clearResultsAndGeometry() {\n    this.clearResults();\n    if (this.clickedElementLayer !== undefined) {\n      this.clickedElementLayer.setStyle(this.simple);\n      this.map.removeLayers(this.clickedElementLayer);\n    }\n    this.map.removePopup(this.popup, [\n      this.lng,\n      this.lat,\n    ]);\n  }\n  /**\n   * This function sets geometry visibility on map (visible|invisible).\n   * @public\n   * @function\n   * @param {boolean} flag\n   * @api\n   */\n  setResultVisibility(flag) {\n    this.resultVisibility_ = flag;\n  }\n  /**\n   * This function changes input placeholder based on services choice\n   * @public\n   * @function\n   * @api\n   */\n  changePlaceholder() {\n    if (this.servicesToSearch === 'g') {\n      this.searchInput.placeholder = getValue('direccion');\n    } else if (this.servicesToSearch === 'n') {\n      this.searchInput.placeholder = 'Topónimo';\n    }\n  }\n  /**\n   * This function creates some geometry styles.\n   * @public\n   * @function\n   * @api\n   */\n  createGeometryStyles() {\n    // Shows pin on drawn point\n\n    if (this.pointStyle === 'pinBlanco') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          form: 'none',\n          class: 'g-cartografia-pin',\n          radius: 12,\n          rotation: 0,\n          rotate: false,\n          offset: [0, -12],\n          color: '#f00',\n          border: '5px solid green',\n          opacity: 1,\n        },\n      });\n    } else if (this.pointStyle === 'pinRojo') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          src: M.utils.concatUrlPaths([M.config.THEME_URL, '/img/pinign.svg']),\n        },\n      });\n    } else if (this.pointStyle === 'pinMorado') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          src: M.utils.concatUrlPaths([M.config.THEME_URL, '/img/m-pin-24.svg']),\n        },\n      });\n    }\n\n    // Style for hiding geometry\n    this.simple = new M.style.Polygon({\n      fill: {\n        color: 'black',\n        opacity: 0,\n      },\n    });\n  }\n  /**\n    * This\n    function inserts a popUp with information about the searched location\n      (and whether it 's an exact result or an approximation)\n    * @param { string } fullAddress location address(street, portal, etc.)\n    * @param { Array } coordinates latitude[0] and longitude[1] coordinates\n    * @param { boolean } exactResult indicating\n    if the given result is a perfect match\n    */\n  showSearchPopUp(fullAddress, coordinates, exactResult, e = {}) {\n    const destinyProj = this.map.getProjection().code;\n    const destinySource = 'EPSG:4326';\n    const newCoordinates = this.getImpl()\n      .reproject([coordinates[1], coordinates[0]], destinySource, destinyProj);\n\n    let exitState;\n    if (exactResult !== 1) {\n      exitState = getValue('aprox');\n    } else {\n      exitState = getValue('exact');\n    }\n    this.showPopUp(fullAddress, newCoordinates, coordinates, exitState, false, e);\n  }\n  /**\n   * This function inserts a popup on the map with information about its location.\n   * @param { string } fullAddress location address(street, portal, etc.)\n   * @param { Array } mapCoordinates latitude[0] and longitude[1] coordinates on map projection\n   * @param { Array } featureCoordinates latitude[0] and longitude[1] coordinates from feature\n   * @param { string } exitState indicating if the given result is a perfect match\n   */\n  showPopUp(fullAddress, mapcoords, featureCoordinates, exitState = null, addTab = true, e = {}) {\n    const featureTabOpts = { content: '', icon: 'icon-locate' };\n    if (exitState !== null) {\n      featureTabOpts.content += `<div><b>${exitState}</b></div>`;\n    }\n    featureTabOpts.content += `<div>${fullAddress}</div>\n                <div class='ignsearch-popup'>Lat: ${featureCoordinates[0].toFixed(6)}</div>\n                <div class='ignsearch-popup'> Lon: ${featureCoordinates[1].toFixed(6)} </div>`;\n    if (this.map.getPopup() instanceof M.Popup && addTab === true) {\n      this.popup = this.map.getPopup();\n      this.popup.addTab(featureTabOpts);\n    } else {\n      const myPopUp = new M.Popup({ panMapIfOutOfView: !e.fake });\n      myPopUp.addTab(featureTabOpts);\n\n      this.map.addPopup(myPopUp, [\n        mapcoords[0],\n        mapcoords[1],\n      ]);\n      this.popup = myPopUp;\n    }\n    this.lat = mapcoords[1];\n    this.lng = mapcoords[0];\n  }\n  /**\n   * This function sets given scale to map\n   * @public\n   * @function\n   * @param { number } scale to which the map will zoom in\n   *   (5000 if we want 1: 5000)\n   * @api\n   */\n  setScale(scale) {\n    this.getImpl().setScale(scale);\n  }\n}\n","import { allowInsecurePrototypeAccess } from '@handlebars/allow-prototype-access';\n\nconst registerHelpers = () => {\n  const insecureHandlebars = allowInsecurePrototypeAccess(Handlebars);\n  insecureHandlebars.registerHelper('toUpperCase', (str) => {\n    return str.toUpperCase();\n  });\n  insecureHandlebars.registerHelper('ifCond', (v1, operator, v2, options) => {\n    switch (operator) {\n      case '===':\n        return (v1 === v2) ? options.fn(this) : options.inverse(this);\n      case '!==':\n        return (v1 !== v2) ? options.fn(this) : options.inverse(this);\n      case '<':\n        return (v1 < v2) ? options.fn(this) : options.inverse(this);\n      case '<=':\n        return (v1 <= v2) ? options.fn(this) : options.inverse(this);\n      case '>':\n        return (v1 > v2) ? options.fn(this) : options.inverse(this);\n      case '>=':\n        return (v1 >= v2) ? options.fn(this) : options.inverse(this);\n      case '&&':\n        return (v1 && v2) ? options.fn(this) : options.inverse(this);\n      case '||':\n        return (v1 || v2) ? options.fn(this) : options.inverse(this);\n      default:\n        return options.inverse(this);\n    }\n  });\n  insecureHandlebars.registerHelper('printType', (type, address, id, municipality, cps) => {\n    let line = `<li id=${id}><span id=\"info\">${address}</span>`;\n    // add following lines if asked to show entity type again\n    // (but not if type's portal, callejero or Codpost)\n    if (type === 'Municipio' || type === 'provincia' || type === 'comunidad autonoma' || cps === true) {\n      line += ` (${type})`;\n    }\n    if (municipality !== undefined) {\n      line += ` en ${municipality}`;\n    }\n    return line;\n  });\n};\nexport default registerHelpers;\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","const geographicNameType = [\n  'Estado',\n  // 'Comunidad autónoma',\n  // 'Ciudad con estatuto de autonomía',\n  // 'Provincia',\n  // 'Municipio',\n  // 'EATIM',\n  'Isla administrativa',\n  'Comarca administrativa',\n  'Jurisdicción',\n  // 'Capital de Estado',\n  // 'Capital de comunidad autónoma y ciudad con estatuto de autonomía',\n  // 'Capital de provincia',\n  // 'Capital de municipio',\n  // 'Capital de EATIM',\n  // 'Entidad colectiva',\n  // 'Entidad menor de población',\n  'Distrito municipal',\n  // 'Barrio',\n  // 'Entidad singular',\n  'Construcción/instalación abierta',\n  'Edificación',\n  'Vértice Geodésico',\n  // 'Hitos de demarcación territorial',\n  // 'Hitos en vías de comunicación',\n  'Alineación montañosa',\n  'Montaña',\n  'Paso de montaña',\n  'Llanura',\n  'Depresión',\n  'Vertientes',\n  'Comarca geográfica',\n  'Paraje',\n  'Elemento puntual del paisaje',\n  'Saliente costero',\n  'Playa',\n  'Isla',\n  'Otro relieve costero',\n  // 'Parque Nacional y Natural',\n  'Espacio protegido restante',\n  // 'Aeropuerto',\n  // 'Aeródromo',\n  // 'Pista de aviación y helipuerto',\n  // 'Puerto de Estado',\n  'Instalación portuaria',\n  // 'Carretera',\n  'Camino y vía pecuaria',\n  // 'Vía urbana',\n  // 'Ferrocarril',\n  'Curso natural de agua',\n  'Masa de agua',\n  'Curso artificial de agua',\n  'Embalse',\n  'Hidrónimo puntual',\n  'Glaciares',\n  'Mar',\n  'Entrante costero y estrecho marítimo',\n  'Relieve submarino',\n];\nexport default geographicNameType;\n","/**\n * @module M/plugin/IGNSearch\n */\nimport '../assets/css/ignsearch';\nimport '../assets/css/fonts';\nimport IGNSearchControl from './ignsearchcontrol';\nimport geographicNameType from './constants';\nimport { getValue } from './i18n/language';\n\nexport default class IGNSearch extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * This variable indicates which services should be searched\n     * (geocoder, nomenclator or both)\n     * @private\n     * @type {string} - 'g' | 'n' | 'gn'\n     */\n    this.servicesToSearch = options.servicesToSearch || 'gn';\n\n    /**\n     * This variable sets the maximun results returned by a service\n     * (if both services are searched the maximum results will be twice this number)\n     * @private\n     * @type {number}\n     */\n    this.maxResults = options.maxResults || 10;\n\n    /**\n     * This variables indicates which entities shouldn't be searched\n     * @private\n     * @type {string} - 'municipio' | 'poblacion' | 'toponimo' | 'municipio,poblacion' | etc\n     */\n    this.noProcess = options.noProcess || 'poblacion';\n\n    /**\n     * This variable indicates the country code.\n     * @private\n     * @type {string} - 'es'\n     */\n    this.countryCode = options.countryCode || 'es';\n\n    /**\n     * This variable indicates Geocoder Candidates service url\n     * @private\n     * @type {string}\n     */\n    this.urlCandidates = options.urlCandidates || 'https://www.cartociudad.es/geocoder/api/geocoder/candidatesJsonp';\n\n    /**\n     * This variable indicates Geocoder Find service url\n     * @private\n     * @type {string}\n     */\n    this.urlFind = options.urlFind || 'https://www.cartociudad.es/geocoder/api/geocoder/findJsonp';\n\n    /**\n     * This variable indicates Geocoder Reverse service url\n     * @private\n     * @type {string}\n     */\n    this.urlReverse = options.urlReverse || 'https://www.cartociudad.es/geocoder/api/geocoder/reverseGeocode';\n\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.urlPrefix = options.urlPrefix || 'http://www.idee.es/';\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.urlAssistant = options.urlAssistant || 'https://www.idee.es/communicationsPoolServlet/SearchAssistant';\n\n    /**\n     * This variable indicates Nomenclator Dispatcher service url\n     * @private\n     * @type {string}\n     */\n    this.urlDispatcher = options.urlDispatcher || 'https://www.idee.es/communicationsPoolServlet/Dispatcher';\n\n    /**\n     * This variable indicates which entity types should be searched on Nomenclator service.\n     * @private\n     * @type {Array<string>}\n     */\n    this.nomenclatorSearchType = M.config.IGNSEARCH_TYPES_CONFIGURATION || geographicNameType;\n\n    /**\n     * This variable indicates whether result geometry should be drawn on map.\n     * @private\n     * @type {boolean}\n     */\n    this.resultVisibility = options.resultVisibility || true;\n\n    /**\n     * This variable indicates whether the plugin can be collapsed.\n     * @private\n     * @type {boolean}\n     */\n    this.isCollapsed = options.isCollapsed || false;\n\n    /**\n     * This variable indicates whether the plugin can be collapsible.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible = options.collapsible || false;\n\n\n    /**\n     * This variable indicates plugin's position on window\n     * @private\n     * @type {string} { 'TL' | 'TR' | 'BL' | 'BR' } (corners)\n     */\n    this.position = options.position || 'TL';\n\n    /**\n     * @private\n     * @type {string} - tooltip on hover on plugin button\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.reverse_ = options.reverse || false;\n\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.locationID_ = (options.locationID && options.locationID.replace(/\\^/g, '&')) || '';\n\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.requestStreet_ = (options.requestStreet && options.requestStreet.replace(/\\^/g, '&')) || '';\n\n    let geocoderCoords = options.geocoderCoords;\n    if (M.utils.isString(geocoderCoords)) {\n      geocoderCoords = geocoderCoords.split(',');\n      geocoderCoords = [Number.parseFloat(geocoderCoords[0]),\n        Number.parseFloat(geocoderCoords[1]),\n      ];\n    }\n    /**\n     * Geocoder reverse coordinates\n     *\n     * @private\n     * @type {number}\n     */\n    this.geocoderCoords_ = geocoderCoords || [];\n\n    /**\n     * Zoom to do\n     *\n     * @private\n     * @type {string / number}\n     */\n    this.zoom_ = 16;\n    if (options.zoom !== undefined) {\n      this.zoom_ = parseInt(options.zoom, 10);\n    }\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.searchPosition = options.searchPosition || 'nomenclator,geocoder';\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.pointStyle = options.pointStyle || 'pinBlanco';\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api\n   */\n  addTo(map) {\n    this.controls_.push(new IGNSearchControl(\n      this.servicesToSearch,\n      this.maxResults,\n      this.noProcess,\n      this.countryCode,\n      this.urlCandidates,\n      this.urlFind,\n      this.urlReverse,\n      this.urlPrefix,\n      this.urlAssistant,\n      this.urlDispatcher,\n      this.resultVisibility,\n      this.reverse_,\n      this.locationID_,\n      this.requestStreet_,\n      this.geocoderCoords_,\n      this.zoom_,\n      this.searchPosition,\n      this.pointStyle,\n      this.nomenclatorSearchType,\n    ));\n    this.controls_[0].on('ignsearch:entityFound', (extent) => {\n      this.fire('ignsearch:entityFound', [extent]);\n    });\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelIGNSearch', {\n      collapsible: this.collapsible,\n      position: M.ui.position[this.position],\n      collapsed: this.isCollapsed,\n      className: 'ign-search-panel',\n      collapsedButtonClass: 'icon-ignsearch',\n      tooltip: this.tooltip_,\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function sets geometry visibility on map (visible|invisible).\n   * @public\n   * @function\n   * @param {boolean} flag\n   * @api\n   */\n  setResultVisibility(flag) {\n    this.controls_[0].setResultVisibility(flag);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'ignsearch';\n  }\n\n  /**\n   * Reverse parameter\n   *\n   * @getter\n   * @function\n   */\n  get reverse() {\n    return this.reverse_;\n  }\n\n  /**\n   * Reverse geocoder coordinates\n   *\n   * @getter\n   * @function\n   */\n  get geocoderCoords() {\n    return this.controls_[0].geocoderCoords;\n  }\n\n  /**\n   * Text to search\n   * @getter\n   * @function\n   */\n  get requestStreet() {\n    return this.controls_[0].requestStreet;\n  }\n\n  /**\n   * Text to search\n   * @getter\n   * @function\n   */\n  get locationID() {\n    return this.controls_[0].locationID;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.servicesToSearch}*${this.maxResults}*${this.noProcess}*${this.countryCode}*${this.resultVisibility}*${this.isCollapsed}*${this.collapsible}*${this.position}*${this.reverse}*${this.requestStreet.replace(/&/g, '^')}*${this.locationID}*${this.geocoderCoords}*${this.zoom}*${this.searchPosition}*${this.pointStyle}`;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    this.map_ = null;\n    this.control_ = null;\n    this.controls_ = null;\n    this.panel_ = null;\n  }\n}\n","import M$plugin$IGNSearch from './/facade/js/ignsearch';\nimport M$control$IGNSearchControl from './/facade/js/ignsearchcontrol';\nimport M$impl$control$IGNSearchControl from './/impl/ol/js/ignsearchcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.IGNSearch = M$plugin$IGNSearch;\nwindow.M.control.IGNSearchControl = M$control$IGNSearchControl;\nwindow.M.impl.control.IGNSearchControl = M$impl$control$IGNSearchControl;\n"],"sourceRoot":""}