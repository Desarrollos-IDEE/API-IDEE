{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/printer.html","webpack:///./src/impl/ol/js/printercontrol.js","webpack:///./src/facade/js/printercontrol.js","webpack:///./src/facade/js/printer.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PrinterControl","facadeMap_","M","impl","Control","map","element","this","ol","control","target","getMapImpl","addControl","layer","Promise","success","fail","type","WMC","KML","encodeKML","WMS","encodeWMS","WFS","encodeWFS","GeoJSON","WMTS","encodeWMTS","then","encodedLayer","MBtiles","OSM","encodeOSM","Mapbox","encodeMapbox","utils","isNullOrEmpty","Vector","olLayer","getImpl","getOL3Layer","features","getSource","getFeatures","layerName","layerOpacity","getOpacity","geoJSONFormat","format","bbox","getBbox","x","min","y","max","nameFeature","filter","resolution","getView","getResolution","encodedFeatures","indexText","indexGeom","index","style","stylesNames","stylesNamesText","forEach","feature","geometry","getGeometry","styleId","replace","styleFn","getStyle","featureStyle","e","parseType","img","getImage","imgSize","getImageSize","getType","toLowerCase","styleText","stroke","getStroke","styleGeom","id","externalGraphic","getSrc","graphicHeight","graphicWidth","graphicOpacity","strokeWidth","getWidth","text","getText","conflictResolution","fontColor","getFill","rgbToHex","isArray","getColor","toString","fontSize","fontFamily","fontWeight","label","labelAlign","getTextAlign","labelXOffset","getOffsetX","labelYOffset","getOffsetY","labelOutlineColor","labelOutlineWidth","slice","intersectsExtent","styleStr","JSON","stringify","styleTextStr","styleName","styleNameText","isUndefined","symbolizers","flag","push","undefined","a","geoJSONFeature","writeFeatureObject","properties","_gx_style","parse","concat","version","styleProperty","geoJson","opacity","layerUrl","url","params","getParams","paramsLayers","LAYERS","paramsFormat","FORMAT","paramsStyles","STYLES","baseURL","layers","join","split","styles","_updateNoCache","noCacheName","getNoCacheName","noChacheUrl","getNoCacheUrl","getNoChacheName","noCacheUrl","getNoChacheUrl","customParams","keys","indexOf","projection","getProjection","layerStyle","fStyle","Function","Array","length","image","textPath","fill","fillColor","rgbaToHex","fillOpacity","getOpacityFromRgba","strokeColor","strokeOpacity","pointRadius","getRadius","tAlign","tBLine","getTextBaseline","align","LEFT","RIGHT","CENTER","baseline","BOTTOM","MIDDLE","TOP","font","getFont","px","substr","space","lastIndexOf","trim","fontStyle","code","getLayers","some","layerParam","featureProjection","dataProjection","layerSource","layerReqEncoding","getRequestEncoding","matrixSet","getMatrixSet","getCapabilities","capabilities","matrixIdsObj","Contents","TileMatrixSet","tileMatrixSet","Identifier","imageFormat","matrices","TileMatrix","tileMatrix","identifier","matrixSize","MatrixHeight","MatrixWidth","scaleDenominator","ScaleDenominator","tileSize","TileWidth","TileHeight","topLeftCorner","TopLeftCorner","requestEncoding","layerImpl","tileGrid","getTileGrid","tiled","layerExtent","getExtent","getTileSize","singleTile","maxExtent","resolutions","getResolutions","extension","concatUrlPaths","config","MAPBOX_URL","MAPBOX_TOKEN_NAME","MAPBOX_TOKEN_VALUE","MAPBOX_EXTENSION","path_format","origin","coordinates","originProj","proj","destProj","transform","box","currProj","transformExtent","removeControl","PrinterControlImpl","NAME","exception","encodeLayer","serverUrl_","printTemplateUrl_","printStatusUrl_","inputTitle_","areaDescription_","layout_","format_","dpi_","forceScale_","params_","layout","outputFilename","pages","clientLogo","creditos","parameters","imageSpain","imageCoordinates","queueContainer_","capabilitiesPromise_","options_","dpi","forceScale","legend","layoutOptions_","dpisOptions_","callback","remote","response","statusJson","status","error","dialog","lastChild","remove","setTimeout","getStatus","capabilitiesParam","ilen","attribute","layouts","endsWith","item","dpis","attributes","clientInfo","dpiSuggestions","parseInt","html","template","compileSync","printerHTML","jsonp","vars","addEvents","element_","querySelector","selectLayout","addEventListener","layoutValue","setLayout","selectDpi","dpiValue","setDpi","selectFormat","setFormat","checkboxForceScale","setForceScale","checked","printClick_","event","preventDefault","changeEvent","document","createEvent","initEvent","clickEvent","dispatchEvent","apply","children","child","removeEventListener","downloadPrint","innerHTML","enableTouchScroll","evt","getPrintData","printData","printUrl","outputFormat","queueEl","createQueueElement","appendChild","classList","add","LOADING_CLASS","addParameters","proxy","post","responseParam","downloadUrl","ref","statusURL","downloadURL","err","setAttribute","DOWNLOAD_ATTR_NAME","capabilitiesUrl","coordinate","dms","aux","splittedCoord","map_","dmsBbox","units","newMin","reproject","newMax","convertDecimalBoxToDMS","converterDecimalToDMS","title","description","convertBboxToDMS","center","getCenter","attributionContainer","attribution","date","Date","currentDate","getDate","getMonth","getFullYear","extend","attributionInfo","refsrs","turnProjIntoLegend","printDate","useAdjustBounds","xCoordTopLeft","yCoordTopLeft","xCoordTopRight","yCoordTopRight","xCoordBotRight","yCoordBotRight","xCoordBotLeft","yCoordBotLeft","encodeLayers","encodedLayers","assign","scale","getScale","transformExt","isVisible","inRange","numLayersToProc","vectorLayers","wmsLayers","otherBaseLayers","reverse","queueElem","createElement","NO_TITLE","getAttribute","window","open","projectionLegend","obj","equals","TEMPLATE","Printer","controls_","control_","panel_","position_","position","collapsed_","collapsed","collapsible_","collapsible","Plugin","ui","Panel","className","collapsedButtonClass","tooltip","on","ADDED_TO_MAP","addControls","addPanels","fire","removeControls","plugin","M$plugin$Printer","M$control$PrinterControl","M$impl$control$PrinterControl"],"mappings":"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","file":"printer.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = \"<div class=\\\"m-control m-container m-printer m-printer-container\\\">\\n    <!-- TITLE -->\\n    <div class=\\\"title\\\">Impresión del mapa</div>\\n    <!-- FORM -->\\n    <div class=\\\"form\\\">\\n        <!-- title -->\\n        <div class=\\\"title\\\">\\n            <input type=\\\"text\\\" placeholder=\\\"Título\\\">\\n        </div>\\n        <!-- description -->\\n        <div class=\\\"description\\\">\\n            <textarea placeholder=\\\"Descripción\\\"></textarea>\\n        </div>\\n        <!-- layout -->\\n        <div class=\\\"layout\\\">\\n            <label>Plantilla </label>\\n            <select>\\n                {{#each layouts}}\\n                    <option value=\\\"{{name}}\\\" {{#if default}} selected{{/if}}>{{name}}</option>\\n                {{/each}}\\n            </select>\\n        </div>\\n        <!-- DPI -->\\n        <div class=\\\"dpi\\\">\\n            <label>DPI </label>\\n            <select>\\n                {{#each dpis}}\\n                    <option value=\\\"{{value}}\\\" {{#if default}} selected{{/if}}>{{value}}</option>\\n                {{/each}}\\n            </select>\\n        </div>\\n        <!-- format -->\\n        <div class=\\\"format\\\">\\n            <label>Formato </label>\\n            <select>\\n                {{#each format}}\\n                    <option value=\\\"{{name}}\\\" {{#if default}} selected{{/if}}>{{name}}</option>\\n                {{/each}}\\n            </select>\\n        </div>\\n        <!-- force scale -->\\n        <div class=\\\"forcescale\\\">\\n            <label>Forzar escala </label>\\n            <input type=\\\"checkbox\\\" {{#if forceScale}} checked{{/if}}>\\n        </div>\\n    </div>\\n    <!-- buttons -->\\n    <div class=\\\"button\\\">\\n        <button class=\\\"print\\\"><i class=\\\"icon-impresora\\\"></i> Imprimir</button>\\n        <button class=\\\"remove\\\"><i class=\\\"icon-papelera\\\"></i> Borrar</button>\\n    </div>\\n    <!-- queue -->\\n    <div class=\\\"queue\\\">\\n        <div class=\\\"title\\\">Descargar</div>\\n        <ul class=\\\"queue-container\\\"></ul>\\n    </div>\\n    <!-- minimize button -->\\n    <div class=\\\"minimize\\\" title=\\\"Minimizar el control de impresión\\\"></div>\\n</div>\\n\";","/**\n * @module M/impl/control/PrinterControl\n */\nexport default class PrinterControl extends M.impl.Control {\n  /**\n   * @classdesc\n   * Main constructor of the measure conrol.\n   *\n   * @constructor\n   * @extends {ol.control.Control}\n   * @api stable\n   */\n  constructor() {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  addTo(map, element) {\n    this.facadeMap_ = map;\n\n    ol.control.Control.call(this, {\n      element,\n      target: null,\n    });\n    map.getMapImpl().addControl(this);\n  }\n\n  /**\n   * This function encodes a layer.\n   *\n   * @public\n   * @function\n   * @param {Layer} layer to encode\n   * @api stable\n   */\n  encodeLayer(layer) {\n    return (new Promise((success, fail) => {\n      if (layer.type === M.layer.type.WMC) {\n        // none\n      } else if (layer.type === M.layer.type.KML) {\n        success(this.encodeKML(layer));\n      } else if (layer.type === M.layer.type.WMS) {\n        success(this.encodeWMS(layer));\n      } else if (layer.type === M.layer.type.WFS) {\n        success(this.encodeWFS(layer));\n      } else if (layer.type === M.layer.type.GeoJSON) {\n        success(this.encodeWFS(layer));\n      } else if (layer.type === M.layer.type.WMTS) {\n        this.encodeWMTS(layer).then((encodedLayer) => {\n          success(encodedLayer);\n        });\n      } else if (layer.type === M.layer.type.MBtiles) {\n        // none\n      } else if (layer.type === M.layer.type.OSM) {\n        success(this.encodeOSM(layer));\n      } else if (layer.type === M.layer.type.Mapbox) {\n        success(this.encodeMapbox(layer));\n      } else if (M.utils.isNullOrEmpty(layer.type) && layer instanceof M.layer.Vector) {\n        success(this.encodeWFS(layer));\n      } else {\n        success(this.encodeWFS(layer));\n      }\n    }));\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeKML(layer) {\n    let encodedLayer = null;\n\n    const olLayer = layer.getImpl().getOL3Layer();\n    const features = olLayer.getSource().getFeatures();\n    const layerName = layer.name;\n    const layerOpacity = olLayer.getOpacity();\n    const geoJSONFormat = new ol.format.GeoJSON();\n    let bbox = this.facadeMap_.getBbox();\n    bbox = [bbox.x.min, bbox.y.min, bbox.x.max, bbox.y.max];\n    const resolution = this.facadeMap_.getMapImpl().getView().getResolution();\n\n    const encodedFeatures = [];\n    let indexText = 1;\n    let indexGeom = 1;\n    let index = 1;\n    let style = '';\n    const stylesNames = {};\n    const stylesNamesText = {};\n    let nameFeature;\n    let filter;\n\n    features.forEach((feature) => {\n      const geometry = feature.getGeometry();\n      let styleId = feature.get('styleUrl');\n      if (!M.utils.isNullOrEmpty(styleId)) {\n        styleId = styleId.replace('#', '');\n      }\n      const styleFn = feature.getStyle();\n      if (!M.utils.isNullOrEmpty(styleFn)) {\n        let featureStyle;\n        try {\n          featureStyle = styleFn(feature, resolution)[0];\n        } catch (e) {\n          featureStyle = styleFn.call(feature, resolution)[0];\n        }\n        if (!M.utils.isNullOrEmpty(featureStyle)) {\n          const img = featureStyle.getImage();\n          let imgSize = img.getImageSize();\n          if (M.utils.isNullOrEmpty(imgSize)) {\n            imgSize = [64, 64];\n          }\n\n          let parseType;\n          if (feature.getGeometry().getType().toLowerCase() === 'multipolygon') {\n            parseType = 'polygon';\n          } else if (feature.getGeometry().getType().toLowerCase() === 'multipoint') {\n            parseType = 'point';\n          } else {\n            parseType = feature.getGeometry().getType().toLowerCase();\n          }\n\n          const stroke = featureStyle.getStroke();\n          let styleText;\n          const styleGeom = {\n            id: styleId,\n            externalGraphic: img.getSrc(),\n            graphicHeight: imgSize[0],\n            graphicWidth: imgSize[1],\n            graphicOpacity: img.getOpacity(),\n            strokeWidth: stroke.getWidth(),\n            type: parseType,\n          };\n          const text = (featureStyle.getText && featureStyle.getText());\n          if (!M.utils.isNullOrEmpty(text)) {\n            styleText = {\n              conflictResolution: 'false',\n              fontColor: M.utils.isNullOrEmpty(text.getFill()) ? '' : M.utils.rgbToHex(M.utils.isArray(text.getFill().getColor()) ?\n                `rgba(${text.getFill().getColor().toString()})` :\n                text.getFill().getColor()),\n              fontSize: '11px',\n              fontFamily: 'Helvetica, sans-serif',\n              fontWeight: 'bold',\n              label: M.utils.isNullOrEmpty(text.getText()) ? feature.get('name') : text.getText(),\n              labelAlign: text.getTextAlign(),\n              labelXOffset: text.getOffsetX(),\n              labelYOffset: text.getOffsetY(),\n              labelOutlineColor: M.utils.isNullOrEmpty(text.getStroke()) ? '' : M.utils.rgbToHex(M.utils.isArray(text.getStroke().getColor()) ?\n                `rgba(${text.getStroke().getColor().toString()})` :\n                text.getStroke().getColor()),\n              labelOutlineWidth: M.utils.isNullOrEmpty(text.getStroke()) ? '' : text.getStroke().getWidth(),\n              type: 'text',\n            };\n            styleText.fontColor = styleText.fontColor.slice(0, 7);\n            styleText.labelOutlineColor = styleText.labelOutlineColor.slice(0, 7);\n          }\n\n          nameFeature = `draw${index}`;\n\n          if ((!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox)) ||\n            !M.utils.isNullOrEmpty(text)) {\n            const styleStr = JSON.stringify(styleGeom);\n            const styleTextStr = JSON.stringify(styleText);\n            let styleName = stylesNames[styleStr];\n            let styleNameText = stylesNamesText[styleTextStr];\n\n            if (M.utils.isUndefined(styleName) || M.utils.isUndefined(styleNameText)) {\n              const symbolizers = [];\n              let flag = 0;\n              if (!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox) &&\n                M.utils.isUndefined(styleName)) {\n                styleName = indexGeom;\n                stylesNames[styleStr] = styleName;\n                flag = 1;\n                symbolizers.push(styleStr);\n                indexGeom += 1;\n                index += 1;\n              }\n              if (!M.utils.isNullOrEmpty(text) && M.utils.isUndefined(styleNameText)) {\n                styleNameText = indexText;\n                stylesNamesText[styleTextStr] = styleNameText;\n                symbolizers.push(styleTextStr);\n                indexText += 1;\n                if (flag === 0) {\n                  index += 1;\n                  symbolizers.push(styleStr);\n                }\n              }\n\n              if (styleName === undefined) {\n                styleName = 0;\n              }\n              if (styleNameText === undefined) {\n                styleNameText = 0;\n              }\n\n              filter = `\"[_gx_style ='${styleName + styleNameText}']\"`;\n\n              if (!M.utils.isNullOrEmpty(symbolizers)) {\n                const a = `${filter}: {\"symbolizers\": [${symbolizers}]}`;\n                if (style !== '') {\n                  style += `,${a}`;\n                } else {\n                  style += `{${a}, \"version\": \"2\"`;\n                }\n              }\n            }\n\n            const geoJSONFeature = geoJSONFormat.writeFeatureObject(feature);\n            geoJSONFeature.properties = {\n              name: nameFeature,\n              _gx_style: styleName + styleNameText,\n            };\n            encodedFeatures.push(geoJSONFeature);\n          }\n        }\n      }\n    }, this);\n\n    if (style !== '') {\n      style = JSON.parse(style.concat('}'));\n    } else {\n      style = {\n        '*': {\n          symbolizers: [],\n        },\n        version: '2',\n      };\n    }\n\n    encodedLayer = {\n      type: 'Vector',\n      style,\n      styleProperty: '_gx_style',\n      geoJson: {\n        type: 'FeatureCollection',\n        features: encodedFeatures,\n      },\n      name: layerName,\n      opacity: layerOpacity,\n    };\n\n    return encodedLayer;\n  }\n\n  /**\n   * This function encodes a WMS layer.\n   *\n   * @public\n   * @function\n   * @param {M.layer.WMS} layer to encode\n   * @api stable\n   */\n  encodeWMS(layer) {\n    let encodedLayer = null;\n    const olLayer = layer.getImpl().getOL3Layer();\n    const layerUrl = layer.url;\n    const layerOpacity = olLayer.getOpacity();\n    // const tiled = layer.getImpl().tiled;\n    const params = olLayer.getSource().getParams();\n    const paramsLayers = [params.LAYERS];\n    const paramsFormat = params.FORMAT;\n    const paramsStyles = [params.STYLES];\n    encodedLayer = {\n      baseURL: layerUrl,\n      opacity: layerOpacity,\n      // singleTile: !tiled,\n      type: 'WMS',\n      layers: paramsLayers.join(',').split(','),\n      format: paramsFormat || 'image/jpeg',\n      styles: paramsStyles.join(',').split(','),\n    };\n\n    /** ***********************************\n     MAPEA DE CAPAS TILEADA.\n    ************************************ */\n    // eslint-disable-next-line no-underscore-dangle\n    if (layer._updateNoCache) {\n      // eslint-disable-next-line no-underscore-dangle\n      layer._updateNoCache();\n      const noCacheName = layer.getNoCacheName();\n      const noChacheUrl = layer.getNoCacheUrl();\n      if (!M.utils.isNullOrEmpty(noCacheName) && !M.utils.isNullOrEmpty(noChacheUrl)) {\n        encodedLayer.layers = [noCacheName];\n        encodedLayer.baseURL = noChacheUrl;\n      }\n    } else {\n      const noCacheName = layer.getNoChacheName();\n      const noCacheUrl = layer.getNoChacheUrl();\n      if (!M.utils.isNullOrEmpty(noCacheName) && !M.utils.isNullOrEmpty(noCacheUrl)) {\n        encodedLayer.layers = [noCacheName];\n        encodedLayer.baseURL = noCacheUrl;\n      }\n    }\n\n    /** *********************************  */\n\n    // defaults\n    encodedLayer.customParams = {\n      // service: 'WMS',\n      // version: '1.1.1',\n      // request: 'GetMap',\n      // styles: '',\n      // format: 'image/jpeg',\n    };\n\n    const propKeys = Object.keys(params);\n    propKeys.forEach((key) => {\n      if ('iswmc,transparent'.indexOf(key.toLowerCase()) !== -1) {\n        encodedLayer.customParams[key] = params[key];\n      }\n    });\n    return encodedLayer;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeWFS(layer) {\n    let encodedLayer = null;\n    const continuePrint = true;\n    if (continuePrint) {\n      const projection = this.facadeMap_.getProjection();\n      const olLayer = layer.getImpl().getOL3Layer();\n      const features = olLayer.getSource().getFeatures();\n      const layerName = layer.name;\n      const layerOpacity = olLayer.getOpacity();\n      const layerStyle = olLayer.getStyle();\n      const geoJSONFormat = new ol.format.GeoJSON();\n      let bbox = this.facadeMap_.getBbox();\n      bbox = [bbox.x.min, bbox.y.min, bbox.x.max, bbox.y.max];\n      const resolution = this.facadeMap_.getMapImpl().getView().getResolution();\n\n      const encodedFeatures = [];\n      let nameFeature;\n      let filter;\n      let index = 1;\n      let indexText = 1;\n      let indexGeom = 1;\n      let style = '';\n      const stylesNames = {};\n      const stylesNamesText = {};\n      features.forEach((feature) => {\n        const geometry = feature.getGeometry();\n        let featureStyle;\n        const fStyle = feature.getStyle();\n\n        if (!M.utils.isNullOrEmpty(fStyle)) {\n          featureStyle = fStyle;\n        } else if (!M.utils.isNullOrEmpty(layerStyle)) {\n          featureStyle = layerStyle;\n        }\n\n        if (featureStyle instanceof Function) {\n          featureStyle = featureStyle.call(featureStyle, feature, resolution);\n        }\n\n        if (featureStyle instanceof Array) {\n          // SRC style has priority\n          if (featureStyle.length > 1) {\n            featureStyle = (!M.utils.isNullOrEmpty(featureStyle[1].getImage()) &&\n                featureStyle[1].getImage().getSrc) ?\n              featureStyle[1] : featureStyle[0];\n          } else {\n            featureStyle = featureStyle[0];\n          }\n        }\n\n        if (!M.utils.isNullOrEmpty(featureStyle)) {\n          const image = featureStyle.getImage();\n          const imgSize = M.utils\n            .isNullOrEmpty(image) ? [0, 0] : (image.getImageSize() || [24, 24]);\n          let text = featureStyle.getText();\n          if (M.utils.isNullOrEmpty(text) && !M.utils.isNullOrEmpty(featureStyle.textPath)) {\n            text = featureStyle.textPath;\n          }\n\n          let parseType;\n          if (feature.getGeometry().getType().toLowerCase() === 'multipolygon') {\n            parseType = 'polygon';\n          } else if (feature.getGeometry().getType().toLowerCase() === 'multipoint') {\n            parseType = 'point';\n          } else if (feature.getGeometry().getType().toLowerCase() === 'multilinestring') {\n            parseType = 'line';\n          } else {\n            parseType = feature.getGeometry().getType().toLowerCase();\n          }\n\n          const stroke = M.utils.isNullOrEmpty(image) ?\n            featureStyle.getStroke() : (image.getStroke && image.getStroke());\n          const fill = M.utils.isNullOrEmpty(image) ?\n            featureStyle.getFill() : (image.getFill && image.getFill());\n\n\n          let styleText;\n          const styleGeom = {\n            type: parseType,\n            fillColor: M.utils.isNullOrEmpty(fill) ? '#000000' : M.utils.rgbaToHex(fill.getColor()).slice(0, 7),\n            fillOpacity: M.utils.isNullOrEmpty(fill) ?\n              0 : M.utils.getOpacityFromRgba(fill.getColor()),\n            strokeColor: M.utils.isNullOrEmpty(stroke) ? '#000000' : M.utils.rgbaToHex(stroke.getColor()),\n            strokeOpacity: M.utils.isNullOrEmpty(stroke) ?\n              0 : M.utils.getOpacityFromRgba(stroke.getColor()),\n            strokeWidth: M.utils.isNullOrEmpty(stroke) ? 0 : (stroke.getWidth && stroke.getWidth()),\n            pointRadius: M.utils.isNullOrEmpty(image) ? '' : (image.getRadius && image.getRadius()),\n            externalGraphic: M.utils.isNullOrEmpty(image) ? '' : (image.getSrc && image.getSrc()),\n            graphicHeight: imgSize[0],\n            graphicWidth: imgSize[1],\n          };\n          if (!M.utils.isNullOrEmpty(text)) {\n            let tAlign = text.getTextAlign();\n            let tBLine = text.getTextBaseline();\n            let align = '';\n            if (!M.utils.isNullOrEmpty(tAlign)) {\n              if (tAlign === M.style.align.LEFT) {\n                tAlign = 'l';\n              } else if (tAlign === M.style.align.RIGHT) {\n                tAlign = 'r';\n              } else if (tAlign === M.style.align.CENTER) {\n                tAlign = 'c';\n              } else {\n                tAlign = '';\n              }\n            }\n            if (!M.utils.isNullOrEmpty(tBLine)) {\n              if (tBLine === M.style.baseline.BOTTOM) {\n                tBLine = 'b';\n              } else if (tBLine === M.style.baseline.MIDDLE) {\n                tBLine = 'm';\n              } else if (tBLine === M.style.baseline.TOP) {\n                tBLine = 't';\n              } else {\n                tBLine = '';\n              }\n            }\n            if (!M.utils.isNullOrEmpty(tAlign) && !M.utils.isNullOrEmpty(tBLine)) {\n              align = tAlign.concat(tBLine);\n            }\n            const font = text.getFont();\n            const fontWeight = !M.utils.isNullOrEmpty(font) && font.indexOf('bold') > -1 ? 'bold' : 'normal';\n            let fontSize = '11px';\n            if (!M.utils.isNullOrEmpty(font)) {\n              const px = font.substr(0, font.indexOf('px'));\n              if (!M.utils.isNullOrEmpty(px)) {\n                const space = px.lastIndexOf(' ');\n                if (space > -1) {\n                  fontSize = px.substr(space, px.length).trim().concat('px');\n                } else {\n                  fontSize = px.concat('px');\n                }\n              }\n            }\n            styleText = {\n              type: 'text',\n              label: text.getText(),\n              fontColor: M.utils.isNullOrEmpty(text.getFill()) ? '#000000' : M.utils.rgbToHex(text.getFill().getColor()),\n              fontSize,\n              fontFamily: 'Helvetica, sans-serif',\n              fontStyle: 'normal',\n              fontWeight,\n              conflictResolution: 'false',\n              labelXOffset: text.getOffsetX(),\n              labelYOffset: text.getOffsetY(),\n              fillColor: styleGeom.fillColor || '#FF0000',\n              fillOpacity: styleGeom.fillOpacity || 1,\n              labelOutlineColor: M.utils.isNullOrEmpty(text.getStroke()) ? '' : M.utils.rgbToHex(text.getStroke().getColor() || '#FF0000'),\n              labelOutlineWidth: M.utils.isNullOrEmpty(text.getStroke()) ? '' : text.getStroke().getWidth(),\n              labelAlign: align,\n            };\n          }\n\n          nameFeature = `draw${index}`;\n\n          if ((!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox)) ||\n            !M.utils.isNullOrEmpty(text)) {\n            const styleStr = JSON.stringify(styleGeom);\n            const styleTextStr = JSON.stringify(styleText);\n            let styleName = stylesNames[styleStr];\n            let styleNameText = stylesNamesText[styleTextStr];\n\n            if (M.utils.isUndefined(styleName) || M.utils.isUndefined(styleNameText)) {\n              const symbolizers = [];\n              let flag = 0;\n              if (!M.utils.isNullOrEmpty(geometry) && geometry.intersectsExtent(bbox) &&\n                M.utils.isUndefined(styleName)) {\n                styleName = indexGeom;\n                stylesNames[styleStr] = styleName;\n                flag = 1;\n                symbolizers.push(styleStr);\n                indexGeom += 1;\n                index += 1;\n              }\n              if (!M.utils.isNullOrEmpty(text) && M.utils.isUndefined(styleNameText)) {\n                styleNameText = indexText;\n                stylesNamesText[styleTextStr] = styleNameText;\n                symbolizers.push(styleTextStr);\n                indexText += 1;\n                if (flag === 0) {\n                  index += 1;\n                  symbolizers.push(styleStr);\n                }\n              }\n              if (styleName === undefined) {\n                styleName = 0;\n              }\n              if (styleNameText === undefined) {\n                styleNameText = 0;\n              }\n              filter = `\"[_gx_style ='${styleName + styleNameText}']\"`;\n              if (!M.utils.isNullOrEmpty(symbolizers)) {\n                const a = `${filter}: {\"symbolizers\": [${symbolizers}]}`;\n                if (style !== '') {\n                  style += `,${a}`;\n                } else {\n                  style += `{${a},\"version\":\"2\"`;\n                }\n              }\n            }\n\n            let geoJSONFeature;\n            if (projection.code !== 'EPSG:3857' && this.facadeMap_.getLayers().some(layerParam => (layerParam.type === M.layer.type.OSM || layerParam.type === M.layer.type.Mapbox))) {\n              geoJSONFeature = geoJSONFormat.writeFeatureObject(feature, {\n                featureProjection: projection.code,\n                dataProjection: 'EPSG:3857',\n              });\n            } else {\n              geoJSONFeature = geoJSONFormat.writeFeatureObject(feature);\n            }\n            geoJSONFeature.properties = {\n              _gx_style: styleName + styleNameText,\n              name: nameFeature,\n            };\n            encodedFeatures.push(geoJSONFeature);\n          }\n        }\n      }, this);\n\n      if (style !== '') {\n        style = JSON.parse(style.concat('}'));\n      } else {\n        style = {\n          '*': {\n            symbolizers: [],\n          },\n          version: '2',\n        };\n      }\n\n      encodedLayer = {\n        type: 'Vector',\n        style,\n        styleProperty: '_gx_style',\n        geoJson: {\n          type: 'FeatureCollection',\n          features: encodedFeatures,\n        },\n        name: layerName,\n        opacity: layerOpacity,\n      };\n    }\n    return encodedLayer;\n  }\n\n  /**\n   * This function\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeWMTS(layer) {\n    // const zoom = this.facadeMap_.getZoom();\n    // var units = this.facadeMap_.getProjection().units;\n    const layerImpl = layer.getImpl();\n    const olLayer = layerImpl.getOL3Layer();\n    const layerSource = olLayer.getSource();\n    // const tileGrid = layerSource.getTileGrid();\n\n    const layerUrl = layer.url;\n    const layerName = layer.name;\n    const layerOpacity = olLayer.getOpacity();\n    const layerReqEncoding = layerSource.getRequestEncoding();\n    const matrixSet = layerSource.getMatrixSet();\n    // const tiled = layerImpl.tiled;\n    // const layerExtent = olLayer.getExtent();\n    // const params = {};\n    // const tileSize = tileGrid.getTileSize(zoom);\n    // const resolutions = tileGrid.getResolutions();\n\n    // var style = layerSource.getStyle();\n    // var layerVersion = layer.version;\n    // var tileOrigin = tileGrid.getOrigin(zoom);\n    // var matrixIds = tileGrid.getMatrixIds();\n    // old parameters\n\n    /**\n     * @see http: //www.mapfish.org/doc/print/protocol.html#layers-params\n     */\n    return layer.getImpl().getCapabilities().then((capabilities) => {\n      const matrixIdsObj = capabilities.Contents.TileMatrixSet.filter((tileMatrixSet) => {\n        return (tileMatrixSet.Identifier === matrixSet);\n      })[0];\n      return {\n        baseURL: layerUrl,\n        // customParams: {},\n        // dimensionParams: {},\n        // dimensions: [],\n        imageFormat: 'image/png',\n        layer: layerName,\n        matrices: matrixIdsObj.TileMatrix.map((tileMatrix, i) => {\n          return {\n            identifier: tileMatrix.Identifier,\n            matrixSize: [tileMatrix.MatrixHeight, tileMatrix.MatrixWidth],\n            // resolution: resolutions[resolutions.length - (i + 1)],\n            scaleDenominator: tileMatrix.ScaleDenominator,\n            tileSize: [tileMatrix.TileWidth, tileMatrix.TileHeight],\n            topLeftCorner: tileMatrix.TopLeftCorner,\n          };\n        }),\n        matrixSet,\n        // maxExtent: layerExtent,\n        opacity: layerOpacity,\n        // params,\n        requestEncoding: layerReqEncoding,\n        // resolutions,\n        // rotation: 0,\n        // singleTile: !tiled,\n        // 'style': style,\n        style: 'default',\n        type: 'WMTS',\n        // tileSize,\n        // 'tileOrigin': tileOrigin,\n        // 'zoomOffset': 0,\n        // 'version': layerVersion,\n        version: '1.0.0',\n      };\n    });\n  }\n\n  /**\n   * This function\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeOSM(layer) {\n    let encodedLayer = null;\n\n    const layerImpl = layer.getImpl();\n    const olLayer = layerImpl.getOL3Layer();\n    const layerSource = olLayer.getSource();\n    const tileGrid = layerSource.getTileGrid();\n\n    const layerUrl = layer.url || 'http://tile.openstreetmap.org/';\n    const layerName = layer.name;\n    const layerOpacity = olLayer.getOpacity();\n    const tiled = layerImpl.tiled;\n    const layerExtent = tileGrid.getExtent();\n    const tileSize = tileGrid.getTileSize();\n    const resolutions = tileGrid.getResolutions();\n    encodedLayer = {\n      baseURL: layerUrl,\n      opacity: layerOpacity,\n      singleTile: !tiled,\n      layer: layerName,\n      maxExtent: layerExtent,\n      tileSize: [tileSize, tileSize],\n      resolutions,\n      type: 'OSM',\n      extension: 'png',\n    };\n    return encodedLayer;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   * @api stable\n   */\n  encodeMapbox(layer) {\n    let encodedLayer = null;\n\n    const layerImpl = layer.getImpl();\n    const olLayer = layerImpl.getOL3Layer();\n    const layerSource = olLayer.getSource();\n    const tileGrid = layerSource.getTileGrid();\n\n    const layerUrl = M.utils.concatUrlPaths([M.config.MAPBOX_URL, layer.name]);\n    const layerOpacity = olLayer.getOpacity();\n    const layerExtent = tileGrid.getExtent();\n\n    const tileSize = tileGrid.getTileSize();\n    const resolutions = tileGrid.getResolutions();\n\n\n    const customParams = {};\n    customParams[M.config.MAPBOX_TOKEN_NAME] = M.config.MAPBOX_TOKEN_VALUE;\n    encodedLayer = {\n      opacity: layerOpacity,\n      baseURL: layerUrl,\n      customParams,\n      maxExtent: layerExtent,\n      tileSize: [tileSize, tileSize],\n      resolutions,\n      extension: M.config.MAPBOX_EXTENSION,\n      type: 'xyz',\n      path_format: '/${z}/${x}/${y}.png',\n    };\n\n    return encodedLayer;\n  }\n\n  /**\n   * This function reprojects map on selected SRS.\n   *\n   * @function\n   * @param {string} origin - EPSG:25830\n   * @param {array<number>} coordinates pair\n   * @api\n   */\n  reproject(origin, coordinates) {\n    const originProj = ol.proj.get(origin);\n    const destProj = ol.proj.get('EPSG:4326');\n    const coordinatesTransform = ol.proj.transform(coordinates, originProj, destProj);\n    return coordinatesTransform;\n  }\n\n  transformExt(box, code, currProj) {\n    return ol.proj.transformExtent(box, code, currProj);\n  }\n\n  /**\n   * This function destroys this control, clearing the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n}\n","/**\n * @module M/control/PrinterControl\n */\n\nimport PrinterControlImpl from '../../impl/ol/js/printercontrol';\nimport printerHTML from '../../templates/printer';\n\nexport default class PrinterControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class.\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor() {\n    const impl = new PrinterControlImpl();\n\n    super(impl, PrinterControl.NAME);\n\n    if (M.utils.isUndefined(PrinterControlImpl)) {\n      M.exception('La implementación usada no puede crear controles Printer');\n    }\n\n    if (M.utils.isUndefined(PrinterControlImpl.prototype.encodeLayer)) {\n      M.exception('La implementación usada no posee el método encodeLayer');\n    }\n\n    /**\n     * Mapfish server url\n     * @private\n     * @type {String}\n     */\n    this.serverUrl_ = 'https://geoprint.desarrollo.guadaltel.es';\n\n    /**\n     * Mapfish template url\n     * @private\n     * @type {String}\n     */\n    this.printTemplateUrl_ = 'https://geoprint.desarrollo.guadaltel.es/print/CNIG';\n\n\n    /**\n     * Url for getting priting status\n     * @private\n     * @type {String}\n     */\n    this.printStatusUrl_ = 'https://geoprint.desarrollo.guadaltel.es/print/status';\n\n    /**\n     * Map title\n     * @private\n     * @type {HTMLElement}\n     */\n    this.inputTitle_ = null;\n\n    /**\n     * Map description\n     * @private\n     * @type {HTMLElement}\n     */\n    this.areaDescription_ = null;\n\n    /**\n     * Layout\n     * @private\n     * @type {HTMLElement}\n     */\n    this.layout_ = null;\n\n    /**\n     * Map format to print\n     * @private\n     * @type {HTMLElement}\n     */\n    this.format_ = null;\n\n    /**\n     * Map dpi to print\n     * @private\n     * @type {HTMLElement}\n     */\n    this.dpi_ = null;\n\n    /**\n     * Force scale boolean\n     * @private\n     * @type {HTMLElement}\n     */\n    this.forceScale_ = null;\n\n    /**\n     * Mapfish params\n     * @private\n     * @type {String}\n     */\n    this.params_ = {\n      layout: {\n        outputFilename: 'mapa_${yyyy-MM-dd_hhmmss}',\n      },\n      pages: {\n        clientLogo: '', // logo url\n        creditos: 'Impresión generada a través de Mapea',\n      },\n      parameters: {\n        imageSpain: 'file://E01_logo_IGN_CNIG.png',\n        imageCoordinates: 'file://E01_logo_IGN_CNIG.png',\n      },\n    };\n\n    /**\n     * Container of maps available for download\n     * @private\n     * @type {HTMLElement}\n     */\n    this.queueContainer_ = null;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {Promise}\n     */\n    this.capabilitiesPromise_ = null;\n\n    /**\n     * Mapfish options params\n     * @private\n     * @type {String}\n     */\n    this.options_ = {\n      dpi: 150,\n      forceScale: false,\n      format: 'pdf',\n      legend: 'false',\n      layout: 'A4 horizontal',\n    };\n\n    this.layoutOptions_ = [];\n    this.dpisOptions_ = [];\n  }\n\n  /**\n   * This function checks when map printing is finished.\n   * @param {String} url - Mapfish GET request url\n   * @param {Function} callback - function that removes loading icon class.\n   */\n  getStatus(url, callback) {\n    M.remote.get(url).then((response) => {\n      const statusJson = JSON.parse(response.text);\n      const { status } = statusJson;\n      if (status === 'finished') {\n        callback();\n      } else if (status === 'error' || status === 'cancelled') {\n        callback();\n        if (statusJson.error.toLowerCase().indexOf('network is unreachable') > -1 || statusJson.error.toLowerCase().indexOf('illegalargument') > -1) {\n          M.dialog.error('La petición de alguna tesela ha provocado un error en la impresión. <br/>Por favor, inténtelo de nuevo.');\n        } else {\n          M.dialog.error('Se ha producido un error en la impresión.');\n        }\n\n        this.queueContainer_.lastChild.remove();\n      } else {\n        setTimeout(() => this.getStatus(url, callback), 1000);\n      }\n    });\n  }\n\n  /**\n   * This function creates the view to the specified map.\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stabletrue\n   */\n  createView(map) {\n    const promise = new Promise((success, fail) => {\n      this.getCapabilities().then((capabilitiesParam) => {\n        const capabilities = capabilitiesParam;\n        let i = 0;\n        let ilen;\n\n        // default layout\n        for (i = 0, ilen = capabilities.layouts.length; i < ilen; i += 1) {\n          const layout = capabilities.layouts[i];\n          if (layout.name === this.options_.layout) {\n            layout.default = true;\n            break;\n          }\n        }\n\n        // show only template names withoug 'jpg' on their names\n        capabilities.layouts = capabilities.layouts.filter((l) => {\n          return !l.name.endsWith('jpg');\n        });\n\n        this.layoutOptions_ = [].concat(capabilities.layouts.map((item) => {\n          return item.name;\n        }));\n\n        capabilities.dpis = [];\n        let attribute;\n        // default dpi\n        // recommended DPI list attribute search\n        for (i = 0, ilen = capabilities.layouts[0].attributes.length; i < ilen; i += 1) {\n          if (capabilities.layouts[0].attributes[i].clientInfo !== null) {\n            attribute = capabilities.layouts[0].attributes[i];\n          }\n        }\n\n        for (i = 0, ilen = attribute.clientInfo.dpiSuggestions.length; i < ilen; i += 1) {\n          const dpi = attribute.clientInfo.dpiSuggestions[i];\n\n          if (parseInt(dpi, 10) === this.options_.dpi) {\n            dpi.default = true;\n            break;\n          }\n          const object = { value: dpi };\n          capabilities.dpis.push(object);\n        }\n\n        this.dpisOptions_ = [].concat(capabilities.dpis.map((item) => {\n          return item.value;\n        }));\n\n        // Fix to show only pdf, png & jpeg formats\n        capabilities.format = [{ name: 'pdf' }, { name: 'png' }, { name: 'jpg' }];\n\n        // forceScale\n        capabilities.forceScale = this.options_.forceScale;\n        const html = M.template.compileSync(printerHTML, { jsonp: true, vars: capabilities });\n        this.addEvents(html);\n        success(html);\n      });\n    });\n    return promise;\n  }\n\n  /**\n   * This function adds event listeners.\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  addEvents(html) {\n    this.element_ = html;\n\n    this.inputTitle_ = this.element_.querySelector('.form div.title > input');\n\n    this.areaDescription_ = this.element_.querySelector('.form div.description > textarea');\n\n    const selectLayout = this.element_.querySelector('.form div.layout > select');\n    selectLayout.addEventListener('change', (e) => {\n      const layoutValue = selectLayout.value;\n      this.setLayout({\n        value: layoutValue,\n        name: layoutValue,\n      });\n    });\n\n    const layoutValue = selectLayout.value;\n    this.setLayout({\n      value: layoutValue,\n      name: layoutValue,\n    });\n\n    const selectDpi = this.element_.querySelector('.form div.dpi > select');\n    selectDpi.addEventListener('change', (e) => {\n      const dpiValue = selectDpi.value;\n      this.setDpi({\n        value: dpiValue,\n        name: dpiValue,\n      });\n    });\n\n    const dpiValue = selectDpi.value;\n    this.setDpi({\n      value: dpiValue,\n      name: dpiValue,\n    });\n\n    const selectFormat = this.element_.querySelector('.form div.format > select');\n    selectFormat.addEventListener('change', (e) => {\n      this.setFormat(selectFormat.value);\n    });\n    this.setFormat(selectFormat.value);\n\n    const checkboxForceScale = this.element_.querySelector('.form div.forcescale > input');\n    checkboxForceScale.addEventListener('click', (e) => {\n      this.setForceScale(checkboxForceScale.checked);\n    });\n    this.setForceScale(checkboxForceScale.checked);\n\n    const printBtn = this.element_.querySelector('.button > button.print');\n    printBtn.addEventListener('click', this.printClick_.bind(this));\n\n    const cleanBtn = this.element_.querySelector('.button > button.remove');\n    cleanBtn.addEventListener('click', (event) => {\n      event.preventDefault();\n\n      // reset values\n      this.inputTitle_.value = '';\n      this.areaDescription_.value = '';\n      selectLayout.value = this.layoutOptions_[0];\n      selectDpi.value = this.dpisOptions_[0];\n      selectFormat.value = this.options_.format;\n      checkboxForceScale.checked = this.options_.forceScale;\n\n      // Create events and init\n      const changeEvent = document.createEvent('HTMLEvents');\n      changeEvent.initEvent('change');\n      const clickEvent = document.createEvent('HTMLEvents');\n      // Fire listeners\n      clickEvent.initEvent('click');\n      selectLayout.dispatchEvent(changeEvent);\n      selectDpi.dispatchEvent(changeEvent);\n      selectFormat.dispatchEvent(changeEvent);\n      checkboxForceScale.dispatchEvent(clickEvent);\n      // clean queue\n\n      Array.prototype.forEach.apply(this.queueContainer_.children, [(child) => {\n        child.removeEventListener('click', this.downloadPrint);\n      }, this]);\n\n      this.queueContainer_.innerHTML = '';\n    });\n\n    this.queueContainer_ = this.element_.querySelector('.queue > ul.queue-container');\n    M.utils.enableTouchScroll(this.queueContainer_);\n  }\n\n  /**\n   * Sets layout\n   *\n   * @private\n   * @function\n   */\n  setLayout(layout) {\n    this.layout_ = layout;\n  }\n\n  /**\n   * Sets format\n   *\n   * @private\n   * @function\n   */\n  setFormat(format) {\n    this.format_ = format;\n  }\n\n  /**\n   * Sets dpi\n   *\n   * @private\n   * @function\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * Sets force scale option\n   *\n   * @private\n   * @function\n   */\n  setForceScale(forceScale) {\n    this.forceScale_ = forceScale;\n  }\n\n  /**\n   * This function prints on click\n   *\n   * @private\n   * @function\n   */\n  printClick_(evt) {\n    evt.preventDefault();\n\n    this.getPrintData().then((printData) => {\n      let printUrl = M.utils.concatUrlPaths([this.printTemplateUrl_, `report.${printData.outputFormat}`]);\n\n      const queueEl = this.createQueueElement();\n      this.queueContainer_.appendChild(queueEl);\n      queueEl.classList.add(PrinterControl.LOADING_CLASS);\n      printUrl = M.utils.addParameters(printUrl, 'mapeaop=geoprint');\n      // FIXME: delete proxy deactivation and uncomment if/else when proxy is fixed on Mapea\n      M.proxy(false);\n      M.remote.post(printUrl, printData).then((responseParam) => {\n        let response = responseParam;\n        const responseStatusURL = JSON.parse(response.text);\n        const ref = responseStatusURL.ref;\n        const statusURL = M.utils.concatUrlPaths([this.printStatusUrl_, `${ref}.json`]);\n        this.getStatus(statusURL, () => queueEl.classList.remove(PrinterControl.LOADING_CLASS));\n\n        // if (response.error !== true) { // withoud proxy, response.error === true\n        let downloadUrl;\n        try {\n          response = JSON.parse(response.text);\n          downloadUrl = M.utils.concatUrlPaths([this.serverUrl_, response.downloadURL]);\n        } catch (err) {\n          M.exception(err);\n        }\n        queueEl.setAttribute(PrinterControl.DOWNLOAD_ATTR_NAME, downloadUrl);\n        queueEl.addEventListener('click', this.downloadPrint);\n        // } else {\n        //   M.dialog.error('Se ha producido un error en la impresión.');\n        // }\n      });\n      M.proxy(true);\n    });\n  }\n\n  /**\n   * Gets capabilities\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  getCapabilities() {\n    if (M.utils.isNullOrEmpty(this.capabilitiesPromise_)) {\n      this.capabilitiesPromise_ = new Promise((success, fail) => {\n        const capabilitiesUrl = M.utils.concatUrlPaths([this.printTemplateUrl_, 'capabilities.json']);\n        M.remote.get(capabilitiesUrl).then((response) => {\n          let capabilities = {};\n          try {\n            capabilities = JSON.parse(response.text);\n          } catch (err) {\n            M.exception(err);\n          }\n          success(capabilities);\n        });\n      });\n    }\n    return this.capabilitiesPromise_;\n  }\n\n  /**\n   * Converts decimal degrees coordinates to degrees, minutes, seconds\n   * @public\n   * @function\n   * @param {String} coordinate - single coordinate (one of a pair)\n   * @api\n   */\n  converterDecimalToDMS(coordinate) {\n    let dms;\n    let aux;\n    const coord = coordinate.toString();\n    const splittedCoord = coord.split('.');\n    // Degrees\n    dms = `${splittedCoord[0]}º `;\n    // Minutes\n    aux = `0.${splittedCoord[1]}`;\n    aux *= 60;\n    aux = aux.toString();\n    aux = aux.split('.');\n    dms = `${dms}${aux[0]}' `;\n    // Seconds\n    aux = `0.${aux[1]}`;\n    aux *= 60;\n    aux = aux.toString();\n    aux = aux.split('.');\n    dms = `${dms}${aux[0]}'' `;\n    return dms;\n  }\n\n  /**\n   * Converts original bbox coordinates to DMS coordinates.\n   * @public\n   * @function\n   * @api\n   * @param {Array<Object>} bbox - { x: {min, max}, y: {min, max} }\n   */\n  convertBboxToDMS(bbox) {\n    const proj = this.map_.getProjection();\n    let dmsBbox = bbox;\n\n    if (proj.units === 'm') {\n      const min = [bbox.x.min, bbox.y.min];\n      const max = [bbox.x.max, bbox.y.max];\n      const newMin = this.getImpl().reproject(proj.code, min);\n      const newMax = this.getImpl().reproject(proj.code, max);\n      dmsBbox = {\n        x: { min: newMin[0], max: newMax[0] },\n        y: { min: newMin[1], max: newMax[1] },\n      };\n    }\n\n    dmsBbox = this.convertDecimalBoxToDMS(dmsBbox);\n    return dmsBbox;\n  }\n\n  /**\n   * Converts decimal coordinates Bbox to DMS coordinates Bbox.\n   * @public\n   * @function\n   * @api\n   * @param { Array < Object > } bbox - { x: { min, max }, y: { min, max } }\n   */\n  convertDecimalBoxToDMS(bbox) {\n    return {\n      x: {\n        min: this.converterDecimalToDMS(bbox.x.min),\n        max: this.converterDecimalToDMS(bbox.x.max),\n      },\n      y: {\n        min: this.converterDecimalToDMS(bbox.y.min),\n        max: this.converterDecimalToDMS(bbox.y.max),\n      },\n    };\n  }\n\n  /**\n   * This function returns request JSON.\n   *\n   * @private\n   * @function\n   */\n  getPrintData() {\n    const title = this.inputTitle_.value;\n    const description = this.areaDescription_.value;\n    const projection = this.map_.getProjection().code;\n    const bbox = this.map_.getBbox();\n    const dmsBbox = this.convertBboxToDMS(bbox);\n    let layout = this.layout_.name; // \"A3 landscape\" (yaml template)\n    const dpi = this.dpi_.value;\n    const outputFormat = this.format_;\n    // const scale = this.map_.getScale().toLocaleString('en').replace(/,/g, '.');\n    const center = this.map_.getCenter();\n    const parameters = this.params_.parameters;\n    const attributionContainer = document.querySelector('#m-attributions-container>div>a');\n    const attribution = attributionContainer !== null ?\n      `Cartografía base: ${attributionContainer.innerHTML}` : '';\n\n    if (outputFormat === 'jpg') {\n      layout += ' jpg';\n    }\n\n    const date = new Date();\n    const currentDate = `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n\n    const printData = M.utils.extend({\n      layout,\n      outputFormat,\n      attributes: {\n        title,\n        description,\n        attributionInfo: attribution,\n        refsrs: this.turnProjIntoLegend(projection),\n        // numscale: `1:${scale}`,\n        printDate: currentDate,\n        map: {\n          dpi,\n          projection,\n          useAdjustBounds: true,\n        },\n        xCoordTopLeft: dmsBbox.y.max,\n        yCoordTopLeft: dmsBbox.x.min,\n        xCoordTopRight: dmsBbox.y.max,\n        yCoordTopRight: dmsBbox.x.max,\n        xCoordBotRight: dmsBbox.y.min,\n        yCoordBotRight: dmsBbox.x.max,\n        xCoordBotLeft: dmsBbox.y.min,\n        yCoordBotLeft: dmsBbox.x.min,\n      },\n    }, this.params_.layout);\n\n    return this.encodeLayers().then((encodedLayers) => {\n      printData.attributes.map.layers = encodedLayers;\n      printData.attributes = Object.assign(printData.attributes, parameters);\n\n      if (projection.code !== 'EPSG:3857' && this.map_.getLayers().some(layer => (layer.type === M.layer.type.OSM || layer.type === M.layer.type.Mapbox))) {\n        printData.attributes.map.projection = 'EPSG:3857';\n      }\n\n      if (!this.forceScale_) {\n        printData.attributes.map.bbox = [bbox.x.min, bbox.y.min, bbox.x.max, bbox.y.max];\n\n        if (projection.code !== 'EPSG:3857' && this.map_.getLayers().some(layer => (layer.type === M.layer.type.OSM || layer.type === M.layer.type.Mapbox))) {\n          printData.attributes.map.bbox = this.getImpl().transformExt(printData.attributes.map.bbox, projection.code, 'EPSG:3857');\n        }\n      } else if (this.forceScale_) {\n        printData.attributes.map.center = [center.x, center.y];\n        printData.attributes.map.scale = this.map_.getScale();\n      }\n\n      return printData;\n    });\n  }\n\n  /**\n   * This function encodes layers.\n   *\n   * @private\n   * @function\n   */\n  encodeLayers() {\n    // Filters visible layers whose resolution is inside map resolutions range\n    // and that doesn't have Cluster style.\n    const layers = this.map_.getLayers().filter((layer) => {\n      return (layer.isVisible() && layer.inRange() && layer.name !== 'cluster_cover');\n    });\n\n    let numLayersToProc = layers.length;\n\n    return (new Promise((success, fail) => {\n      let encodedLayers = [];\n      const vectorLayers = [];\n      const wmsLayers = [];\n      const otherBaseLayers = [];\n      layers.forEach((layer) => {\n        this.getImpl().encodeLayer(layer).then((encodedLayer) => {\n          // Vector layers must be added after non vector layers.\n          if (!M.utils.isNullOrEmpty(encodedLayer)) {\n            if (encodedLayer.type === 'Vector' || encodedLayer.type === 'KML') {\n              vectorLayers.push(encodedLayer);\n            } else if (encodedLayer.type === 'WMS') {\n              wmsLayers.push(encodedLayer);\n            } else {\n              otherBaseLayers.push(encodedLayer);\n            }\n          }\n\n          numLayersToProc -= 1;\n          if (numLayersToProc === 0) {\n            encodedLayers = encodedLayers.concat(otherBaseLayers)\n              .concat(wmsLayers).concat(vectorLayers);\n            // Mapfish requires reverse order\n            success(encodedLayers.reverse());\n          }\n        });\n      });\n    }));\n  }\n\n  /**\n   * This function creates list element.\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  createQueueElement() {\n    const queueElem = document.createElement('li');\n    let title = this.inputTitle_.value;\n    if (M.utils.isNullOrEmpty(title)) {\n      title = PrinterControl.NO_TITLE;\n    }\n    queueElem.innerHTML = title;\n    return queueElem;\n  }\n\n  /**\n   * This function downloads printed map.\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  downloadPrint(event) {\n    event.preventDefault();\n\n    const downloadUrl = this.getAttribute(PrinterControl.DOWNLOAD_ATTR_NAME);\n    if (!M.utils.isNullOrEmpty(downloadUrl)) {\n      window.open(downloadUrl, '_blank');\n    }\n  }\n\n  /**\n   *  Converts epsg code to projection name.\n   * @public\n   * @function\n   * @param {String} projection - EPSG:xxxx\n   * @api\n   */\n  turnProjIntoLegend(projection) {\n    let projectionLegend;\n    switch (projection) {\n      case 'EPSG:4258':\n        projectionLegend = 'ETRS89 (4258)';\n        break;\n      case 'EPSG:4326':\n        projectionLegend = 'WGS84 (4326)';\n        break;\n      case 'EPSG:3857':\n        projectionLegend = 'WGS84 (3857)';\n        break;\n      case 'EPSG:25831':\n        projectionLegend = 'UTM zone 31N (25831)';\n        break;\n      case 'EPSG:25830':\n        projectionLegend = 'UTM zone 30N (25830)';\n        break;\n      case 'EPSG:25829':\n        projectionLegend = 'UTM zone 29N (25829)';\n        break;\n      case 'EPSG:25828':\n        projectionLegend = 'UTM zone 28N (25828)';\n        break;\n      default:\n        projectionLegend = '';\n    }\n    return projectionLegend;\n  }\n\n  /**\n   * This function checks if an object is equal to this control.\n   *\n   * @function\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof PrinterControl) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n}\n\n/**\n * Name for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterControl.NAME = 'printercontrol';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterControl.TEMPLATE = 'printer.html';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterControl.LOADING_CLASS = 'printing';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterControl.DOWNLOAD_ATTR_NAME = 'data-donwload-url-print';\n\n/**\n * M.template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinterControl.NO_TITLE = '(Sin título)';\n","/**\n * @module M/plugin/Printer\n */\nimport 'assets/css/printer';\nimport PrinterControl from './printercontrol';\n\nexport default class Printer extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(parameters = {}) {\n    super(null);\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Control that executes the searches\n     * @private\n     * @type {Object}\n     */\n    this.control_ = null;\n\n    /**\n     * Panel of this plugin\n     * @private\n     * @type {M.ui.Panel}\n     */\n    this.panel_ = null;\n\n    /**\n     * Name of this control\n     * @public\n     * @type {string}\n     * @api stable\n     */\n    this.name = Printer.NAME;\n\n    /**\n     * Position of the plugin\n     * @private\n     * @type {String}\n     */\n    this.position_ = parameters.position || 'TR';\n\n    /**\n     * Option to allow the plugin to be collapsed or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsed_ = parameters.collapsed;\n    if (this.collapsed_ === undefined) this.collapsed_ = true;\n\n    /**\n     * Option to allow the plugin to be collapsible or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsible_ = parameters.collapsible;\n    if (this.collapsible_ === undefined) this.collapsible_ = true;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.map_ = map;\n    this.control_ = new PrinterControl();\n    this.controls_.push(this.control_);\n    this.panel_ = new M.ui.Panel('printer', {\n      collapsed: this.collapsed_,\n      collapsible: this.collapsible_,\n      className: 'm-printer',\n      collapsedButtonClass: 'icon-impresora',\n      position: M.ui.position[this.position_],\n      tooltip: 'Impresión del mapa',\n    });\n    this.panel_.on(M.evt.ADDED_TO_MAP, (html) => {\n      M.utils.enableTouchScroll(html);\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n    this.control_.on(M.evt.ADDED_TO_MAP, () => {\n      this.fire(M.evt.ADDED_TO_MAP);\n    });\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.position_}*${this.collapsed_}*${this.collapsible_}`;\n  }\n\n  /**\n   * This function return the control of plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getControls() {\n    return this.controls_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    this.map_ = null;\n    this.control_ = null;\n    this.controls_ = null;\n    this.panel_ = null;\n    this.name = null;\n  }\n\n  /**\n   * This function compare if pluging recieved by param is instance of   M.plugin.Printer\n   *\n   * @public\n   * @function\n   * @param {M.plugin} plugin to comapre\n   * @api stable\n   */\n  equals(plugin) {\n    if (plugin instanceof Printer) {\n      return true;\n    }\n    return false;\n  }\n}\n\n/**\n * Name to identify this plugin\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nPrinter.NAME = 'printer';\n","import M$plugin$Printer from './/facade/js/printer';\nimport M$control$PrinterControl from './/facade/js/printercontrol';\nimport M$impl$control$PrinterControl from './/impl/ol/js/printercontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Printer = M$plugin$Printer;\nwindow.M.control.PrinterControl = M$control$PrinterControl;\nwindow.M.impl.control.PrinterControl = M$impl$control$PrinterControl;\n"],"sourceRoot":""}