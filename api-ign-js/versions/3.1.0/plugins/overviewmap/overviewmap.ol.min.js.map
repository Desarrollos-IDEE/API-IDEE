{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/overviewmap.html","webpack:///./src/impl/ol/js/overviewmapcontrol.js","webpack:///./src/facade/js/overviewmapcontrol.js","webpack:///./src/facade/js/overviewmap.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","OverviewMapControl","options","vendorOptions","M","utils","extend","layers","toggleDelay_","isNullOrEmpty","toggleDelay","collapsedButtonClass_","collapsedButtonClass","position","openedButtonClass_","openedButtonClass","facadeMap_","ol","control","OverviewMap","map","html","this","update","getCollapsed","element","querySelector","addEventListener","openEventListener","click","addLayers","button","collapsed_","classList","contains","remove","add","setTarget","evt","event","target","onclick","facadeControl","facadeControl_","panel","getPanel","target_","getControlsContainer","layer","getOverviewMap","addLayer","getOL3Layer","olLayers","getLayers","forEach","type","WMS","transparent","isVisible","olLayer","getImpl","on","ADDED_TO_MAP","addLayer_","push","newView","impl","View","projection","proj","getProjection","code","resolutions","getResolutions","ovmap_","setView","getMapImpl","addControl","wasOpen_","classToggle","setTimeout","replaceNode","collapseLabel_","label_","ovmap","isRendered","updateSize","resetExtent_","updateBox_","removeControl","htmlElement","className","newNode","oldNode","parent","parentNode","replaceChild","isUndefined","OverviewMapImplControl","exception","Control","Promise","success","fail","template","compileSync","map_","controls_","options_","position_","undefined","collapsed","collapsible","metadata_","api","metadata","Plugin","panel_","ui","Panel","addControls","addPanels","removeControls","control_","window","plugin","M$plugin$OverviewMap","M$control$OverviewMapControl","M$impl$control$OverviewMapControl"],"mappings":"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","file":"overviewmap.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = \"<div class=\\\"m-control m-container m-overviewmap\\\">\\n</div>\";","/**\n * @module M/impl/control/OverviewMapControl\n */\nexport default class OverviewMapControl extends ol.control.OverviewMap {\n  /**\n   * @constructor\n   * @extends {ol.control.Control}\n   * @api stable\n   */\n  constructor(options, vendorOptions = {}) {\n    super(M.utils.extend({\n      layers: [],\n    }, vendorOptions, true));\n\n    /**\n     * Toggle delayer\n     * @private\n     * @type {Number}\n     */\n    this.toggleDelay_ = 0;\n    if (!M.utils.isNullOrEmpty(options.toggleDelay)) {\n      this.toggleDelay_ = options.toggleDelay;\n    }\n\n    /**\n     * Collapsed button class\n     * @private\n     * @type {String}\n     */\n    this.collapsedButtonClass_ = 'overviewmap-mundo';\n    if (!M.utils.isNullOrEmpty(options.collapsedButtonClass)) {\n      this.collapsedButtonClass_ = options.collapsedButtonClass;\n    }\n\n    if (options.position === 'TR' || options.position === 'BR') {\n      this.openedButtonClass_ = 'g-cartografia-flecha-derecha';\n    } else {\n      this.openedButtonClass_ = 'g-cartografia-flecha-izquierda';\n    }\n\n    if (!M.utils.isNullOrEmpty(options.openedButtonClass)) {\n      this.openedButtonClass_ = options.openedButtonClass;\n    }\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {*}\n     */\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function sets de control facade of the class\n   * @function\n   * @param {M/control/OverviewMap}\n   * @api\n   */\n  set facadeControl(c) {\n    this.facadeControl_ = c;\n  }\n\n  /**\n   * This function gets de control facade of the class\n   * @function\n   * @return {M/control/OverviewMap}\n   * @api\n   */\n  get facadeControl() {\n    return this.facadeControl_;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    this.facadeMap_ = map;\n    this.update(map, html);\n    if (!this.getCollapsed()) {\n      this.element.querySelector('button').click();\n      this.element.querySelector('button').click();\n      this.addLayers();\n    } else {\n      this.element.querySelector('button').addEventListener('click', this.openEventListener.bind(this));\n    }\n  }\n\n  /**\n   * Updates the controls\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {function} template template of this control\n   */\n  update(map, html) {\n    const button = this.element.querySelector('button');\n    if (this.collapsed_ === true) {\n      if (button.classList.contains(this.collapsedButtonClass_)) {\n        button.classList.remove(this.collapsedButtonClass_);\n      } else {\n        button.classList.add(this.collapsedButtonClass_);\n      }\n    } else if (button.classList.contains(this.openedButtonClass_)) {\n      button.classList.remove(this.openedButtonClass_);\n    } else {\n      button.classList.add(this.openedButtonClass_);\n    }\n    this.setTarget();\n  }\n\n  /**\n   * This function execute the addLayers method when\n   * the control is opened.\n   * @function\n   */\n  openEventListener(evt) {\n    const event = evt;\n    if (this.getCollapsed() === true) {\n      this.addLayers();\n      event.target.onclick = null;\n    }\n  }\n\n  /**\n   * Sets the target of overviewmap control\n   * @function\n   * @api\n   */\n  setTarget() {\n    const facadeControl = this.facadeControl_;\n    if (!M.utils.isNullOrEmpty(facadeControl)) {\n      const panel = facadeControl.getPanel();\n      if (!M.utils.isNullOrEmpty(panel)) {\n        this.target_ = panel.getControlsContainer();\n      }\n    }\n  }\n\n  /**\n   *\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  getElement() {\n    return this.element;\n  }\n\n  /**\n   * function remove the event 'click'\n   *\n   * @private\n   * @function\n   */\n  addLayer_(layer) {\n    this.getOverviewMap().addLayer(layer.getOL3Layer());\n  }\n\n  /**\n   * This function adds the layers of map to overviewmap control\n   * @function\n   * @public\n   * @param {M/Map}\n   */\n  addLayers() {\n    const olLayers = [];\n    this.facadeMap_.getLayers().forEach((layer) => {\n      if ((layer.type === M.layer.type.WMS ||\n          layer.transparent === false) && layer.isVisible()) {\n        const olLayer = layer.getImpl().getOL3Layer();\n        if (M.utils.isNullOrEmpty(olLayer)) {\n          layer.getImpl().on(M.evt.ADDED_TO_MAP, this.addLayer_.bind(this));\n        } else {\n          olLayers.push(olLayer);\n        }\n      }\n    });\n    const newView = new M.impl.View({\n      projection: ol.proj.get(this.facadeMap_.getProjection().code),\n      resolutions: this.facadeMap_.getResolutions(),\n    });\n    this.ovmap_.setView(newView);\n    olLayers.forEach(layer => this.ovmap_.addLayer(layer));\n    this.facadeMap_.getMapImpl().addControl(this);\n    this.wasOpen_ = true;\n  }\n\n  /**\n   * @overrides ol.control.Control.prototype\n   */\n  handleToggle_() {\n    this.classToggle(this.element, 'ol-collapsed');\n    const button = this.element.querySelector('button');\n    this.classToggle(button, this.openedButtonClass_);\n    this.classToggle(button, this.collapsedButtonClass_);\n\n    setTimeout(() => {\n      if (this.collapsed_) {\n        this.replaceNode(this.collapseLabel_, this.label_);\n      } else {\n        this.replaceNode(this.label_, this.collapseLabel_);\n      }\n      this.collapsed_ = !this.collapsed_;\n\n      // manage overview map if it had not been rendered before and control\n      // is expanded\n      const ovmap = this.ovmap_;\n      if (!this.collapsed_ && !ovmap.isRendered()) {\n        ovmap.updateSize();\n        this.resetExtent_();\n        ovmap.addEventListener('postrender', (event) => {\n          this.updateBox_();\n        });\n      }\n    }, this.toggleDelay_);\n  }\n\n  /**\n   * This function destroys this control, cleaning the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  destroy() {\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n\n  /* Mapea M.utils methods (not included in API IGN Lite) */\n\n  classToggle(htmlElement, className) {\n    const classList = htmlElement.classList;\n    if (classList.contains(className)) {\n      classList.remove(className);\n    } else {\n      classList.add(className);\n    }\n  }\n\n  replaceNode(newNode, oldNode) {\n    const parent = oldNode.parentNode;\n    if (parent) {\n      parent.replaceChild(newNode, oldNode);\n    }\n  }\n}\n","/**\n * @module M/control/OverviewMapControl\n */\n\nimport OverviewMapImplControl from 'impl/overviewmapcontrol';\nimport template from 'templates/overviewmap';\n\nexport default class OverviewMapControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(options = {}, vendorOptions = {}) {\n    if (M.utils.isUndefined(OverviewMapImplControl)) {\n      M.exception('La implementación usada no puede crear controles OverviewMapControl');\n    }\n    const impl = new OverviewMapImplControl(options, vendorOptions);\n    super(impl, 'OverviewMap');\n\n    impl.facadeControl = this;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      success(html);\n    });\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof OverviewMapControl;\n  }\n}\n","/**\n * @module M/plugin/OverviewMap\n */\nimport 'assets/css/overviewmap';\nimport OverviewMapControl from './overviewmapcontrol';\nimport api from '../../api';\n\nexport default class OverviewMap extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options, vendorOptions) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Options of the plugin\n     * @private\n     * @type {Object}\n     */\n    this.options_ = options || {};\n\n    /**\n     * Position of the plugin\n     * @private\n     * @type {String}\n     */\n    this.position_ = options !== undefined ? options.position : 'BR';\n\n    /**\n     * Vendor options\n     * @public\n     * @type {Object}\n     */\n    this.vendorOptions = vendorOptions || {};\n\n    /**\n     * Collapsed flad\n     * @public\n     * @type {Boolean}\n     */\n    this.vendorOptions.collapsed = vendorOptions !== undefined ? vendorOptions.collapsed : false;\n\n    /**\n     * Collapsible flag\n     * @public\n     * @type {Boolean}\n     */\n    this.vendorOptions.collapsible = vendorOptions !== undefined ? vendorOptions.collapsible : true;\n\n    /**\n     * Name of the plugin\n     * @public\n     * @type {String}\n     */\n    this.name = 'overviewmap';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.controls_.push(new OverviewMapControl(this.options_, this.vendorOptions));\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelOverviewMap', {\n      className: 'm-overviewmap-panel',\n      position: M.ui.position[this.position_],\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.map_.removeControls([this.control_]);\n    [this.map_, this.control_, this.panel_] = [null, null, null];\n  }\n}\n","import M$plugin$OverviewMap from './/facade/js/overviewmap';\nimport M$control$OverviewMapControl from './/facade/js/overviewmapcontrol';\nimport M$impl$control$OverviewMapControl from './/impl/ol/js/overviewmapcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.OverviewMap = M$plugin$OverviewMap;\nwindow.M.control.OverviewMapControl = M$control$OverviewMapControl;\nwindow.M.impl.control.OverviewMapControl = M$impl$control$OverviewMapControl;\n"],"sourceRoot":""}