{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/rescale.html","webpack:///./src/impl/ol/js/rescalecontrol.js","webpack:///./src/facade/js/rescalecontrol.js","webpack:///./src/facade/js/rescale.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","RescaleControl","M","impl","Control","map","html","this","facadeMap_","scale","resolution","view","getMapImpl","getView","closestZoom","getClosestResolution","animate","center","getCenter","duration","document","querySelector","Math","trunc","originalScale","newScale","minZoom","getMinZoom","maxZoom","getMaxZoom","lastZoom","zoom","getResolutionForZoom","getWMTSScale","abs","dx","getSizeFromViewport","dy","cosRotation","cos","getRotation","sinRotation","sin","xCos","xSin","yCos","ySin","x","y","x0","x1","x2","x3","y0","y1","y2","y3","min","max","projection","getProjection","code","mpu","ol","proj","getMetersPerUnit","pix","getSize","pix2","getForViewAndSize","size","selector","util","getUid","element","metrics","window","getComputedStyle","parseInt","width","height","utils","isUndefined","RescaleImplControl","exception","impl_","Promise","success","fail","template","compileSync","addEventListener","e","zoomToInputScale","keyCode","writtenScale","target","trim","replace","test","zoomToScale","substring","control","Rescale","options","map_","controls_","position_","position","collapsible","collapsed","Plugin","push","panel_","ui","Panel","className","collapsedButtonClass","addControls","addPanels","plugin","M$plugin$Rescale","M$control$RescaleControl","M$impl$control$RescaleControl"],"mappings":"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","file":"rescale.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-rescale\\\">\\n    <label> 1:<input id=\\\"m-rescale-scaleinput\\\" type=\\\"text\\\" placeholder=\\\"Introducir escala\\\" /></label>\\n</div>\";","/**\n * @module M/impl/control/RescaleControl\n */\nexport default class RescaleControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n    this.facadeMap_ = map;\n  }\n\n  /**\n   * This function zooms the map to the selected scale\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  zoomToScale(scale) {\n    // let closestScale = scale;\n    let resolution;\n    if (scale !== '0') {\n      const view = this.facadeMap_.getMapImpl().getView();\n      // closestScale = this.closestIGNScale(scale);\n      // resolution = this.scaleToResolution(closestScale);\n      const closestZoom = this.getClosestResolution(scale);\n      resolution = closestZoom.resolution;\n      view.animate({\n        center: view.getCenter(),\n        resolution,\n        duration: 500,\n      });\n      // document.querySelector('#m-rescale-scaleinput').value = `1:${scale}`;\n      document.querySelector('#m-rescale-scaleinput').value = Math.trunc(closestZoom.scale);\n    }\n  }\n\n  /**\n   * Gets inputed scale and returns base layer closest scale and resolution.\n   * @public\n   * @function\n   * @param {Number} originalScale - requested scale\n   * @api\n   */\n  getClosestResolution(originalScale) {\n    const minZoom = this.facadeMap_.getMinZoom();\n    const maxZoom = this.facadeMap_.getMaxZoom();\n    let lastZoom = {};\n    let newScale;\n\n    for (let zoom = minZoom; zoom < maxZoom + 1; zoom += 1) {\n      const resolution = this.facadeMap_.getMapImpl().getView().getResolutionForZoom(zoom);\n      const scale = this.getWMTSScale(resolution);\n      if (scale < originalScale) {\n        const oldWins = Math.abs(originalScale - scale) > Math.abs(originalScale - lastZoom.scale);\n        newScale = oldWins ? lastZoom : { scale, resolution };\n        zoom = maxZoom + 1;\n      } else {\n        lastZoom = { scale, resolution };\n      }\n    }\n\n    return newScale;\n  }\n\n  // /**\n  //  * Finds IGN service closest scale to the requested one.\n  //  * @public\n  //  * @function\n  //  * @api\n  //  * @param {*} originalScale - Requested scale\n  //  */\n  // closestIGNScale(originalScale) {\n  //   // EPSG:3857 scales used by IGN\n  //   // const ignScales = [533, 1066, 2132, 4265, 8530, 17061, 34123,\n  //   //   68247, 136494, 272989, 545978, 1091957, 2183915, 4367830, 8735660, 17471320, 34942641,\n  //   // ];\n  //   // const newScale = ignScales.reduce((prev, curr) => {\n  //   //   return (Math.abs(curr - originalScale) < Math.abs(prev - originalScale) ? curr : prev);\n  //   // });\n  //   return newScale;\n  // }\n\n  getForViewAndSize(resolution) {\n    const dx = (resolution * this.getSizeFromViewport()[0]) / 2;\n    const dy = (resolution * this.getSizeFromViewport()[1]) / 2;\n    const cosRotation = Math.cos(this.facadeMap_.getMapImpl().getView().getRotation());\n    const sinRotation = Math.sin(this.facadeMap_.getMapImpl().getView().getRotation());\n    const xCos = dx * cosRotation;\n    const xSin = dx * sinRotation;\n    const yCos = dy * cosRotation;\n    const ySin = dy * sinRotation;\n    const x = this.facadeMap_.getCenter().x;\n    const y = this.facadeMap_.getCenter().y;\n    const x0 = (x - xCos) + ySin;\n    const x1 = (x - xCos) - ySin;\n    const x2 = (x + xCos) - ySin;\n    const x3 = (x + xCos) + ySin;\n    const y0 = (y - xSin) - yCos;\n    const y1 = (y - xSin) + yCos;\n    const y2 = (y + xSin) + yCos;\n    const y3 = (y + xSin) - yCos;\n    return [\n      Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n      Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    ];\n  }\n\n  getWMTSScale(resolution) {\n    const projection = this.facadeMap_.getProjection().code;\n    const olProj = ol.proj.get(projection);\n    const mpu = olProj.getMetersPerUnit(); // meters per unit in depending on the CRS;\n    const size = this.facadeMap_.getMapImpl().getSize();\n    const pix = size[0]; // Numero de pixeles en el mapa\n    // Extension del mapa en grados (xmin, ymin, xmax, ymax)\n    const pix2 = this.getForViewAndSize(resolution);\n    // Extension angular del mapa (cuantos grados estan en el mapa)\n    const ang = pix2[2] - pix2[0];\n    // (numero de metros en el mapa / numero de pixeles) / metros por pixel\n    const scale = (((mpu * ang) / pix) * 1000) / 0.28;\n    return scale;\n  }\n\n  getSizeFromViewport() {\n    const size = [100, 100];\n    const selector = `.ol-viewport[data-view=\"${ol.util.getUid(this.facadeMap_.getMapImpl().getView())}\"]`;\n    const element = document.querySelector(selector);\n    if (element) {\n      const metrics = window.getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  }\n}\n","/**\n * @module M/control/RescaleControl\n */\n\nimport RescaleImplControl from 'impl/rescalecontrol';\nimport template from 'templates/rescale';\n\n// let typingTimer;\n\nexport default class RescaleControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor() {\n    if (M.utils.isUndefined(RescaleImplControl)) {\n      M.exception('La implementación usada no puede crear controles RescaleControl');\n    }\n    const impl = new RescaleImplControl();\n    super(impl, 'Rescale');\n    this.impl_ = impl;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    this.map = map;\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template);\n      html.querySelector('#m-rescale-scaleinput').addEventListener('keyup', e => this.zoomToInputScale(e));\n      success(html);\n    });\n  }\n\n  /**\n   * Zooms to written scale (aproximately).\n   * @public\n   * @function\n   * @param {Event} e\n   * @api\n   */\n  zoomToInputScale(e) {\n    if (e.keyCode === 13) {\n      const writtenScale = e.target.value.trim().replace(/ /g, '').replace(/\\./g, '').replace(/,/g, '');\n      const scaleRegExp = /^1:[1-9]\\d*$/;\n      const simpleScaleRegExp = /^[1-9]\\d*$/;\n      if (scaleRegExp.test(writtenScale)) {\n        this.impl_.zoomToScale(parseInt(writtenScale.substring(2), 10));\n      } else if (simpleScaleRegExp.test(writtenScale)) {\n        this.impl_.zoomToScale(parseInt(writtenScale, 10));\n      }\n    }\n  }\n\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api stable\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-rescale button');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api stable\n   */\n  equals(control) {\n    return control instanceof RescaleControl;\n  }\n}\n","/**\n * @module M/plugin/Rescale\n */\nimport 'assets/css/rescale';\nimport RescaleControl from './rescalecontrol';\n\nexport default class Rescale extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options = {}) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * This variable indicates plugin's position on window\n     * @private\n     * @type {String} { 'TL' | 'TR' | 'BL' | 'BR' } (corners)\n     */\n    this.position_ = options.position || 'TR';\n\n    /**\n     * This variable indicates if this plugin is collapsible.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible = options.collapsible || true;\n\n    /**\n     * This variable indicates if this plugin is collapsed on load.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed = options.collapsed || true;\n\n    /**\n     * Name of the plugin\n     * @private\n     * @type {String}\n     */\n    this.name = 'rescale';\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.controls_.push(new RescaleControl());\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelRescale', {\n      className: 'm-rescale-panel',\n      collapsible: this.collapsible,\n      collapsed: this.collapsed,\n      position: M.ui.position[this.position_],\n      collapsedButtonClass: 'g-cartografia-escala3',\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.position_}`;\n  }\n}\n","import M$plugin$Rescale from './/facade/js/rescale';\nimport M$control$RescaleControl from './/facade/js/rescalecontrol';\nimport M$impl$control$RescaleControl from './/impl/ol/js/rescalecontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Rescale = M$plugin$Rescale;\nwindow.M.control.RescaleControl = M$control$RescaleControl;\nwindow.M.impl.control.RescaleControl = M$impl$control$RescaleControl;\n"],"sourceRoot":""}