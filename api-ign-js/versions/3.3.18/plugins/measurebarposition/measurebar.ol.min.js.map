{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/measure_pointer_tooltip.html","webpack:///./src/templates/measure_tooltip.html","webpack:///./src/templates/measureposition.html","webpack:///./src/templates/measurearea.html","webpack:///./src/templates/measurelength.html","webpack:///./src/templates/measureclear.html","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/measurebase.js","webpack:///./src/impl/ol/js/measurebase.js","webpack:///./src/impl/ol/js/measureposition.js","webpack:///./src/facade/js/measureposition.js","webpack:///./src/impl/ol/js/measurearea.js","webpack:///./src/facade/js/measurearea.js","webpack:///./src/impl/ol/js/measurelength.js","webpack:///./src/facade/js/measurelength.js","webpack:///./src/impl/ol/js/measureclear.js","webpack:///./src/facade/js/measureclear.js","webpack:///./src/facade/js/measurebar.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","translations","en","es","getLang","res","M","language","getTranslation","lang","getValue","keyPath","translation","utils","isNullOrEmpty","console","warn","split","reduce","prev","current","Measure","impl","template","template_","destroyable","Control","map","compileSync","this","jsonp","vars","element","querySelector","obj","equals","getImpl","destroy","map_","removeControls","NAME","POINTER_TOOLTIP_TEMPLATE","MEASURE_TOOLTIP_TEMPLATE","HELP_MESSAGE","type","type_","checkSetType_","layer_","createLayer_","draw_","createIteractionDraw_","helpTooltip_","measureTooltip_","facadeMap_","currentFeature_","tooltipCoord_","overlays_","isMeasurePosition","getMapImpl","addLayer","createHelpTooltip_","createMeasureTooltip_","invokeEscKey","listenerPointerMoveHandlerKey","on","pointerMoveHandler_","active","setTimeout","isCoordinatesSupliedWait","freehandCondition_","addInteraction","ol","events","condition","shiftKeyOnly","document","body","style","cursor","boundCheckEscKey","checkEscKey","addEventListener","evt","querySelectorAll","forEach","elem","click","removeEventListener","dispatchEvent","window","KeyboardEvent","keyCode","code","which","shiftKey","ctrlKey","metaKey","err","error","coordinatesPosition","startDrawing_","coordinate","Observable","unByKey","removeInteraction","removeOverlay","layer","Vector","source","Style","fill","Fill","color","stroke","Stroke","width","image","Circle","radius","zIndex","draw","interaction","Draw","getSource","lineDash","onDrawStart_","onDrawEnd_","helpTooltipElement","tooltipPointerHTML","Overlay","offset","positioning","addOverlay","measureTooltipElement","tooltipHTML","push","feature","getGeometry","onGeometryChange_","un","getElement","classList","add","setOffset","dragging","helpMsg","helpMsg_","helpMsgContinue_","innerHTML","setPosition","newGeometry","target","tooltipText","formatGeometry","tooltipCoord","getTooltipCoordinate","atFinish_","pixel","getPixelFromCoordinate","finishDrawing","clear","overlay","length","deactivate","remove","MeasurePosition","FacadeMeasure","HELP_KEEP_MESSAGE","geometry","codeProj","getProjection","unitsProj","units","Math","round","sphere","getLength","coordinates","getCoordinates","ii","getDistance","proj","transform","formatNumber","getLastCoordinate","measure","getControls","filter","control","FacadeMeasureArea","FacadeMeasureLength","coord","number","replace","join","MeasurePositionImpl","measurepositionHTML","isUndefined","Exception","TEMPLATE","MeasureArea","MeasureImpl","area","output","projection","getArea","getInteriorPoint","FacadeMeasurePosition","MeasureAreaImpl","measureareaHTML","MeasureLength","MeasureLengthImpl","measurelengthHTML","MeasureClear","measureLengthControl","measureAreaControl","measurePositionControl","measureLengthControl_","measureAreaControl_","measurePositionControl_","onClick","addControl","deactivateOtherBtns","measureLength","measureArea","measurePosition","MeasureClearImpl","measureclearHTML","MeasureBar","options","controls_","position_","position","measureLength_","measureArea_","measureClear_","measurePosition_","Plugin","panel_","ui","Panel","collapsible","className","collapsedButtonClass","tooltip","addControls","addPanels","aControls","plugin","M$plugin$MeasureBar"],"mappings":"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","file":"measurebar.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = \"<div class=\\\"m-measure-tooltip pointer\\\"></div>\";","module.exports = \"<div class=\\\"m-measure-tooltip measure\\\">Area: {{area}}</div>\";","module.exports = \"<div class=\\\"m-control m-measureposition-container\\\">\\n    <button id=\\\"measurebar-position-btn\\\" class=\\\"measurebar-medir-position\\\" title=\\\"{{translations.measure_position}}\\\"></button>\\n</div>\\n\";","module.exports = \"<div class=\\\"m-control m-measurearea-container\\\">\\n    <button id=\\\"measurebar-area-btn\\\" class=\\\"measurebar-medir-area\\\" title=\\\"{{translations.measure_area}}\\\"></button>\\n</div>\\n\";","module.exports = \"<div class=\\\"m-control m-measurelength-container\\\">\\n    <button id=\\\"measurebar-length-btn\\\" class=\\\"measurebar-medir-linea\\\" title=\\\"{{translations.measure}}\\\"></button>\\n</div>\\n\";","module.exports = \"<div class=\\\"m-control m-measureclear-container\\\">\\n    <button id=\\\"measurebar-clear-btn\\\" class=\\\"g-cartografia-papelera\\\" title=\\\"{{translations.delete}}\\\"></button>\\n</div>\\n\";","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  return translations[lang];\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","import { getValue } from './i18n/language';\n\nexport default class Measure extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a Measure\n   * control to provides measure tools\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(impl, template, name) {\n    super(impl, name);\n\n    /**\n     * Template of the control\n     * @private\n     * @type {string}\n     */\n\n    this.template_ = template;\n\n    /**\n     * For destroying one function of the plugin\n     * @private\n     * @type {boolean}\n     */\n    this.destroyable = true;\n  }\n\n  /**\n   * This function creates the view to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map - Map to add the control\n   * @returns {HTMLElement} HTML template\n   * @api stable\n   */\n  createView(map) {\n    return M.template.compileSync(this.template_, {\n      jsonp: true,\n      vars: {\n        translations: getValue('text'),\n      },\n    });\n  }\n\n  /**\n   * This function returns the HTML control button\n   *\n   * @public\n   * @function\n   * @param {HTMLElement} html to add the plugin\n   * @api stable\n   * @export\n   */\n  getActivationButton(element) {\n    return element.querySelector('button'); // button#m-measure-button\n  }\n\n  /**\n   * This function checks if an object is equals\n   * to this control\n   *\n   * @public\n   * @function\n   * @param {*} obj - Object to compare\n   * @returns {boolean} equals - Returns if they are equal or not\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof Measure) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n\n  /**\n   * This function destroys this plugin function\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    if (this.destroyable) {\n      this.destroyable = false;\n      this.getImpl().destroy();\n      this.map_.removeControls(this);\n      this.template_ = null;\n      this.impl = null;\n    }\n  }\n}\n/**\n * Name to identify this control\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasure.NAME = 'measurebar';\n\n/**\n * Template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasure.POINTER_TOOLTIP_TEMPLATE = 'measure_pointer_tooltip.html';\n\n/**\n * Template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasure.MEASURE_TOOLTIP_TEMPLATE = 'measure_tooltip.html';\n\n/**\n * Help message\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasure.HELP_MESSAGE = getValue('text.click_draw');\n","import tooltipPointerHTML from '../../../templates/measure_pointer_tooltip';\nimport tooltipHTML from '../../../templates/measure_tooltip';\nimport { getValue } from '../../../facade/js/i18n/language';\n\n\n/**\n * @classdesc\n * Main constructor of the measure control.\n *\n * @constructor\n * @param {string} type - Type of the measure geometry\n * @extends {M.impl.Control}\n * @api stable\n */\nexport default class Measure extends M.impl.Control {\n  constructor(type) {\n    super();\n\n    /**\n     * Type of the measure geometry\n     * @private\n     * @type {string}\n     */\n    this.type_ = this.checkSetType_(type);\n\n    /**\n     * Vector layer to draw the measures\n     * @private\n     * @type {ol.layer.Vector}\n     */\n    this.layer_ = this.createLayer_();\n\n    /**\n     * Map interaction\n     * @private\n     * @type {ol.interaction.Draw}\n     */\n    this.draw_ = this.createIteractionDraw_();\n\n    /**\n     * Overlay to show the help messages\n     * @private\n     * @type {ol.Overlay}\n     */\n    this.helpTooltip_ = null;\n\n    /**\n     * The measure tooltip element\n     * @private\n     * @type {ol.Overlay}\n     */\n    this.measureTooltip_ = null;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n\n    /**\n     * Currently drawn feature.\n     * @private\n     * @type {ol.Feature}\n     */\n    this.currentFeature_ = null;\n\n    /**\n     * Currently drawn feature coordinate.\n     * @private\n     * @type {ol.Coordinate}\n     */\n    this.tooltipCoord_ = null;\n\n    /**\n     * Currently drawn feature coordinate.\n     * @private\n     * @type {array<ol.Overlay>}\n     */\n    this.overlays_ = [];\n  }\n\n  /**\n   * This function creates apropiate type\n   *\n   * @private\n   * @function\n   * @return {string} type - type from chosen measure Method\n   */\n  checkSetType_(type) {\n    if (type === 'LineString-Position-Option') {\n      this.isMeasurePosition = true;\n      return 'LineString';\n    }\n    this.isMeasurePosition = false;\n    return type;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map - Map to add the plugin\n   * @param {HTMLElement} element - template of this control\n   * @api stable\n   */\n  addTo(map, element) {\n    this.facadeMap_ = map;\n    // adds layer\n    map.getMapImpl().addLayer(this.layer_);\n    // super addTo\n    super.addTo(map, element);\n    this.createHelpTooltip_();\n    this.createMeasureTooltip_();\n  }\n\n  /**\n   * This function enables plugin pressed\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    this.invokeEscKey();\n    this.createHelpTooltip_();\n    this.listenerPointerMoveHandlerKey = this.facadeMap_.getMapImpl().on('pointermove', this.pointerMoveHandler_.bind(this));\n    if (this.isMeasurePosition) {\n      this.active = true;\n      setTimeout(this.isCoordinatesSupliedWait.bind(this), 10);\n      // eslint-disable-next-line no-underscore-dangle\n      this.draw_.freehandCondition_ = function freehandNull() { return false; };\n    } else {\n      this.facadeMap_.getMapImpl().addInteraction(this.draw_);\n      this.active = true;\n      // eslint-disable-next-line no-underscore-dangle\n      this.draw_.freehandCondition_ = ol.events.condition.shiftKeyOnly;\n    }\n    this.createMeasureTooltip_();\n    document.body.style.cursor = 'crosshair';\n    this.boundCheckEscKey = this.checkEscKey.bind(this);\n    document.addEventListener('keyup', this.boundCheckEscKey);\n  }\n\n  checkEscKey(evt) {\n    if (evt.key === 'Escape') {\n      document.querySelectorAll('.m-panel.m-panel-measurebar .m-panel-controls div.activated > button').forEach((elem) => {\n        elem.click();\n      });\n\n      document.removeEventListener('keyup', this.boundCheckEscKey);\n    }\n  }\n\n  invokeEscKey() {\n    try {\n      document.dispatchEvent(new window.KeyboardEvent('keyup', {\n        key: 'Escape',\n        keyCode: 27,\n        code: '',\n        which: 69,\n        shiftKey: false,\n        ctrlKey: false,\n        metaKey: false,\n      }));\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.error(err);\n    }\n  }\n\n  /**\n   * This function waits to activate MeasurePosition\n   *\n   * @function\n   * @private\n   */\n  isCoordinatesSupliedWait() {\n    if (this.active) {\n      if (this.coordinatesPosition != null) {\n        this.facadeMap_.getMapImpl().addInteraction(this.draw_);\n        // eslint-disable-next-line no-underscore-dangle\n        this.draw_.startDrawing_({\n          coordinate: this.coordinatesPosition, map: this.facadeMap_.getMapImpl(),\n        });\n      } else {\n        setTimeout(this.isCoordinatesSupliedWait.bind(this), 500);\n      }\n    }\n  }\n\n  /**\n   * This function dissable plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    document.body.style.cursor = 'default';\n    ol.Observable.unByKey(this.listenerPointerMoveHandlerKey);\n    document.removeEventListener('keyup', this.boundCheckEscKey);\n    if (this.facadeMap_) {\n      this.facadeMap_.getMapImpl().removeInteraction(this.draw_);\n      // this.clear();\n      if (!M.utils.isNullOrEmpty(this.helpTooltip_)) {\n        this.facadeMap_.getMapImpl().removeOverlay(this.helpTooltip_);\n      }\n      if (!M.utils.isNullOrEmpty(this.measureTooltip_)) {\n        this.facadeMap_.getMapImpl().removeOverlay(this.measureTooltip_);\n      }\n    }\n    this.active = false;\n    this.coordinatesPosition = null;\n  }\n\n  /**\n   * This function create Vector layer to draw the measures\n   *\n   * @function\n   * @private\n   * @return {ol.layer.Vector} layer - Vector layer\n   */\n  createLayer_() {\n    const layer = new ol.layer.Vector({\n      source: new ol.source.Vector({}),\n      style: new ol.style.Style({\n        fill: new ol.style.Fill({\n          color: 'rgba(51, 124, 235, 0.2)',\n        }),\n        stroke: new ol.style.Stroke({\n          color: '#337ceb',\n          width: 2,\n        }),\n        image: new ol.style.Circle({\n          radius: 7,\n          fill: new ol.style.Fill({\n            color: '#337ceb',\n          }),\n        }),\n      }),\n      zIndex: 9999999999999,\n    });\n    return layer;\n  }\n\n  /**\n   * This function create interaction draw\n   *\n   * @private\n   * @function\n   * @return {ol.interaction.Draw} draw - Interaction draw\n   */\n  createIteractionDraw_() {\n    const draw = new ol.interaction.Draw({\n      source: this.layer_.getSource(),\n      type: this.type_,\n      style: new ol.style.Style({\n        fill: new ol.style.Fill({\n          color: 'rgba(255, 255, 255, 0.5)',\n        }),\n        stroke: new ol.style.Stroke({\n          color: '#b54d01',\n          lineDash: [10, 10],\n          width: 2,\n        }),\n        image: new ol.style.Circle({\n          radius: 5,\n          stroke: new ol.style.Stroke({\n            color: '#b54d01',\n          }),\n          fill: new ol.style.Fill({\n            color: 'rgba(255, 255, 255, 0.5)',\n          }),\n        }),\n      }),\n    });\n    draw.on('drawstart', this.onDrawStart_.bind(this));\n    draw.on('drawend', this.onDrawEnd_.bind(this));\n\n    return draw;\n  }\n\n  /**\n   * This function create tooltip with the help\n   *\n   * @private\n   * @function\n   * @return {Promise} Template tooltip\n   */\n  createHelpTooltip_() {\n    const helpTooltipElement = M.template.compileSync(tooltipPointerHTML, {\n      jsonp: true,\n      vars: {\n        translations: getValue('text'),\n      },\n    });\n\n    this.helpTooltip_ = new ol.Overlay({\n      element: helpTooltipElement,\n      offset: [15, 0],\n      positioning: 'center-left',\n    });\n    this.facadeMap_.getMapImpl().addOverlay(this.helpTooltip_);\n  }\n\n  /**\n   * This function create Measure tooltip\n   *\n   * @private\n   * @function\n   */\n  createMeasureTooltip_() {\n    const measureTooltipElement = M.template.compileSync(tooltipHTML, {\n      jsonp: true,\n      vars: {\n        translations: getValue('text'),\n      },\n    });\n\n    if (!M.utils.isNullOrEmpty(this.measureTooltip_)) {\n      this.overlays_.push(this.measureTooltip_);\n    }\n    this.measureTooltip_ = new ol.Overlay({\n      element: measureTooltipElement,\n      offset: [0, -15],\n      positioning: 'bottom-center',\n    });\n    this.facadeMap_.getMapImpl().addOverlay(this.measureTooltip_);\n  }\n\n  /**\n   * This function allows start to draw\n   * @private\n   * @function\n   * @param {goog.events.Event} evt - Event draw start\n   */\n  onDrawStart_(evt) {\n    this.currentFeature_ = evt.feature;\n    this.tooltipCoord_ = evt.coordinate;\n    this.currentFeature_.getGeometry().on('change', this.onGeometryChange_.bind(this));\n  }\n\n  /**\n   * This function allows end to draw\n   *\n   * @private\n   * @function\n   * @param {goog.events.Event} evt - Event draw end\n   */\n  onDrawEnd_(evt) {\n    this.currentFeature_.getGeometry().un('change', this.onGeometryChange_);\n\n    // unset sketch\n    this.currentFeature_ = null;\n    this.measureTooltip_.getElement().classList.add('static');\n    this.measureTooltip_.setOffset([0, -7]);\n\n    this.createMeasureTooltip_();\n    if (this.isMeasurePosition) {\n      // eslint-disable-next-line no-underscore-dangle\n      this.draw_.startDrawing_({\n        coordinate: this.coordinatesPosition, map: this.facadeMap_.getMapImpl(),\n      });\n    }\n  }\n\n  /**\n   * Handle pointer move.\n   *\n   * private\n   * function\n   * @param {ol.MapBrowserEvent} evt - Event pointer move\n   */\n  pointerMoveHandler_(evt) {\n    if (evt.dragging) {\n      return;\n    }\n    let helpMsg = this.helpMsg_;\n    if (this.currentFeature_) {\n      helpMsg = this.helpMsgContinue_;\n    }\n    if (!M.utils.isNullOrEmpty(this.helpTooltip_)) {\n      this.helpTooltip_.getElement().innerHTML = helpMsg;\n      this.helpTooltip_.setPosition(evt.coordinate);\n    }\n  }\n\n  /**\n   * Handle pointer move.\n   * private\n   * function\n   * @param {ol.MapBrowserEvent} evt - Event pointer change\n   */\n  onGeometryChange_(evt) {\n    const newGeometry = evt.target;\n    const tooltipText = this.formatGeometry(newGeometry);\n    const tooltipCoord = this.getTooltipCoordinate(newGeometry);\n\n    if (!M.utils.isNullOrEmpty(this.measureTooltip_)) {\n      this.measureTooltip_.getElement().innerHTML = tooltipText;\n      this.measureTooltip_.setPosition(tooltipCoord);\n    }\n    // eslint-disable-next-line no-underscore-dangle\n    if (this.isMeasurePosition && this.draw_.atFinish_({\n      map: this.facadeMap_.getMapImpl(),\n      pixel: this.facadeMap_.getMapImpl().getPixelFromCoordinate(tooltipCoord),\n    })) {\n      this.draw_.finishDrawing();\n    }\n  }\n\n  /**\n   * Clear all measures\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  clear() {\n    if (!M.utils.isNullOrEmpty(this.layer_)) {\n      this.layer_.getSource().clear();\n    }\n    this.overlays_.forEach((overlay) => {\n      this.facadeMap_.getMapImpl().removeOverlay(overlay);\n    }, this);\n    this.overlays_.length = 0;\n  }\n\n\n  /**\n   * This function stops this control and cleans the HTML\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.deactivate();\n    this.element.remove();\n    this.facadeMap_ = null;\n    this.overlays_.length = 0;\n  }\n}\n","import { HELP_KEEP_MESSAGE } from '../../../facade/js/measureposition';\n\nimport Measure from './measurebase';\nimport FacadeMeasure from '../../../facade/js/measurebase';\nimport FacadeMeasureArea from '../../../facade/js/measurearea';\nimport FacadeMeasureLength from '../../../facade/js/measurelength';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasurePosition\n * control\n *\n * @constructor\n * @extends {M.impl.control.Measure}\n * @api stable\n */\nexport default class MeasurePosition extends Measure {\n  constructor() {\n    super('LineString-Position-Option');\n\n    /**\n     * Help message\n     * @private\n     * @type {string}\n     */\n    this.helpMsg_ = FacadeMeasure.HELP_MESSAGE;\n\n    /**\n     * Help message\n     * @private\n     * @type {string}\n     */\n    this.helpMsgContinue_ = HELP_KEEP_MESSAGE;\n  }\n\n  /**\n   * This function add tooltip with measure distance\n   * @public\n   * @param {ol.geom.SimpleGeometry} geometry - Object geometry\n   * @return {string} output - Indicates the measure distance\n   * @api stable\n   */\n  formatGeometry(geometry) {\n    let length = null;\n    const codeProj = this.facadeMap_.getProjection().code;\n    const unitsProj = this.facadeMap_.getProjection().units;\n    if (codeProj === 'EPSG:3857') {\n      length = Math.round(ol.sphere.getLength(geometry) * 100) / 100;\n    } else if (unitsProj === 'd') {\n      const coordinates = geometry.getCoordinates();\n      for (let i = 0, ii = coordinates.length - 1; i < ii; i += 1) {\n        length += ol.sphere.getDistance(ol.proj.transform(coordinates[i], codeProj, 'EPSG:4326'), ol.proj.transform(coordinates[i + 1], codeProj, 'EPSG:4326'));\n      }\n    } else {\n      length = Math.round(geometry.getLength() * 100) / 100;\n    }\n    let output;\n    if (length > 1000) {\n      output = `${this.formatNumber(Math.round(((length / 1000) * 100)) / 100)} km`;\n    } else {\n      output = `${this.formatNumber(Math.round(length * 100) / 100)} m`;\n    }\n    return output;\n  }\n\n  /**\n   * This function returns coordinates to tooltip\n   * @public\n   * @param {ol.geom.SimpleGeometry} geometry - Object geometry\n   * @return {array} coordinates to tooltip\n   * @api stable\n   */\n  getTooltipCoordinate(geometry) {\n    return geometry.getLastCoordinate();\n  }\n\n  activate() {\n    const measure = this.facadeMap_.getControls().filter((control) => {\n      return (control instanceof FacadeMeasureArea || control instanceof FacadeMeasureLength);\n    });\n    if (measure[0]) {\n      measure[0].deactivate();\n    }\n    if (measure[1]) {\n      measure[1].deactivate();\n    }\n    super.activate();\n    document.querySelector('.m-control.m-measureposition-container').classList.add('activated');\n  }\n\n  /**\n   * This function adds coordinates for MeasurePosition only,\n   * requiered to start this functionality\n   *\n   * @public\n   * @function\n   * @param {array<number>} coord - Starting position\n   */\n  setCoordLocationStart(coord) {\n    this.coordinatesPosition = coord;\n  }\n\n  /* eslint-disable newline-per-chained-call */\n  formatNumber(number) {\n    return `${number}`.replace(/\\d(?=(\\d{3})+\\.)/g, '$&*').split('.').join(',').split('*').join('.');\n  }\n}\n","import Measure from './measurebase';\nimport MeasurePositionImpl from '../../impl/ol/js/measureposition';\nimport measurepositionHTML from '../../templates/measureposition';\nimport { getValue } from './i18n/language';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasurePosition\n * control to provides measure distances\n *\n * @constructor\n * @extends {M.control.Measure}\n * @api stable\n */\n\nexport default class MeasurePosition extends Measure {\n  constructor() {\n    // implementation of this control\n    const impl = new MeasurePositionImpl();\n\n    // calls the super constructor\n    super(impl, measurepositionHTML, MeasurePosition.NAME);\n\n    // checks if the implementation can create WMC layers\n    if (M.utils.isUndefined(MeasurePositionImpl)) {\n      M.Exception(getValue('exception.impl_position'));\n    }\n  }\n\n  /**\n   * This function checks if an object is equals\n   * to this control\n   *\n   * @public\n   * @function\n   * @param {*} obj - Object to compare\n   * @returns {boolean} equals - Returns if they are equal or not\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof MeasurePosition) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n}\n/**\n * Name for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasurePosition.NAME = 'measureposition';\n\n/**\n * Template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasurePosition.TEMPLATE = 'measureposition.html';\n\n/**\n * Help message\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nexport const HELP_KEEP_MESSAGE = getValue('text.keep_drawing_new_position_lines');\n","import { HELP_KEEP_MESSAGE } from '../../../facade/js/measurearea';\n\nimport FacadeMeasure from '../../../facade/js/measurebase';\nimport FacadeMeasureLength from '../../../facade/js/measurelength';\nimport FacadeMeasurePosition from '../../../facade/js/measureposition';\nimport MeasureImpl from './measurebase';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasureArea\n * control\n *\n * @constructor\n * @extends {M.impl.control.Measure}\n * @api stable\n */\nexport default class MeasureArea extends MeasureImpl {\n  constructor() {\n    super('Polygon');\n    /**\n     * Help message\n     * @private\n     * @type {string}\n     */\n    this.helpMsg_ = FacadeMeasure.HELP_MESSAGE;\n\n    /**\n     * Help message\n     * @private\n     * @type {string}\n     */\n    this.helpMsgContinue_ = HELP_KEEP_MESSAGE;\n  }\n\n  /**\n   * This function add tooltip with extent of the area\n   * @public\n   * @param {ol.geom.SimpleGeometry} geometry - Object geometry\n   * @return {string} output - Indicate the extent of the area\n   * @api stable\n   */\n  formatGeometry(geometry) {\n    let area = null;\n    const projection = this.facadeMap_.getProjection();\n    area = ol.sphere.getArea(geometry, { projection: projection.code });\n    let output;\n    if (area <= 10000) {\n      output = `${this.formatNumber(Math.round(area * 100) / 100)} m<sup>2</sup>`;\n    } else if (area > 10000 && area <= 1000000) {\n      output = `${this.formatNumber((Math.round((area / 10000) * 10000) / 10000))} ha`;\n    } else if (area > 1000000) {\n      output = `${this.formatNumber((Math.round((area / 1000000) * 10000) / 10000))} km<sup>2</sup>`;\n    }\n\n    return output;\n  }\n\n  /**\n   * This function returns coordinates to tooltip\n   * @public\n   * @param {ol.geom.Geometry} geometry - Object geometry\n   * @return {array} coordinates to tooltip\n   * @api stable\n   */\n  getTooltipCoordinate(geometry) {\n    return geometry.getInteriorPoint().getCoordinates();\n  }\n\n  activate() {\n    const measure = this.facadeMap_.getControls().filter((control) => {\n      return (control instanceof FacadeMeasureLength || control instanceof FacadeMeasurePosition);\n    });\n\n    if (measure[0]) {\n      measure[0].deactivate();\n    }\n    if (measure[1]) {\n      measure[1].deactivate();\n    }\n\n    super.activate();\n    document.querySelector('.m-control.m-measurearea-container').classList.add('activated');\n  }\n\n  /* eslint-disable newline-per-chained-call */\n  formatNumber(number) {\n    return `${number}`.replace(/\\d(?=(\\d{3})+\\.)/g, '$&*').split('.').join(',').split('*').join('.');\n  }\n}\n","import Measure from './measurebase';\nimport MeasureAreaImpl from '../../impl/ol/js/measurearea';\nimport measureareaHTML from '../../templates/measurearea';\nimport { getValue } from './i18n/language';\n\nexport default class MeasureArea extends Measure {\n  constructor() {\n    // implementation of this control\n    const impl = new MeasureAreaImpl();\n\n    // const calls the super constructor\n    super(impl, measureareaHTML, MeasureArea.NAME);\n\n    // checks if the implementation can create WMC layers\n    if (M.utils.isUndefined(MeasureAreaImpl)) {\n      M.Exception(getValue('exception.impl_area'));\n    }\n  }\n  /**\n   * This function checks if an object is equals\n   * to this control\n   *\n   * @public\n   * @function\n   * @param {*} obj - Object to compare\n   * @returns {boolean} equals - Returns if they are equal or not\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof MeasureArea) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n}\n\n/**\n * Name for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasureArea.NAME = 'measurearea';\n\n/**\n * Template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\n\nMeasureArea.TEMPLATE = 'measurearea.html';\n\n/**\n * Help message\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nexport const HELP_KEEP_MESSAGE = getValue('text.keep_drawing_area');\n","import { HELP_KEEP_MESSAGE } from '../../../facade/js/measurelength';\n\nimport Measure from './measurebase';\nimport FacadeMeasure from '../../../facade/js/measurebase';\nimport FacadeMeasureArea from '../../../facade/js/measurearea';\nimport FacadeMeasurePosition from '../../../facade/js/measureposition';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasureLength\n * control\n *\n * @constructor\n * @extends {M.impl.control.Measure}\n * @api stable\n */\nexport default class MeasureLength extends Measure {\n  constructor() {\n    super('LineString');\n\n    /**\n     * Help message\n     * @private\n     * @type {string}\n     */\n    this.helpMsg_ = FacadeMeasure.HELP_MESSAGE;\n\n    /**\n     * Help message\n     * @private\n     * @type {string}\n     */\n    this.helpMsgContinue_ = HELP_KEEP_MESSAGE;\n  }\n\n\n  /**\n   * This function add tooltip with measure distance\n   * @public\n   * @param {ol.geom.SimpleGeometry} geometry - Object geometry\n   * @return {string} output - Indicates the measure distance\n   * @api stable\n   */\n  formatGeometry(geometry) {\n    let length = null;\n    const codeProj = this.facadeMap_.getProjection().code;\n    const unitsProj = this.facadeMap_.getProjection().units;\n    if (codeProj === 'EPSG:3857') {\n      length = Math.round(ol.sphere.getLength(geometry) * 100) / 100;\n    } else if (unitsProj === 'd') {\n      const coordinates = geometry.getCoordinates();\n      for (let i = 0, ii = coordinates.length - 1; i < ii; i += 1) {\n        length += ol.sphere.getDistance(ol.proj.transform(coordinates[i], codeProj, 'EPSG:4326'), ol.proj.transform(coordinates[i + 1], codeProj, 'EPSG:4326'));\n      }\n    } else {\n      length = Math.round(geometry.getLength() * 100) / 100;\n    }\n    let output;\n    if (length > 1000) {\n      output = `${this.formatNumber(Math.round(((length / 1000) * 100)) / 100)} km`;\n    } else {\n      output = `${this.formatNumber(Math.round(length * 100) / 100)} m`;\n    }\n    return output;\n  }\n\n  /**\n   * This function returns coordinates to tooltip\n   * @public\n   * @param {ol.geom.SimpleGeometry} geometry - Object geometry\n   * @return {array} coordinates to tooltip\n   * @api stable\n   */\n  getTooltipCoordinate(geometry) {\n    return geometry.getLastCoordinate();\n  }\n\n  activate() {\n    const measure = this.facadeMap_.getControls().filter((control) => {\n      return (control instanceof FacadeMeasureArea || control instanceof FacadeMeasurePosition);\n    });\n    if (measure[0]) {\n      measure[0].deactivate();\n    }\n    if (measure[1]) {\n      measure[1].deactivate();\n    }\n    super.activate();\n    document.querySelector('.m-control.m-measurelength-container').classList.add('activated');\n  }\n\n  /* eslint-disable newline-per-chained-call */\n  formatNumber(number) {\n    return `${number}`.replace(/\\d(?=(\\d{3})+\\.)/g, '$&*').split('.').join(',').split('*').join('.');\n  }\n}\n","import Measure from './measurebase';\nimport MeasureLengthImpl from '../../impl/ol/js/measurelength';\nimport measurelengthHTML from '../../templates/measurelength';\nimport { getValue } from './i18n/language';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasureLength\n * control to provides measure distances\n *\n * @constructor\n * @extends {M.control.Measure}\n * @api stable\n */\n\nexport default class MeasureLength extends Measure {\n  constructor() {\n    // implementation of this control\n    const impl = new MeasureLengthImpl();\n\n    // calls the super constructor\n    super(impl, measurelengthHTML, MeasureLength.NAME);\n\n    // checks if the implementation can create WMC layers\n    if (M.utils.isUndefined(MeasureLengthImpl)) {\n      M.Exception(getValue('exception.impl_length'));\n    }\n  }\n\n  /**\n   * This function checks if an object is equals\n   * to this control\n   *\n   * @public\n   * @function\n   * @param {*} obj - Object to compare\n   * @returns {boolean} equals - Returns if they are equal or not\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof MeasureLength) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n}\n/**\n * Name for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasureLength.NAME = 'measurelength';\n\n/**\n * Template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasureLength.TEMPLATE = 'measurelength.html';\n\n/**\n * Help message\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nexport const HELP_KEEP_MESSAGE = getValue('text.keep_drawing');\n","import FacadeMeasureArea from '../../../facade/js/measurearea';\nimport FacadeMeasureLength from '../../../facade/js/measurelength';\nimport FacadeMeasurePosition from '../../../facade/js/measureposition';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasureClear\n * control\n *\n * @constructor\n * @extends {M.impl.Control}\n * @api stable\n */\nexport default class MeasureClear extends M.impl.Control {\n  constructor(measureLengthControl, measureAreaControl, measurePositionControl) {\n    super();\n\n    /**\n     * Implementation measureLength\n     * @private\n     * @type {M.impl.control.Measure}\n     */\n    this.measureLengthControl_ = measureLengthControl;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n\n    /**\n     * Implementation measureArea\n     * @private\n     * @type {M.impl.control.Measure}\n     */\n    this.measureAreaControl_ = measureAreaControl;\n\n    /**\n     * Implementation measurePosition\n     * @private\n     * @type {M.impl.control.Measure}\n     */\n    this.measurePositionControl_ = measurePositionControl;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map - Map to add the plugin\n   * @param {HTMLElement} element - Container MeasureClear\n   * @api stable\n   */\n  addTo(map, element) {\n    this.facadeMap_ = map;\n    const button = element.querySelector('#measurebar-clear-btn');\n    button.addEventListener('click', this.onClick.bind(this));\n    ol.control.Control.call(this, {\n      element,\n      target: null,\n    });\n    map.getMapImpl().addControl(this);\n  }\n\n  /**\n   * This function remove items drawn on the map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  onClick() {\n    this.measureLengthControl_.clear();\n    this.measureAreaControl_.clear();\n    this.measurePositionControl_.clear();\n    this.deactivateOtherBtns();\n  }\n\n  /**\n   * Deactivates length measure and area measure buttons.\n   * @public\n   * @function\n   * @api\n   */\n  deactivateOtherBtns() {\n    const measureLength = this.facadeMap_.getControls().filter((control) => {\n      return (control instanceof FacadeMeasureLength);\n    })[0];\n    if (measureLength) {\n      measureLength.deactivate();\n    }\n\n    const measureArea = this.facadeMap_.getControls().filter((control) => {\n      return (control instanceof FacadeMeasureArea);\n    })[0];\n    if (measureArea) {\n      measureArea.deactivate();\n    }\n\n    const measurePosition = this.facadeMap_.getControls().filter((control) => {\n      return (control instanceof FacadeMeasurePosition);\n    })[0];\n    if (measurePosition) {\n      measurePosition.deactivate();\n    }\n  }\n\n  /**\n   * This function destroys this control and cleaning the HTML\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.element.remove();\n    this.facadeMap_ = null;\n  }\n}\n","import MeasureClearImpl from '../../impl/ol/js/measureclear';\nimport measureclearHTML from '../../templates/measureclear';\nimport { getValue } from './i18n/language';\n\n/**\n * @classdesc\n * Main constructor of the class. Creates a MeasureClear\n * control to provides clean items drawn on the map\n *\n * @constructor\n * @param {M.control.Measure} measureLengthControl - Control measure distances\n * @param {M.control.Measure} measureAreaControl - Control measure areas\n * @param {M.control.Measure} measurePositionControl - Control measure position\n * @extends {M.Control}\n * @api stable\n */\n\nexport default class MeasureClear extends M.Control {\n  constructor(measureLengthControl, measureAreaControl, measurePositionControl) {\n    // implementation of this control\n    const impl = new MeasureClearImpl(\n      measureLengthControl.getImpl(),\n      measureAreaControl.getImpl(),\n      measurePositionControl.getImpl(),\n    );\n\n    // calls the super constructor\n    super(impl, MeasureClear.NAME);\n\n    // checks if the implementation can create MeasureClear\n    if (M.utils.isUndefined(MeasureClearImpl)) {\n      M.Exception(getValue('exception.impl_clear'));\n    }\n\n    /**\n     * For destroying one function of the plugin\n     * @private\n     * @type {boolean}\n     */\n    this.destroyable = true;\n  }\n\n  /**\n   * This function creates the view to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map - Map to add the control\n   * @returns {HTMLElement} HTML template\n   * @api stable\n   */\n  createView(map) {\n    return M.template.compileSync(measureclearHTML, {\n      jsonp: true,\n      vars: {\n        translations: getValue('text'),\n      },\n    });\n  }\n\n  /**\n   * This function checks if an object is equals\n   * to this control\n   *\n   * @public\n   * @function\n   * @param {*} obj - Object to compare\n   * @returns {boolean} equals - Returns if they are equal or not\n   * @api stable\n   */\n  equals(obj) {\n    let equals = false;\n    if (obj instanceof MeasureClear) {\n      equals = (this.name === obj.name);\n    }\n    return equals;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    if (this.destroyable) {\n      this.destroyable = false;\n      this.getImpl().destroy();\n      this.map_.removeControls(this);\n      this.impl = null;\n    }\n  }\n}\n/**\n * Name to identify this control\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasureClear.NAME = 'measurebar';\n\n/**\n * Template for this controls\n * @const\n * @type {string}\n * @public\n * @api stable\n */\nMeasureClear.TEMPLATE = 'measureclear.html';\n","/**\n * @module M/plugin/MeasureBar\n */\nimport MeasureLength from './measurelength';\nimport MeasureArea from './measurearea';\nimport MeasureClear from './measureclear';\nimport MeasurePosition from './measureposition';\nimport { getValue } from './i18n/language';\nimport '../assets/css/measurebar';\n\nexport default class MeasureBar extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @api stable\n   */\n  constructor(options = {}) {\n    super();\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     *\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n\n    /**\n     * Position of plugin over map.\n     *\n     * @private\n     * @type {String} 'TL', 'TR', 'BR', 'BL'\n     */\n    this.position_ = options.position;\n\n\n    /**\n     * Control MeasureLength\n     * @private\n     * @type {M.control.MeasureLength}\n     */\n    this.measureLength_ = null;\n\n    /**\n     * Control MeasureArea\n     * @private\n     * @type {M.control.MeasureArea}\n     */\n    this.measureArea_ = null;\n\n    /**\n     * Control MeasureClear\n     * @private\n     * @type {M.control.MeasureClear}\n     */\n    this.measureClear_ = null;\n\n    /**\n     * Control MeasurePosition\n     * @private\n     * @type {M.control.MeasurePosition}\n     */\n    this.measurePosition_ = null;\n  }\n\n  /**\n   * @inheritdoc\n   * @public\n   * @function\n   * @param {M.Map} map - Map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.map_ = map;\n\n    this.measureLength_ = new MeasureLength();\n    this.measureArea_ = new MeasureArea();\n    this.measurePosition_ = new MeasurePosition();\n    this.measureClear_ = new MeasureClear(\n      this.measureLength_,\n      this.measureArea_,\n      this.measurePosition_,\n    );\n\n    this.controls_.push(\n      this.measureLength_,\n      this.measureArea_,\n      this.measureClear_,\n      this.measurePosition_,\n    );\n\n    this.panel_ = new M.ui.Panel('MeasureBar', {\n      collapsible: true,\n      position: M.ui.position[this.position_],\n      className: 'm-panel-measurebar',\n      collapsedButtonClass: 'measurebar-regla',\n      tooltip: getValue('text.tooltip'),\n    });\n\n    this.panel_.addControls(this.controls_);\n\n    this.map_.addPanels(this.panel_);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'measurebar';\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.position_}`;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls([\n      this.measureLength_,\n      this.measureArea_,\n      this.measureClear_,\n      this.measurePosition_,\n    ]);\n    this.map_ = null;\n    this.measureLength_ = null;\n    this.measureArea_ = null;\n    this.measureClear_ = null;\n    this.measurePosition_ = null;\n  }\n\n  /**\n   * This function return the control of plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getControls() {\n    const aControls = [];\n    aControls.push(\n      this.measureArea_,\n      this.measureClear_,\n      this.measureLength_,\n      this.measurePosition_,\n    );\n    return aControls;\n  }\n\n  /**\n   * This function compare if pluging recieved by param is instance of M.plugin.MeasureBar\n   *\n   * @public\n   * @function\n   * @param {M.plugin} plugin to comapre\n   * @api stable\n   */\n  equals(plugin) {\n    if (plugin instanceof MeasureBar) {\n      return true;\n    }\n    return false;\n  }\n}\n","import M$plugin$MeasureBar from './facade/js/measurebar';\n\nif (!window.M.plugin) window.M.plugin = {};\nwindow.M.plugin.MeasureBar = M$plugin$MeasureBar;\n"],"sourceRoot":""}